{
  "stats": {
    "suites": 12,
    "tests": 59,
    "passes": 59,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 59,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-03-17T01:04:38.201Z",
    "end": "2025-03-17T01:09:24.331Z",
    "duration": 286130
  },
  "results": [
    {
      "uuid": "ea3d7709-8a9a-47ca-88e3-c52e9bcb4683",
      "title": "",
      "fullFile": "cypress/e2e/security/security-level-transitions.cy.ts",
      "file": "cypress/e2e/security/security-level-transitions.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2065dd5c-1f7f-4c32-947f-05aebf0d42d9",
          "title": "Security Level Transitions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "maintains application integrity during security level changes",
              "fullTitle": "Security Level Transitions maintains application integrity during security level changes",
              "timedOut": null,
              "duration": 13237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const securityTransitions = [\n  // Test dramatic change (low to high)\n  {\n    from: [SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW],\n    to: [SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH]\n  },\n  // Test mixed security levels\n  {\n    from: [\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH\n    ],\n    to: [\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.LOW,\n      SECURITY_LEVELS.MODERATE\n    ]\n  }\n];\nfor (const transition of securityTransitions) {\n  cy.log(`Testing transition from ${transition.from} to ${transition.to}`);\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(transition.from[0], { force: true });\n      cy.wait(300);\n      cy.get(\"select\").eq(1).select(transition.from[1], { force: true });\n      cy.wait(300);\n      cy.get(\"select\").eq(2).select(transition.from[2], { force: true });\n    } else {\n      cy.setSecurityLevels(...transition.from);\n    }\n  });\n  cy.wait(1e3);\n  cy.screenshot(`transition-initial-${transition.from.join(\"-\")}`);\n  cy.log(\"Verifying initial widget state\");\n  let initialWidgetFound = false;\n  cy.get(\"body\").then(($body) => {\n    const summarySelectors = [\n      '[data-testid=\"widget-security-summary\"]',\n      '[data-testid=\"security-summary\"]',\n      '[data-testid*=\"security\"][data-testid*=\"summary\"]'\n    ];\n    for (const selector of summarySelectors) {\n      if ($body.find(selector).length > 0) {\n        initialWidgetFound = true;\n        cy.log(`Found security summary with selector: ${selector}`);\n        cy.get(selector).should(\"exist\").as(\"securitySummary\");\n        break;\n      }\n    }\n    if (!initialWidgetFound) {\n      cy.log(\"⚠️ Could not find security summary widget\");\n      cy.get(\"body\").as(\"securitySummary\");\n    }\n  });\n  cy.get(\"body\").should(\"not.contain.text\", \"undefined\");\n  cy.get(\"body\").should(\"not.contain.text\", \"NaN\");\n  cy.get(\"body\").invoke(\"text\").as(\"initialBodyText\");\n  cy.log(`Changing to security levels: ${transition.to}`);\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(transition.to[0], { force: true });\n      cy.wait(300);\n      cy.get(\"select\").eq(1).select(transition.to[1], { force: true });\n      cy.wait(300);\n      cy.get(\"select\").eq(2).select(transition.to[2], { force: true });\n    } else {\n      cy.setSecurityLevels(...transition.to);\n    }\n  });\n  cy.wait(1e3);\n  cy.screenshot(`transition-after-${transition.to.join(\"-\")}`);\n  if (initialWidgetFound) {\n    cy.get(\"@securitySummary\").should(\"exist\");\n  }\n  cy.get(\"body\").invoke(\"text\").then((newBodyText) => {\n    cy.get(\"@initialBodyText\").then((initialBodyText) => {\n      if (newBodyText !== initialBodyText) {\n        cy.log(\"✓ Page content changed after security level transition\");\n      } else {\n        cy.log(\"⚠️ Page content did not change after transition\");\n      }\n    });\n  });\n  cy.get(\"body\").should(\"not.contain.text\", \"undefined\");\n  cy.get(\"body\").should(\"not.contain.text\", \"NaN\");\n  cy.get(\"body\").should(\"not.contain.text\", \"Error\");\n  cy.window().then((win) => {\n    if (win.consoleErrors && win.consoleErrors.length > 0) {\n      cy.log(`⚠️ Console errors found: ${win.consoleErrors.length}`);\n      win.consoleErrors.forEach((err, i) => {\n        if (i < 3) {\n          cy.log(`Error ${i + 1}: ${err.substring(0, 100)}...`);\n        }\n      });\n    } else {\n      cy.log(\"✓ No console errors detected\");\n    }\n  });\n}",
              "err": {},
              "uuid": "96247caa-d7dc-42fd-be1e-4c06e25c9fb7",
              "parentUUID": "2065dd5c-1f7f-4c32-947f-05aebf0d42d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96247caa-d7dc-42fd-be1e-4c06e25c9fb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13237,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "63b630c1-7e26-4168-b39a-9a2c586007a1",
      "title": "",
      "fullFile": "cypress/e2e/business-outcomes/compliance-validation.cy.ts",
      "file": "cypress/e2e/business-outcomes/compliance-validation.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f0fba4cc-e397-4694-b54e-28678cad5db0",
          "title": "Compliance Status Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "accurately reflects compliance status based on security levels",
              "fullTitle": "Compliance Status Validation accurately reflects compliance status based on security levels",
              "timedOut": null,
              "duration": 7420,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.screenshot(\"compliance-validation-start\");\nconst complianceScenarios = [\n  {\n    levels: [SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW],\n    expectedStatus: /minimal|basic|non-compliant|low/i,\n    expectedFrameworks: 0\n  },\n  {\n    levels: [\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH\n    ],\n    expectedStatus: /compliant|meets requirements|high/i,\n    expectedFrameworks: 1\n    // Less strict - at least one framework\n  }\n];\ncomplianceScenarios.forEach((scenario, index) => {\n  cy.log(\n    `Testing compliance scenario ${index + 1} with levels: ${scenario.levels.join(\", \")}`\n  );\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(scenario.levels[0], { force: true });\n      cy.wait(300);\n      cy.get(\"select\").eq(1).select(scenario.levels[1], { force: true });\n      cy.wait(300);\n      cy.get(\"select\").eq(2).select(scenario.levels[2], { force: true });\n    } else {\n      cy.setSecurityLevels(...scenario.levels);\n    }\n  });\n  cy.wait(1e3);\n  cy.screenshot(`compliance-scenario-${index + 1}`);\n  cy.get(\"body\").then(($body) => {\n    const selectors = [\n      '[data-testid=\"widget-compliance-status\"]',\n      '[data-testid=\"compliance-status\"]',\n      '[data-testid*=\"compliance\"]',\n      '[class*=\"compliance\"]'\n    ];\n    let foundSelector = \"\";\n    for (const selector of selectors) {\n      if ($body.find(selector).length > 0) {\n        foundSelector = selector;\n        break;\n      }\n    }\n    if (foundSelector) {\n      cy.log(`Found compliance widget with selector: ${foundSelector}`);\n      cy.get(foundSelector).within(() => {\n        cy.contains(scenario.expectedStatus).should(\"exist\");\n        if (scenario.expectedFrameworks > 0) {\n          cy.get(\n            'li, [data-testid*=\"framework-item\"], [data-testid*=\"compliance-item\"]'\n          ).should(\"have.length.at.least\", scenario.expectedFrameworks);\n        }\n      });\n    } else {\n      cy.log(\"⚠️ Compliance widget not found with standard selectors\");\n      cy.contains(scenario.expectedStatus).should(\"exist\");\n    }\n  });\n});",
              "err": {},
              "uuid": "94a05604-6cc4-4aae-947f-420ff2fbdea8",
              "parentUUID": "f0fba4cc-e397-4694-b54e-28678cad5db0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94a05604-6cc4-4aae-947f-420ff2fbdea8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7420,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc956bfa-867b-4c25-b604-be3062abbbbc",
      "title": "",
      "fullFile": "cypress/e2e/widgets/all-widgets-security-test.cy.ts",
      "file": "cypress/e2e/widgets/all-widgets-security-test.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5950dccf-a472-489d-aaff-4f97817e470f",
          "title": "All Widgets Security Level Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "handles key security combinations for security-summary",
              "fullTitle": "All Widgets Security Level Tests handles key security combinations for security-summary",
              "timedOut": null,
              "duration": 6461,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const widgetExists = $body.find(`[data-testid*=\"${widget}\"]`).length > 0;\n  if (!widgetExists) {\n    cy.log(\n      `⚠️ WARNING: Widget \"${widget}\" not found - skipping security level tests`\n    );\n    return;\n  }\n  cy.findWidget(widget).scrollIntoView();\n  const hasSelects = $body.find(\"select\").length >= 3;\n  if (!hasSelects) {\n    cy.log(\n      \"⚠️ WARNING: Not enough select elements found to set security levels\"\n    );\n    return;\n  }\n  criticalCombinations.forEach(([avail, integ, conf]) => {\n    cy.log(`Testing ${avail}-${integ}-${conf} combination`);\n    cy.get(\"body\").then(($updated) => {\n      const selects = $updated.find(\"select\");\n      if (selects.length >= 3) {\n        cy.get(\"select\").eq(0).select(avail, { force: true });\n        cy.get(\"select\").eq(1).select(integ, { force: true });\n        cy.get(\"select\").eq(2).select(conf, { force: true });\n      } else {\n        cy.setSecurityLevels(avail, integ, conf);\n      }\n    });\n    cy.wait(300);\n    cy.findWidget(widget).should(\"exist\").should(\"be.visible\").then(($widget) => {\n      expect($widget.text().trim().length).to.be.greaterThan(0);\n    });\n  });\n});",
              "err": {},
              "uuid": "1c40a2d3-dda8-446f-979b-a227913994f5",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles key security combinations for business-impact",
              "fullTitle": "All Widgets Security Level Tests handles key security combinations for business-impact",
              "timedOut": null,
              "duration": 5217,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const widgetExists = $body.find(`[data-testid*=\"${widget}\"]`).length > 0;\n  if (!widgetExists) {\n    cy.log(\n      `⚠️ WARNING: Widget \"${widget}\" not found - skipping security level tests`\n    );\n    return;\n  }\n  cy.findWidget(widget).scrollIntoView();\n  const hasSelects = $body.find(\"select\").length >= 3;\n  if (!hasSelects) {\n    cy.log(\n      \"⚠️ WARNING: Not enough select elements found to set security levels\"\n    );\n    return;\n  }\n  criticalCombinations.forEach(([avail, integ, conf]) => {\n    cy.log(`Testing ${avail}-${integ}-${conf} combination`);\n    cy.get(\"body\").then(($updated) => {\n      const selects = $updated.find(\"select\");\n      if (selects.length >= 3) {\n        cy.get(\"select\").eq(0).select(avail, { force: true });\n        cy.get(\"select\").eq(1).select(integ, { force: true });\n        cy.get(\"select\").eq(2).select(conf, { force: true });\n      } else {\n        cy.setSecurityLevels(avail, integ, conf);\n      }\n    });\n    cy.wait(300);\n    cy.findWidget(widget).should(\"exist\").should(\"be.visible\").then(($widget) => {\n      expect($widget.text().trim().length).to.be.greaterThan(0);\n    });\n  });\n});",
              "err": {},
              "uuid": "915e1b79-f335-4a04-b516-6174e235ca5e",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles key security combinations for cost-estimation",
              "fullTitle": "All Widgets Security Level Tests handles key security combinations for cost-estimation",
              "timedOut": null,
              "duration": 5098,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const widgetExists = $body.find(`[data-testid*=\"${widget}\"]`).length > 0;\n  if (!widgetExists) {\n    cy.log(\n      `⚠️ WARNING: Widget \"${widget}\" not found - skipping security level tests`\n    );\n    return;\n  }\n  cy.findWidget(widget).scrollIntoView();\n  const hasSelects = $body.find(\"select\").length >= 3;\n  if (!hasSelects) {\n    cy.log(\n      \"⚠️ WARNING: Not enough select elements found to set security levels\"\n    );\n    return;\n  }\n  criticalCombinations.forEach(([avail, integ, conf]) => {\n    cy.log(`Testing ${avail}-${integ}-${conf} combination`);\n    cy.get(\"body\").then(($updated) => {\n      const selects = $updated.find(\"select\");\n      if (selects.length >= 3) {\n        cy.get(\"select\").eq(0).select(avail, { force: true });\n        cy.get(\"select\").eq(1).select(integ, { force: true });\n        cy.get(\"select\").eq(2).select(conf, { force: true });\n      } else {\n        cy.setSecurityLevels(avail, integ, conf);\n      }\n    });\n    cy.wait(300);\n    cy.findWidget(widget).should(\"exist\").should(\"be.visible\").then(($widget) => {\n      expect($widget.text().trim().length).to.be.greaterThan(0);\n    });\n  });\n});",
              "err": {},
              "uuid": "051b3929-8017-45f0-aa5d-a74144d79862",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles key security combinations for compliance-status",
              "fullTitle": "All Widgets Security Level Tests handles key security combinations for compliance-status",
              "timedOut": null,
              "duration": 4897,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const widgetExists = $body.find(`[data-testid*=\"${widget}\"]`).length > 0;\n  if (!widgetExists) {\n    cy.log(\n      `⚠️ WARNING: Widget \"${widget}\" not found - skipping security level tests`\n    );\n    return;\n  }\n  cy.findWidget(widget).scrollIntoView();\n  const hasSelects = $body.find(\"select\").length >= 3;\n  if (!hasSelects) {\n    cy.log(\n      \"⚠️ WARNING: Not enough select elements found to set security levels\"\n    );\n    return;\n  }\n  criticalCombinations.forEach(([avail, integ, conf]) => {\n    cy.log(`Testing ${avail}-${integ}-${conf} combination`);\n    cy.get(\"body\").then(($updated) => {\n      const selects = $updated.find(\"select\");\n      if (selects.length >= 3) {\n        cy.get(\"select\").eq(0).select(avail, { force: true });\n        cy.get(\"select\").eq(1).select(integ, { force: true });\n        cy.get(\"select\").eq(2).select(conf, { force: true });\n      } else {\n        cy.setSecurityLevels(avail, integ, conf);\n      }\n    });\n    cy.wait(300);\n    cy.findWidget(widget).should(\"exist\").should(\"be.visible\").then(($widget) => {\n      expect($widget.text().trim().length).to.be.greaterThan(0);\n    });\n  });\n});",
              "err": {},
              "uuid": "90a76899-d65d-48a1-8fbb-29917bbde019",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles security level transitions smoothly for security-summary widget",
              "fullTitle": "All Widgets Security Level Tests handles security level transitions smoothly for security-summary widget",
              "timedOut": null,
              "duration": 3899,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).scrollIntoView();\nconst transitionSequence = [\n  [SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW],\n  [SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH],\n  [\n    SECURITY_LEVELS.MODERATE,\n    SECURITY_LEVELS.MODERATE,\n    SECURITY_LEVELS.MODERATE\n  ],\n  [SECURITY_LEVELS.LOW, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.MODERATE]\n];\ntransitionSequence.forEach(([avail, integ, conf], index) => {\n  cy.log(`Testing transition ${index + 1}: ${avail}, ${integ}, ${conf}`);\n  cy.setSecurityLevels(avail, integ, conf);\n  cy.wait(100);\n  cy.findWidget(widgetName).should(\"exist\");\n});\ncy.findWidget(widgetName).should(\"be.visible\").invoke(\"text\").should(\"not.be.empty\");",
              "err": {},
              "uuid": "f9696417-94b5-4070-8310-197d0da52275",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles security level transitions smoothly for radar-chart widget",
              "fullTitle": "All Widgets Security Level Tests handles security level transitions smoothly for radar-chart widget",
              "timedOut": null,
              "duration": 3880,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).scrollIntoView();\nconst transitionSequence = [\n  [SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW],\n  [SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH],\n  [\n    SECURITY_LEVELS.MODERATE,\n    SECURITY_LEVELS.MODERATE,\n    SECURITY_LEVELS.MODERATE\n  ],\n  [SECURITY_LEVELS.LOW, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.MODERATE]\n];\ntransitionSequence.forEach(([avail, integ, conf], index) => {\n  cy.log(`Testing transition ${index + 1}: ${avail}, ${integ}, ${conf}`);\n  cy.setSecurityLevels(avail, integ, conf);\n  cy.wait(100);\n  cy.findWidget(widgetName).should(\"exist\");\n});\ncy.findWidget(widgetName).should(\"be.visible\").invoke(\"text\").should(\"not.be.empty\");",
              "err": {},
              "uuid": "8c5eaed5-4ea7-4569-939a-cdc5d0a6e888",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles security level transitions smoothly for compliance-status widget",
              "fullTitle": "All Widgets Security Level Tests handles security level transitions smoothly for compliance-status widget",
              "timedOut": null,
              "duration": 3905,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).scrollIntoView();\nconst transitionSequence = [\n  [SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW],\n  [SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.HIGH],\n  [\n    SECURITY_LEVELS.MODERATE,\n    SECURITY_LEVELS.MODERATE,\n    SECURITY_LEVELS.MODERATE\n  ],\n  [SECURITY_LEVELS.LOW, SECURITY_LEVELS.HIGH, SECURITY_LEVELS.MODERATE]\n];\ntransitionSequence.forEach(([avail, integ, conf], index) => {\n  cy.log(`Testing transition ${index + 1}: ${avail}, ${integ}, ${conf}`);\n  cy.setSecurityLevels(avail, integ, conf);\n  cy.wait(100);\n  cy.findWidget(widgetName).should(\"exist\");\n});\ncy.findWidget(widgetName).should(\"be.visible\").invoke(\"text\").should(\"not.be.empty\");",
              "err": {},
              "uuid": "a81cfc70-3f51-4843-9614-720c4c6f4a2e",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows appropriate widgets for each security profile",
              "fullTitle": "All Widgets Security Level Tests shows appropriate widgets for each security profile",
              "timedOut": null,
              "duration": 3030,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const securityProfiles = [\n  {\n    name: \"None/Low Security\",\n    levels: [SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW, SECURITY_LEVELS.LOW],\n    expectedWidgets: [\n      \"security-summary\",\n      \"security-level\",\n      \"cost-estimation\"\n    ],\n    unexpectedWidgets: [\"cia-impact-summary\", \"radar-chart\"]\n    // These might not be visible at low security\n  },\n  {\n    name: \"High Security\",\n    levels: [\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH\n    ],\n    expectedWidgets: [\n      \"security-summary\",\n      \"security-level\",\n      \"cost-estimation\",\n      \"value-creation\",\n      \"business-impact\",\n      \"compliance-status\"\n    ],\n    unexpectedWidgets: []\n    // At high security, most widgets should be visible\n  }\n];\nsecurityProfiles.forEach((profile) => {\n  cy.log(`Testing ${profile.name} profile`);\n  cy.setSecurityLevels(...profile.levels);\n  cy.wait(500);\n  profile.expectedWidgets.forEach((widgetId) => {\n    cy.findWidget(widgetId).should(\"exist\");\n  });\n  if (profile.unexpectedWidgets.length > 0) {\n    cy.log(\n      `Note: Some widgets may not be visible in ${profile.name} profile`\n    );\n  }\n});",
              "err": {},
              "uuid": "c6d3f540-369a-4f54-88a6-dbdd420e0d43",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles extreme security transitions without errors",
              "fullTitle": "All Widgets Security Level Tests handles extreme security transitions without errors",
              "timedOut": null,
              "duration": 2647,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setSecurityLevels(\n  SECURITY_LEVELS.NONE,\n  SECURITY_LEVELS.NONE,\n  SECURITY_LEVELS.NONE\n);\ncy.wait(300);\ncy.window().then((win) => {\n  win.consoleErrors = [];\n  cy.setSecurityLevels(\n    SECURITY_LEVELS.VERY_HIGH,\n    SECURITY_LEVELS.VERY_HIGH,\n    SECURITY_LEVELS.VERY_HIGH\n  );\n  cy.wait(500);\n  cy.wrap(win.consoleErrors || []).should(\"have.length.lessThan\", 3);\n});",
              "err": {},
              "uuid": "ef6c4f81-ece1-40a9-8809-44eb58300b80",
              "parentUUID": "5950dccf-a472-489d-aaff-4f97817e470f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c40a2d3-dda8-446f-979b-a227913994f5",
            "915e1b79-f335-4a04-b516-6174e235ca5e",
            "051b3929-8017-45f0-aa5d-a74144d79862",
            "90a76899-d65d-48a1-8fbb-29917bbde019",
            "f9696417-94b5-4070-8310-197d0da52275",
            "8c5eaed5-4ea7-4569-939a-cdc5d0a6e888",
            "a81cfc70-3f51-4843-9614-720c4c6f4a2e",
            "c6d3f540-369a-4f54-88a6-dbdd420e0d43",
            "ef6c4f81-ece1-40a9-8809-44eb58300b80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39034,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "af0b178a-9f0a-4b84-8ad0-8ed1773a24c5",
      "title": "",
      "fullFile": "cypress/e2e/widgets/availability-impact-widget.cy.ts",
      "file": "cypress/e2e/widgets/availability-impact-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ce3a5ba-b980-49e9-b3c4-27f1db13d09d",
          "title": "Availability Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays availability impact analysis",
              "fullTitle": "Availability Impact Widget displays availability impact analysis",
              "timedOut": null,
              "duration": 1580,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const selectors = [\n    '[data-testid*=\"availability-impact\"]',\n    '[data-testid=\"widget-availability-impact-container\"]',\n    '[data-testid=\"widget-availability-impact\"]',\n    '[class*=\"availability-impact\"]'\n  ];\n  let foundSelector = false;\n  for (const selector of selectors) {\n    if ($body.find(selector).length > 0) {\n      cy.log(`Found availability widget with selector: ${selector}`);\n      cy.get(selector).should(\"exist\").scrollIntoView().should(\"be.visible\");\n      foundSelector = true;\n      break;\n    }\n  }\n  if (!foundSelector) {\n    cy.log(\n      \"⚠️ Could not find availability impact widget with standard selectors\"\n    );\n    return;\n  }\n  cy.verifyContentPresent([\n    /availability|uptime|recovery/i,\n    /impact|effect|consequence/i\n  ]);\n});",
              "err": {},
              "uuid": "40000bde-1090-464e-8c53-e0e477c87e81",
              "parentUUID": "6ce3a5ba-b980-49e9-b3c4-27f1db13d09d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates content when security levels change",
              "fullTitle": "Availability Impact Widget updates content when security levels change",
              "timedOut": null,
              "duration": 2937,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"availability-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  const initialContent = $widget.text();\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.LOW, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.LOW\n      );\n    }\n  });\n  cy.wait(500);\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.HIGH, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH\n      );\n    }\n  });\n  cy.wait(500);\n  cy.findWidget(\"availability-impact\").invoke(\"text\").then((newContent) => {\n    cy.log(`Initial content length: ${initialContent.length}`);\n    cy.log(`New content length: ${newContent.length}`);\n  });\n});",
              "err": {},
              "uuid": "c7ea286e-6921-4913-991c-d8168b3623a6",
              "parentUUID": "6ce3a5ba-b980-49e9-b3c4-27f1db13d09d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows technical metrics and recommendations",
              "fullTitle": "Availability Impact Widget shows technical metrics and recommendations",
              "timedOut": null,
              "duration": 1995,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"availability-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.MODERATE, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.MODERATE, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.MODERATE, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.MODERATE,\n        SECURITY_LEVELS.MODERATE,\n        SECURITY_LEVELS.MODERATE\n      );\n    }\n  });\n  cy.wait(500);\n  cy.log(\"Checking for availability metrics terminology\");\n  cy.get(\"body\").contains(/rto|rpo|mttr|uptime/i);\n  cy.log(\"Checking for recommendation terminology\");\n  cy.get(\"body\").contains(/recommend|suggest/i);\n});",
              "err": {},
              "uuid": "2e7a0743-4730-40e3-8349-a5dba6da0b83",
              "parentUUID": "6ce3a5ba-b980-49e9-b3c4-27f1db13d09d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays business impact information",
              "fullTitle": "Availability Impact Widget displays business impact information",
              "timedOut": null,
              "duration": 1979,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"availability-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.MODERATE, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.LOW, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.MODERATE,\n        SECURITY_LEVELS.LOW\n      );\n    }\n  });\n  cy.wait(500);\n  cy.contains(/business impact|effect on business|operational impact/i);\n});",
              "err": {},
              "uuid": "c2b44e35-8fcf-4f02-8992-84cf3f4ad543",
              "parentUUID": "6ce3a5ba-b980-49e9-b3c4-27f1db13d09d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40000bde-1090-464e-8c53-e0e477c87e81",
            "c7ea286e-6921-4913-991c-d8168b3623a6",
            "2e7a0743-4730-40e3-8349-a5dba6da0b83",
            "c2b44e35-8fcf-4f02-8992-84cf3f4ad543"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7d24ebeb-ba69-4e14-b71c-7696f01c468a",
      "title": "",
      "fullFile": "cypress/e2e/widgets/business-impact-widget.cy.ts",
      "file": "cypress/e2e/widgets/business-impact-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d72b740e-dfc2-4bcc-acac-d8e9c10e3907",
          "title": "Business Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the business impact widget",
              "fullTitle": "Business Impact Widget should display the business impact widget",
              "timedOut": null,
              "duration": 1539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const selectors = [\n    '[data-testid=\"widget-business-impact-container\"]',\n    '[data-testid=\"business-impact-widget\"]',\n    '[data-testid*=\"business-impact\"]',\n    '[class*=\"business-impact\"]'\n  ];\n  let found = false;\n  for (const selector of selectors) {\n    if ($body.find(selector).length > 0) {\n      cy.get(selector).should(\"exist\").and(\"be.visible\");\n      found = true;\n      break;\n    }\n  }\n  if (!found) {\n    cy.log(\"⚠️ Business impact widget not found with standard selectors\");\n  }\n});",
              "err": {},
              "uuid": "56adab0d-1c77-49ec-8136-630f620bbd77",
              "parentUUID": "d72b740e-dfc2-4bcc-acac-d8e9c10e3907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates content when security levels change",
              "fullTitle": "Business Impact Widget updates content when security levels change",
              "timedOut": null,
              "duration": 2868,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"business-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  const initialContent = $widget.text();\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.LOW, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.LOW\n      );\n    }\n  });\n  cy.wait(500);\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.HIGH, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH\n      );\n    }\n  });\n  cy.wait(500);\n  cy.findWidget(\"business-impact\").invoke(\"text\").then((newContent) => {\n    if (newContent !== initialContent) {\n      cy.log(\n        \"✅ Content changed as expected after security level change\"\n      );\n    } else {\n      cy.log(\"⚠️ Content did not change after security level change\");\n    }\n  });\n});",
              "err": {},
              "uuid": "2f5e3603-e49f-405b-9e01-0ca9dbb396a2",
              "parentUUID": "d72b740e-dfc2-4bcc-acac-d8e9c10e3907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has functioning CIA tab navigation",
              "fullTitle": "Business Impact Widget has functioning CIA tab navigation",
              "timedOut": null,
              "duration": 1692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"business-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  const tabSelectors = [\n    'button, [role=\"tab\"]',\n    'button:contains(\"Availability\"), button:contains(\"Integrity\"), button:contains(\"Confidentiality\")'\n  ];\n  let tabsFound = false;\n  for (const selector of tabSelectors) {\n    const $tabs = $widget.find(selector);\n    if ($tabs.length >= 2) {\n      tabsFound = true;\n      cy.log(`Found ${$tabs.length} tabs with selector: ${selector}`);\n      cy.wrap($widget).find(selector).each(($tab, index) => {\n        if (index > 0 && index < 3) {\n          cy.log(`Clicking tab ${index}`);\n          cy.wrap($tab).click({ force: true });\n          cy.wait(300);\n        }\n      });\n      break;\n    }\n  }\n  if (!tabsFound) {\n    cy.log(\n      \"⚠️ No tabs found in business impact widget - this might be expected if the widget doesn't use tabs\"\n    );\n  }\n});",
              "err": {},
              "uuid": "4762985b-8e87-4695-8603-b94681e39c79",
              "parentUUID": "d72b740e-dfc2-4bcc-acac-d8e9c10e3907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays appropriate impact cards for high security",
              "fullTitle": "Business Impact Widget displays appropriate impact cards for high security",
              "timedOut": null,
              "duration": 2030,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"business-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.HIGH, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH\n      );\n    }\n  });\n  cy.wait(500);\n  cy.wrap($widget).within(() => {\n    cy.contains(/impact|effect|consequence/i).should(\"exist\");\n    cy.contains(/financial|revenue|cost/i).should(\"exist\");\n    cy.contains(/operational|process|function/i).should(\"exist\");\n  });\n});",
              "err": {},
              "uuid": "283ecce0-84b5-437c-acff-1e916dc0a938",
              "parentUUID": "d72b740e-dfc2-4bcc-acac-d8e9c10e3907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows different impacts for mixed security levels",
              "fullTitle": "Business Impact Widget shows different impacts for mixed security levels",
              "timedOut": null,
              "duration": 1898,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"business-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.get(\"body\").then(($body) => {\n    if ($body.find(\"select\").length >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.MODERATE, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.MODERATE\n      );\n    }\n  });\n  cy.wait(500);\n  cy.wrap($widget).invoke(\"text\").then((text) => {\n    const patterns = [\n      /availability|integrity|confidentiality/i,\n      /impact|effect|consequence/i,\n      /business|operation|financial/i\n    ];\n    const matchingPatterns = patterns.filter(\n      (pattern) => pattern.test(text)\n    );\n    cy.log(\n      `Found ${matchingPatterns.length} matching patterns in widget`\n    );\n    expect(matchingPatterns.length).to.be.greaterThan(0);\n  });\n});",
              "err": {},
              "uuid": "827ba12b-38e2-49f0-9645-7e883c13cc09",
              "parentUUID": "d72b740e-dfc2-4bcc-acac-d8e9c10e3907",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56adab0d-1c77-49ec-8136-630f620bbd77",
            "2f5e3603-e49f-405b-9e01-0ca9dbb396a2",
            "4762985b-8e87-4695-8603-b94681e39c79",
            "283ecce0-84b5-437c-acff-1e916dc0a938",
            "827ba12b-38e2-49f0-9645-7e883c13cc09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10027,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "591b7780-baaf-4f85-aa03-208a99fe185a",
      "title": "",
      "fullFile": "cypress/e2e/widgets/cia-impact-summary-widget.cy.ts",
      "file": "cypress/e2e/widgets/cia-impact-summary-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "825a0e7c-9a74-4113-857f-6064c4ca21c9",
          "title": "CIA Impact Summary Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cia-impact-summary widget should exist",
              "fullTitle": "CIA Impact Summary Widget cia-impact-summary widget should exist",
              "timedOut": null,
              "duration": 4071,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "58a4c126-a347-4589-83ef-ea8ada92d6b2",
              "parentUUID": "825a0e7c-9a74-4113-857f-6064c4ca21c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates content when security levels change",
              "fullTitle": "CIA Impact Summary Widget updates content when security levels change",
              "timedOut": null,
              "duration": 7140,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(\"cia-impact-summary\");",
              "err": {},
              "uuid": "dc5b8b9e-310a-4723-9073-485bac9fc1bf",
              "parentUUID": "825a0e7c-9a74-4113-857f-6064c4ca21c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows comprehensive CIA impact summary at high security levels",
              "fullTitle": "CIA Impact Summary Widget shows comprehensive CIA impact summary at high security levels",
              "timedOut": null,
              "duration": 5057,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"cia-impact-summary\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.wait(1e3);\ncy.findWidget(\"cia-impact-summary\").then(($widget) => {\n  const text = $widget.text().toLowerCase();\n  const hasAvailabilityTerms = /availability|uptime|recovery|access/i.test(\n    text\n  );\n  const hasIntegrityTerms = /integrity|accuracy|valid|correct/i.test(text);\n  const hasConfidentialTerms = /confidential|privacy|sensitive|secret/i.test(text);\n  cy.log(`Found availability terms: ${hasAvailabilityTerms}`);\n  cy.log(`Found integrity terms: ${hasIntegrityTerms}`);\n  cy.log(`Found confidentiality terms: ${hasConfidentialTerms}`);\n  expect(hasAvailabilityTerms || hasIntegrityTerms || hasConfidentialTerms).to.be.true;\n});",
              "err": {},
              "uuid": "492f568b-221f-497f-a877-693b0a01119b",
              "parentUUID": "825a0e7c-9a74-4113-857f-6064c4ca21c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "properly displays mixed security levels",
              "fullTitle": "CIA Impact Summary Widget properly displays mixed security levels",
              "timedOut": null,
              "duration": 6978,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"cia-impact-summary\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.MODERATE\n);\ncy.wait(1e3);\ncy.findWidget(\"cia-impact-summary\").then(($widgetBefore) => {\n  const textBefore = $widgetBefore.text();\n  cy.setSecurityLevels(\n    SECURITY_LEVELS.LOW,\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.LOW\n  );\n  cy.wait(1e3);\n  cy.findWidget(\"cia-impact-summary\").then(($widgetAfter) => {\n    const textAfter = $widgetAfter.text();\n    expect(textAfter).not.to.equal(textBefore);\n  });\n});",
              "err": {},
              "uuid": "348ce5f6-a1a2-439b-be51-1906a636d9c3",
              "parentUUID": "825a0e7c-9a74-4113-857f-6064c4ca21c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58a4c126-a347-4589-83ef-ea8ada92d6b2",
            "dc5b8b9e-310a-4723-9073-485bac9fc1bf",
            "492f568b-221f-497f-a877-693b0a01119b",
            "348ce5f6-a1a2-439b-be51-1906a636d9c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ca939dce-2c5a-4c48-b40a-3493bf9598e7",
      "title": "",
      "fullFile": "cypress/e2e/widgets/cia-impact-widgets.cy.ts",
      "file": "cypress/e2e/widgets/cia-impact-widgets.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0333f785-c30c-43ce-abd8-c4d78dad0500",
          "title": "Availability Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "availability-impact widget should exist",
              "fullTitle": "Availability Impact Widget availability-impact widget should exist",
              "timedOut": null,
              "duration": 3977,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "f14e7dcd-18be-4f56-9f55-f876d81c3f00",
              "parentUUID": "0333f785-c30c-43ce-abd8-c4d78dad0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates impact assessments when security levels change",
              "fullTitle": "Availability Impact Widget updates impact assessments when security levels change",
              "timedOut": null,
              "duration": 6854,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(widget.id);",
              "err": {},
              "uuid": "6af639ae-daa4-4afd-be1a-b49d79cfb9b1",
              "parentUUID": "0333f785-c30c-43ce-abd8-c4d78dad0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows detailed ${widget.name.toLowerCase()} impact with high security",
              "fullTitle": "Availability Impact Widget shows detailed ${widget.name.toLowerCase()} impact with high security",
              "timedOut": null,
              "duration": 5050,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(`Looking for widget ${widget.id}`);\ncy.findWidget(widget.id).then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(`⚠️ Widget ${widget.id} not found - skipping test`);\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  const availLevel = widget.id === \"availability-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  const intLevel = widget.id === \"integrity-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  const confLevel = widget.id === \"confidentiality-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  cy.setSecurityLevels(availLevel, intLevel, confLevel);\n  cy.wait(1e3);\n  cy.wrap($widget).then(($updatedWidget) => {\n    const widgetText = $updatedWidget.text().toLowerCase();\n    const hasImpactTerms = /impact|effect|influence|security|protection/i.test(widgetText);\n    let hasSpecificTerms = false;\n    if (Array.isArray(widget.pattern)) {\n      hasSpecificTerms = widget.pattern.some(\n        (pattern) => pattern.test(widgetText)\n      );\n    } else if (widget.pattern instanceof RegExp) {\n      hasSpecificTerms = widget.pattern.test(widgetText);\n    }\n    cy.log(`Widget has impact terms: ${hasImpactTerms}`);\n    cy.log(`Widget has specific terms: ${hasSpecificTerms}`);\n    expect(hasImpactTerms || hasSpecificTerms).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "34b0ecbd-e634-444b-bcb2-fe63256cd15d",
              "parentUUID": "0333f785-c30c-43ce-abd8-c4d78dad0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays appropriate recommendations",
              "fullTitle": "Availability Impact Widget displays appropriate recommendations",
              "timedOut": null,
              "duration": 4944,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widget.id).then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(`⚠️ Widget ${widget.id} not found - skipping test`);\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.setSecurityLevels(\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.HIGH\n  );\n  cy.wait(1e3);\n  cy.wrap($widget).then(($updatedWidget) => {\n    const widgetText = $updatedWidget.text().toLowerCase();\n    const hasRecommendationTerms = /recommend|suggest|should|implement|consider|best practice/i.test(\n      widgetText\n    );\n    cy.log(`Widget has recommendation terms: ${hasRecommendationTerms}`);\n    if (!hasRecommendationTerms) {\n      cy.log(`Widget text: ${widgetText.substring(0, 200)}...`);\n    }\n    cy.log(`Test completed for ${widget.name}`);\n  });\n});",
              "err": {},
              "uuid": "8aecd286-942d-4e96-8128-5cbf9e35d05c",
              "parentUUID": "0333f785-c30c-43ce-abd8-c4d78dad0500",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f14e7dcd-18be-4f56-9f55-f876d81c3f00",
            "6af639ae-daa4-4afd-be1a-b49d79cfb9b1",
            "34b0ecbd-e634-444b-bcb2-fe63256cd15d",
            "8aecd286-942d-4e96-8128-5cbf9e35d05c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68bef485-d893-4000-9617-282243a6e108",
          "title": "Integrity Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "integrity-impact widget should exist",
              "fullTitle": "Integrity Impact Widget integrity-impact widget should exist",
              "timedOut": null,
              "duration": 3211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "d8b80a98-0cf8-43d7-b04a-1b94cf2de823",
              "parentUUID": "68bef485-d893-4000-9617-282243a6e108",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates impact assessments when security levels change",
              "fullTitle": "Integrity Impact Widget updates impact assessments when security levels change",
              "timedOut": null,
              "duration": 6785,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(widget.id);",
              "err": {},
              "uuid": "4031b4da-d80a-4e2e-8e97-101c776c03b9",
              "parentUUID": "68bef485-d893-4000-9617-282243a6e108",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows detailed ${widget.name.toLowerCase()} impact with high security",
              "fullTitle": "Integrity Impact Widget shows detailed ${widget.name.toLowerCase()} impact with high security",
              "timedOut": null,
              "duration": 5010,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(`Looking for widget ${widget.id}`);\ncy.findWidget(widget.id).then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(`⚠️ Widget ${widget.id} not found - skipping test`);\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  const availLevel = widget.id === \"availability-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  const intLevel = widget.id === \"integrity-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  const confLevel = widget.id === \"confidentiality-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  cy.setSecurityLevels(availLevel, intLevel, confLevel);\n  cy.wait(1e3);\n  cy.wrap($widget).then(($updatedWidget) => {\n    const widgetText = $updatedWidget.text().toLowerCase();\n    const hasImpactTerms = /impact|effect|influence|security|protection/i.test(widgetText);\n    let hasSpecificTerms = false;\n    if (Array.isArray(widget.pattern)) {\n      hasSpecificTerms = widget.pattern.some(\n        (pattern) => pattern.test(widgetText)\n      );\n    } else if (widget.pattern instanceof RegExp) {\n      hasSpecificTerms = widget.pattern.test(widgetText);\n    }\n    cy.log(`Widget has impact terms: ${hasImpactTerms}`);\n    cy.log(`Widget has specific terms: ${hasSpecificTerms}`);\n    expect(hasImpactTerms || hasSpecificTerms).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "0253a215-bd0a-4981-97db-7a6f7485fd1e",
              "parentUUID": "68bef485-d893-4000-9617-282243a6e108",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays appropriate recommendations",
              "fullTitle": "Integrity Impact Widget displays appropriate recommendations",
              "timedOut": null,
              "duration": 4952,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widget.id).then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(`⚠️ Widget ${widget.id} not found - skipping test`);\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.setSecurityLevels(\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.HIGH\n  );\n  cy.wait(1e3);\n  cy.wrap($widget).then(($updatedWidget) => {\n    const widgetText = $updatedWidget.text().toLowerCase();\n    const hasRecommendationTerms = /recommend|suggest|should|implement|consider|best practice/i.test(\n      widgetText\n    );\n    cy.log(`Widget has recommendation terms: ${hasRecommendationTerms}`);\n    if (!hasRecommendationTerms) {\n      cy.log(`Widget text: ${widgetText.substring(0, 200)}...`);\n    }\n    cy.log(`Test completed for ${widget.name}`);\n  });\n});",
              "err": {},
              "uuid": "1a037058-46bf-4fce-8e09-ee103f530cfc",
              "parentUUID": "68bef485-d893-4000-9617-282243a6e108",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8b80a98-0cf8-43d7-b04a-1b94cf2de823",
            "4031b4da-d80a-4e2e-8e97-101c776c03b9",
            "0253a215-bd0a-4981-97db-7a6f7485fd1e",
            "1a037058-46bf-4fce-8e09-ee103f530cfc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19958,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dcb12ceb-a12d-4e59-9ff4-ac6fd7ed9363",
          "title": "Confidentiality Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "confidentiality-impact widget should exist",
              "fullTitle": "Confidentiality Impact Widget confidentiality-impact widget should exist",
              "timedOut": null,
              "duration": 3233,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "c5c6c1cb-073a-4315-872d-99e855d4ec27",
              "parentUUID": "dcb12ceb-a12d-4e59-9ff4-ac6fd7ed9363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates impact assessments when security levels change",
              "fullTitle": "Confidentiality Impact Widget updates impact assessments when security levels change",
              "timedOut": null,
              "duration": 6772,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(widget.id);",
              "err": {},
              "uuid": "415d975d-e117-46a0-83c0-f0afa84a4956",
              "parentUUID": "dcb12ceb-a12d-4e59-9ff4-ac6fd7ed9363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows detailed ${widget.name.toLowerCase()} impact with high security",
              "fullTitle": "Confidentiality Impact Widget shows detailed ${widget.name.toLowerCase()} impact with high security",
              "timedOut": null,
              "duration": 4976,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(`Looking for widget ${widget.id}`);\ncy.findWidget(widget.id).then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(`⚠️ Widget ${widget.id} not found - skipping test`);\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  const availLevel = widget.id === \"availability-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  const intLevel = widget.id === \"integrity-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  const confLevel = widget.id === \"confidentiality-impact\" ? SECURITY_LEVELS.HIGH : SECURITY_LEVELS.MODERATE;\n  cy.setSecurityLevels(availLevel, intLevel, confLevel);\n  cy.wait(1e3);\n  cy.wrap($widget).then(($updatedWidget) => {\n    const widgetText = $updatedWidget.text().toLowerCase();\n    const hasImpactTerms = /impact|effect|influence|security|protection/i.test(widgetText);\n    let hasSpecificTerms = false;\n    if (Array.isArray(widget.pattern)) {\n      hasSpecificTerms = widget.pattern.some(\n        (pattern) => pattern.test(widgetText)\n      );\n    } else if (widget.pattern instanceof RegExp) {\n      hasSpecificTerms = widget.pattern.test(widgetText);\n    }\n    cy.log(`Widget has impact terms: ${hasImpactTerms}`);\n    cy.log(`Widget has specific terms: ${hasSpecificTerms}`);\n    expect(hasImpactTerms || hasSpecificTerms).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "84658071-c31e-4de7-97fb-af3cafcbe55f",
              "parentUUID": "dcb12ceb-a12d-4e59-9ff4-ac6fd7ed9363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays appropriate recommendations",
              "fullTitle": "Confidentiality Impact Widget displays appropriate recommendations",
              "timedOut": null,
              "duration": 4916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widget.id).then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(`⚠️ Widget ${widget.id} not found - skipping test`);\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.setSecurityLevels(\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.HIGH,\n    SECURITY_LEVELS.HIGH\n  );\n  cy.wait(1e3);\n  cy.wrap($widget).then(($updatedWidget) => {\n    const widgetText = $updatedWidget.text().toLowerCase();\n    const hasRecommendationTerms = /recommend|suggest|should|implement|consider|best practice/i.test(\n      widgetText\n    );\n    cy.log(`Widget has recommendation terms: ${hasRecommendationTerms}`);\n    if (!hasRecommendationTerms) {\n      cy.log(`Widget text: ${widgetText.substring(0, 200)}...`);\n    }\n    cy.log(`Test completed for ${widget.name}`);\n  });\n});",
              "err": {},
              "uuid": "d635c339-863d-4d39-9680-640b110c9d40",
              "parentUUID": "dcb12ceb-a12d-4e59-9ff4-ac6fd7ed9363",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5c6c1cb-073a-4315-872d-99e855d4ec27",
            "415d975d-e117-46a0-83c0-f0afa84a4956",
            "84658071-c31e-4de7-97fb-af3cafcbe55f",
            "d635c339-863d-4d39-9680-640b110c9d40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19897,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ebe6d42-8d09-4579-9fe1-87893c5307fa",
      "title": "",
      "fullFile": "cypress/e2e/widgets/confidentiality-impact-widget.cy.ts",
      "file": "cypress/e2e/widgets/confidentiality-impact-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca884e67-4927-428a-a312-7212952b2104",
          "title": "Confidentiality Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "confidentiality-impact widget should exist",
              "fullTitle": "Confidentiality Impact Widget confidentiality-impact widget should exist",
              "timedOut": null,
              "duration": 3896,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "1d11a7cd-069d-4fe5-9b4a-68f01d0a946f",
              "parentUUID": "ca884e67-4927-428a-a312-7212952b2104",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates content when security levels change",
              "fullTitle": "Confidentiality Impact Widget updates content when security levels change",
              "timedOut": null,
              "duration": 6837,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(\"confidentiality-impact\");",
              "err": {},
              "uuid": "503f5f10-8519-4f07-b2dd-877cf1e1acbe",
              "parentUUID": "ca884e67-4927-428a-a312-7212952b2104",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays detailed confidentiality impacts with high security",
              "fullTitle": "Confidentiality Impact Widget displays detailed confidentiality impacts with high security",
              "timedOut": null,
              "duration": 5011,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"confidentiality-impact\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.HIGH\n  // High confidentiality\n);\ncy.wait(1e3);\ncy.findWidget(\"confidentiality-impact\").within(() => {\n  cy.contains(\n    /privacy|data protection|sensitive|confidential|encrypt/i\n  ).should(\"exist\");\n});",
              "err": {},
              "uuid": "0a291ea7-843e-4704-a833-53b75c9dd0f8",
              "parentUUID": "ca884e67-4927-428a-a312-7212952b2104",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides appropriate confidentiality recommendations",
              "fullTitle": "Confidentiality Impact Widget provides appropriate confidentiality recommendations",
              "timedOut": null,
              "duration": 4943,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"confidentiality-impact\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.wait(1e3);\ncy.findWidget(\"confidentiality-impact\").within(() => {\n  cy.contains(/recommend|suggest|practice|implement/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "b0500f9a-6177-48e2-baea-150dad3a0f57",
              "parentUUID": "ca884e67-4927-428a-a312-7212952b2104",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d11a7cd-069d-4fe5-9b4a-68f01d0a946f",
            "503f5f10-8519-4f07-b2dd-877cf1e1acbe",
            "0a291ea7-843e-4704-a833-53b75c9dd0f8",
            "b0500f9a-6177-48e2-baea-150dad3a0f57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "55c2757e-efc1-4d4a-af64-c0abaefba810",
      "title": "",
      "fullFile": "cypress/e2e/widgets/integrity-impact-widget.cy.ts",
      "file": "cypress/e2e/widgets/integrity-impact-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a873b2b-97b4-4cb4-bcba-38e8ad7ac351",
          "title": "Integrity Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "integrity-impact widget should exist",
              "fullTitle": "Integrity Impact Widget integrity-impact widget should exist",
              "timedOut": null,
              "duration": 3893,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "c0f3a94a-d88e-4308-8c07-dbbd63da6280",
              "parentUUID": "8a873b2b-97b4-4cb4-bcba-38e8ad7ac351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates content when security levels change",
              "fullTitle": "Integrity Impact Widget updates content when security levels change",
              "timedOut": null,
              "duration": 6786,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(\"integrity-impact\");",
              "err": {},
              "uuid": "3c08eb35-a5ce-482d-a331-7d6d4e310e32",
              "parentUUID": "8a873b2b-97b4-4cb4-bcba-38e8ad7ac351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays detailed integrity impacts with high security",
              "fullTitle": "Integrity Impact Widget displays detailed integrity impacts with high security",
              "timedOut": null,
              "duration": 5059,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"integrity-impact\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.HIGH,\n  // High integrity\n  SECURITY_LEVELS.MODERATE\n);\ncy.wait(1e3);\ncy.findWidget(\"integrity-impact\").within(() => {\n  cy.contains(/accuracy|validation|authenticity|correct|trusted/i).should(\n    \"exist\"\n  );\n});",
              "err": {},
              "uuid": "98f29022-aa6a-45ff-bb93-d431a497d5f4",
              "parentUUID": "8a873b2b-97b4-4cb4-bcba-38e8ad7ac351",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides appropriate integrity recommendations",
              "fullTitle": "Integrity Impact Widget provides appropriate integrity recommendations",
              "timedOut": null,
              "duration": 4947,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"integrity-impact\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.wait(1e3);\ncy.findWidget(\"integrity-impact\").within(() => {\n  cy.contains(/recommend|suggest|practice|implement/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "262e503f-4fc0-4824-b5db-3d88d4864c53",
              "parentUUID": "8a873b2b-97b4-4cb4-bcba-38e8ad7ac351",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0f3a94a-d88e-4308-8c07-dbbd63da6280",
            "3c08eb35-a5ce-482d-a331-7d6d4e310e32",
            "98f29022-aa6a-45ff-bb93-d431a497d5f4",
            "262e503f-4fc0-4824-b5db-3d88d4864c53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fbe4ee0c-30db-414b-ac78-9399ac3e6e62",
      "title": "",
      "fullFile": "cypress/e2e/widgets/radar-chart-widget.cy.ts",
      "file": "cypress/e2e/widgets/radar-chart-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87baab1f-337f-4c85-934f-4a002a09a2f9",
          "title": "Radar Chart Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "radar-chart widget should exist",
              "fullTitle": "Radar Chart Widget radar-chart widget should exist",
              "timedOut": null,
              "duration": 4007,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "60080bff-591e-4a62-b002-211e98d240dc",
              "parentUUID": "87baab1f-337f-4c85-934f-4a002a09a2f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates chart visualization when security levels change",
              "fullTitle": "Radar Chart Widget updates chart visualization when security levels change",
              "timedOut": null,
              "duration": 6901,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(\"radar-chart\");",
              "err": {},
              "uuid": "166ada04-3f90-4fd3-bef3-db67d77b5108",
              "parentUUID": "87baab1f-337f-4c85-934f-4a002a09a2f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays a radar chart with data points",
              "fullTitle": "Radar Chart Widget displays a radar chart with data points",
              "timedOut": null,
              "duration": 4065,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"radar-chart\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE\n);\ncy.findWidget(\"radar-chart\").within(() => {\n  cy.get(\"svg, canvas, [data-testid*='chart'], [class*='chart']\").should(\n    \"exist\"\n  );\n  cy.contains(/availability|integrity|confidentiality/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "1ad39464-2d6a-4227-8130-ee5ef1a3f5f8",
              "parentUUID": "87baab1f-337f-4c85-934f-4a002a09a2f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays asymmetric chart with mixed security levels",
              "fullTitle": "Radar Chart Widget displays asymmetric chart with mixed security levels",
              "timedOut": null,
              "duration": 7078,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"radar-chart\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.MODERATE\n);\ncy.findWidget(\"radar-chart\").screenshot(\"mixed-security-radar\");\ncy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE\n);\ncy.findWidget(\"radar-chart\").invoke(\"text\").should(\"not.be.empty\");",
              "err": {},
              "uuid": "023aee26-1476-4b10-a993-41e7df5fbf2a",
              "parentUUID": "87baab1f-337f-4c85-934f-4a002a09a2f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays visual security level or risk indicators",
              "fullTitle": "Radar Chart Widget displays visual security level or risk indicators",
              "timedOut": null,
              "duration": 4045,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"radar-chart\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.findWidget(\"radar-chart\").within(() => {\n  cy.contains(/high|5|[4-5]\\/5|\\d+%|strong|robust/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "12a64ec2-f792-4dfc-9eca-5d74beb3af52",
              "parentUUID": "87baab1f-337f-4c85-934f-4a002a09a2f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60080bff-591e-4a62-b002-211e98d240dc",
            "166ada04-3f90-4fd3-bef3-db67d77b5108",
            "1ad39464-2d6a-4227-8130-ee5ef1a3f5f8",
            "023aee26-1476-4b10-a993-41e7df5fbf2a",
            "12a64ec2-f792-4dfc-9eca-5d74beb3af52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "63c6b07b-29d2-4c59-b0a9-bbca45c7fac2",
      "title": "",
      "fullFile": "cypress/e2e/widgets/technical-details-widget.cy.ts",
      "file": "cypress/e2e/widgets/technical-details-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6be4b74-8a2f-4345-85fd-c6cf1ee07f96",
          "title": "Technical Details Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "technical-details widget should exist",
              "fullTitle": "Technical Details Widget technical-details widget should exist",
              "timedOut": null,
              "duration": 3912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "36c8ef24-c42a-41e2-824b-69aaa6b53bab",
              "parentUUID": "d6be4b74-8a2f-4345-85fd-c6cf1ee07f96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates technical details when security levels change",
              "fullTitle": "Technical Details Widget updates technical details when security levels change",
              "timedOut": null,
              "duration": 6826,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(\"technical-details\");",
              "err": {},
              "uuid": "d17f03d1-52ae-4e69-8c49-d228616b9e53",
              "parentUUID": "d6be4b74-8a2f-4345-85fd-c6cf1ee07f96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "switches between CIA tabs if present",
              "fullTitle": "Technical Details Widget switches between CIA tabs if present",
              "timedOut": null,
              "duration": 4966,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"technical-details\").scrollIntoView();\ncy.findWidget(\"technical-details\").then(($widget) => {\n  const hasTabs = $widget.find(\n    '[role=\"tab\"], button:contains(\"Availability\"), button:contains(\"Integrity\")'\n  ).length > 0;\n  if (hasTabs) {\n    testWidgetTabSwitching(\"technical-details\");\n  } else {\n    cy.log(\"No tabs found in technical details widget - skipping tab test\");\n  }\n});",
              "err": {},
              "uuid": "b680ee1e-7c31-49d6-b54a-f4ef7e1226bc",
              "parentUUID": "d6be4b74-8a2f-4345-85fd-c6cf1ee07f96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays implementation steps for selected security levels",
              "fullTitle": "Technical Details Widget displays implementation steps for selected security levels",
              "timedOut": null,
              "duration": 4026,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"technical-details\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE\n);\ncy.findWidget(\"technical-details\").within(() => {\n  cy.contains(/implementation|step|instructions|how to|procedure/i).should(\n    \"exist\"\n  );\n  cy.get(\"ol li, ul li, [data-testid*='step'], [class*='step']\").should(\n    \"have.length.at.least\",\n    1\n  );\n});",
              "err": {},
              "uuid": "48d8a7ae-a299-4326-8038-7815bd235c62",
              "parentUUID": "d6be4b74-8a2f-4345-85fd-c6cf1ee07f96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides security-appropriate technical recommendations",
              "fullTitle": "Technical Details Widget provides security-appropriate technical recommendations",
              "timedOut": null,
              "duration": 4772,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"technical-details\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.findWidget(\"technical-details\").within(() => {\n  cy.contains(\n    /encryption|authentication|authorization|audit|monitoring|redundancy/i\n  ).should(\"exist\");\n});\ncy.setSecurityLevels(\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.LOW\n);\ncy.findWidget(\"technical-details\").within(() => {\n  cy.contains(/password|backup|update|patch|basic/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "1bef4768-a78f-4a37-acfb-b750d450b135",
              "parentUUID": "d6be4b74-8a2f-4345-85fd-c6cf1ee07f96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36c8ef24-c42a-41e2-824b-69aaa6b53bab",
            "d17f03d1-52ae-4e69-8c49-d228616b9e53",
            "b680ee1e-7c31-49d6-b54a-f4ef7e1226bc",
            "48d8a7ae-a299-4326-8038-7815bd235c62",
            "1bef4768-a78f-4a37-acfb-b750d450b135"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b32b2020-0bda-471f-a817-2a83a9dc115b",
      "title": "",
      "fullFile": "cypress/e2e/widgets/technical-implementation-widget.cy.ts",
      "file": "cypress/e2e/widgets/technical-implementation-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f84f7338-3c92-46e4-a9f0-e8518fd46bdc",
          "title": "Technical Implementation Widget Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "shows technical implementation details for security levels",
              "fullTitle": "Technical Implementation Widget Tests shows technical implementation details for security levels",
              "timedOut": null,
              "duration": 1797,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE\n);\ncy.get('[data-testid=\"technical-details-widget\"]').should(\"exist\").scrollIntoView();\ncy.verifyContentPresent([/technical|implementation|detail/i]);\ncy.get('[data-testid=\"technical-details-widget\"]').find(\".widget-header\").should(\"contain\", \"Technical Implementation Details\");",
              "err": {},
              "uuid": "aa69a597-e026-4045-acc5-9f0b1be39cab",
              "parentUUID": "f84f7338-3c92-46e4-a9f0-e8518fd46bdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates implementation details when security levels change",
              "fullTitle": "Technical Implementation Widget Tests updates implementation details when security levels change",
              "timedOut": null,
              "duration": 2362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testWidgetUpdatesWithSecurityLevels(\n  '[data-testid=\"technical-details-widget\"]',\n  {\n    initialLevels: [\n      SECURITY_LEVELS.LOW,\n      SECURITY_LEVELS.LOW,\n      SECURITY_LEVELS.LOW\n    ],\n    newLevels: [\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.HIGH\n    ],\n    expectTextChange: true\n  }\n);",
              "err": {},
              "uuid": "cade5eec-2950-46cb-aa01-2ee664b95939",
              "parentUUID": "f84f7338-3c92-46e4-a9f0-e8518fd46bdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "allows switching between confidentiality, integrity, and availability sections",
              "fullTitle": "Technical Implementation Widget Tests allows switching between confidentiality, integrity, and availability sections",
              "timedOut": null,
              "duration": 3071,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE\n);\ncy.get('[data-testid=\"technical-details-widget\"]').should(\"exist\").scrollIntoView({ offset: { top: -100, left: 0 } });\ncy.get('[data-testid=\"technical-details-widget\"]').within(() => {\n  cy.get(\"button\").contains(/availability/i).should(\"exist\").click({ force: true }).wait(500);\n  cy.contains(/availability|uptime|recovery/i).should(\"be.visible\");\n  cy.get(\"h3, h4\").should(\"exist\");\n  cy.contains(/technical|implementation|details/i).should(\"exist\");\n  cy.get(\"button\").contains(/integrity/i).should(\"exist\").click({ force: true }).wait(500);\n  cy.contains(/integrity|consistency|accuracy/i).should(\"be.visible\");\n  cy.contains(/validation|verification|consistency|integrity/i).should(\n    \"be.visible\"\n  );\n  cy.get(\"button\").contains(/confidentiality/i).should(\"exist\").click({ force: true }).wait(500);\n  cy.contains(/confidentiality|protection|sensitive/i).should(\"be.visible\");\n  cy.contains(\n    /encryption|access control|authentication|confidentiality/i\n  ).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "3811e5e7-139b-4127-afa2-4231202c7613",
              "parentUUID": "f84f7338-3c92-46e4-a9f0-e8518fd46bdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows implementation requirements for different security levels",
              "fullTitle": "Technical Implementation Widget Tests shows implementation requirements for different security levels",
              "timedOut": null,
              "duration": 1261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.get('[data-testid=\"technical-details-widget\"]').scrollIntoView();\ncy.verifyContentPresent([\n  /technical|implementation|detail/i,\n  /high|security/i\n]);\ncy.get('[data-testid=\"technical-details-widget\"]').within(() => {\n  cy.contains(/technical|implementation|development|detail/i).should(\n    \"exist\"\n  );\n  cy.contains(/maintenance|effort|support|implementation/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "acd7a52e-17fc-48cf-b3d0-c52ec0561690",
              "parentUUID": "f84f7338-3c92-46e4-a9f0-e8518fd46bdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays different technical requirements based on security level",
              "fullTitle": "Technical Implementation Widget Tests displays different technical requirements based on security level",
              "timedOut": null,
              "duration": 2043,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setSecurityLevels(\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.LOW\n);\ncy.get('[data-testid=\"technical-details-widget\"]').should(\"exist\").scrollIntoView();\ncy.get('[data-testid=\"technical-details-widget\"]').within(() => {\n  cy.contains(/low/i).should(\"exist\");\n});\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.get('[data-testid=\"technical-details-widget\"]').within(() => {\n  cy.contains(/high/i).should(\"exist\");\n  cy.contains(/advanced|security|protection|high/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "9c87e81f-7975-44e2-a6b7-5b0359710b4e",
              "parentUUID": "f84f7338-3c92-46e4-a9f0-e8518fd46bdc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa69a597-e026-4045-acc5-9f0b1be39cab",
            "cade5eec-2950-46cb-aa01-2ee664b95939",
            "3811e5e7-139b-4127-afa2-4231202c7613",
            "acd7a52e-17fc-48cf-b3d0-c52ec0561690",
            "9c87e81f-7975-44e2-a6b7-5b0359710b4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10534,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "docs/cypress/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true,
        "code": true,
        "timestamp": "mmddyyyy_HHMMss",
        "charts": true,
        "showHooks": "failed",
        "embeddedScreenshots": true
      },
      "version": "6.2.0"
    }
  }
}