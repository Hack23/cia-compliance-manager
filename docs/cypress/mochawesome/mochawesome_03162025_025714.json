{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-16T02:57:06.316Z",
    "end": "2025-03-16T02:57:14.204Z",
    "duration": 7888,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "00cb3f67-ce17-484b-8129-47ff37fc95ff",
      "title": "",
      "fullFile": "cypress/e2e/widgets/availability-impact-widget.cy.ts",
      "file": "cypress/e2e/widgets/availability-impact-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d9c030c-1026-42c8-a877-433afd72f7ce",
          "title": "Availability Impact Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays availability impact analysis",
              "fullTitle": "Availability Impact Widget displays availability impact analysis",
              "timedOut": null,
              "duration": 1344,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"body\").then(($body) => {\n  const selectors = [\n    '[data-testid*=\"availability-impact\"]',\n    '[data-testid=\"widget-availability-impact-container\"]',\n    '[data-testid=\"widget-availability-impact\"]',\n    '[class*=\"availability-impact\"]'\n  ];\n  let foundSelector = false;\n  for (const selector of selectors) {\n    if ($body.find(selector).length > 0) {\n      cy.log(`Found availability widget with selector: ${selector}`);\n      cy.get(selector).should(\"exist\").scrollIntoView().should(\"be.visible\");\n      foundSelector = true;\n      break;\n    }\n  }\n  if (!foundSelector) {\n    cy.log(\n      \"⚠️ Could not find availability impact widget with standard selectors\"\n    );\n    return;\n  }\n  cy.verifyContentPresent([\n    /availability|uptime|recovery/i,\n    /impact|effect|consequence/i\n  ]);\n});",
              "err": {},
              "uuid": "6d540af7-1290-423b-9ae0-572c275e1820",
              "parentUUID": "1d9c030c-1026-42c8-a877-433afd72f7ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates content when security levels change",
              "fullTitle": "Availability Impact Widget updates content when security levels change",
              "timedOut": null,
              "duration": 2771,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"availability-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  const initialContent = $widget.text();\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.LOW, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.LOW, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.LOW,\n        SECURITY_LEVELS.LOW\n      );\n    }\n  });\n  cy.wait(500);\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.HIGH, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.HIGH\n      );\n    }\n  });\n  cy.wait(500);\n  cy.findWidget(\"availability-impact\").invoke(\"text\").then((newContent) => {\n    cy.log(`Initial content length: ${initialContent.length}`);\n    cy.log(`New content length: ${newContent.length}`);\n  });\n});",
              "err": {},
              "uuid": "c5c8c5bb-5651-49d2-a3ad-882bf0acfddb",
              "parentUUID": "1d9c030c-1026-42c8-a877-433afd72f7ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows technical metrics and recommendations",
              "fullTitle": "Availability Impact Widget shows technical metrics and recommendations",
              "timedOut": null,
              "duration": 1871,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"availability-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.MODERATE, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.MODERATE, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.MODERATE, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.MODERATE,\n        SECURITY_LEVELS.MODERATE,\n        SECURITY_LEVELS.MODERATE\n      );\n    }\n  });\n  cy.wait(500);\n  cy.log(\"Checking for availability metrics terminology\");\n  cy.get(\"body\").contains(/rto|rpo|mttr|uptime/i);\n  cy.log(\"Checking for recommendation terminology\");\n  cy.get(\"body\").contains(/recommend|suggest/i);\n});",
              "err": {},
              "uuid": "c15dc5b6-f2c3-4a77-8b3a-222abdce478d",
              "parentUUID": "1d9c030c-1026-42c8-a877-433afd72f7ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays business impact information",
              "fullTitle": "Availability Impact Widget displays business impact information",
              "timedOut": null,
              "duration": 1802,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"availability-impact\").then(($widget) => {\n  if ($widget.length === 0) {\n    cy.log(\"⚠️ Widget not found - skipping test\");\n    return;\n  }\n  cy.wrap($widget).scrollIntoView();\n  cy.get(\"body\").then(($body) => {\n    const selectCount = $body.find(\"select\").length;\n    if (selectCount >= 3) {\n      cy.get(\"select\").eq(0).select(SECURITY_LEVELS.HIGH, { force: true });\n      cy.get(\"select\").eq(1).select(SECURITY_LEVELS.MODERATE, { force: true });\n      cy.get(\"select\").eq(2).select(SECURITY_LEVELS.LOW, { force: true });\n    } else {\n      cy.setSecurityLevels(\n        SECURITY_LEVELS.HIGH,\n        SECURITY_LEVELS.MODERATE,\n        SECURITY_LEVELS.LOW\n      );\n    }\n  });\n  cy.wait(500);\n  cy.contains(/business impact|effect on business|operational impact/i);\n});",
              "err": {},
              "uuid": "96a44131-a23a-48fc-9fb3-78e84d866e6c",
              "parentUUID": "1d9c030c-1026-42c8-a877-433afd72f7ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d540af7-1290-423b-9ae0-572c275e1820",
            "c5c8c5bb-5651-49d2-a3ad-882bf0acfddb",
            "c15dc5b6-f2c3-4a77-8b3a-222abdce478d",
            "96a44131-a23a-48fc-9fb3-78e84d866e6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "docs/cypress/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true,
        "code": true,
        "timestamp": "mmddyyyy_HHMMss",
        "charts": true,
        "showHooks": "failed",
        "embeddedScreenshots": true
      },
      "version": "6.2.0"
    }
  }
}