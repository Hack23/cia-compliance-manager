{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-16T18:57:49.024Z",
    "end": "2025-03-16T18:58:15.021Z",
    "duration": 25997,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b76eaa7c-26f4-45a4-b533-e529888358c8",
      "title": "",
      "fullFile": "cypress/e2e/widgets/technical-details-widget.cy.ts",
      "file": "cypress/e2e/widgets/technical-details-widget.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6282a6b6-7678-4c6c-83a9-4dfae4bdc3e3",
          "title": "Technical Details Widget",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "technical-details widget should exist",
              "fullTitle": "Technical Details Widget technical-details widget should exist",
              "timedOut": null,
              "duration": 3996,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(widgetName).should(\"exist\").scrollIntoView();\ncy.findWidget(widgetName).then(($widget) => {\n  expect($widget.text().trim().length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "ee5f04bb-b6f7-4f2b-8a84-5c4d7fdfa025",
              "parentUUID": "6282a6b6-7678-4c6c-83a9-4dfae4bdc3e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates technical details when security levels change",
              "fullTitle": "Technical Details Widget updates technical details when security levels change",
              "timedOut": null,
              "duration": 7170,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testSecurityLevelChanges(\"technical-details\");",
              "err": {},
              "uuid": "ce7a800c-5680-4580-9cb0-9d35929d968f",
              "parentUUID": "6282a6b6-7678-4c6c-83a9-4dfae4bdc3e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "switches between CIA tabs if present",
              "fullTitle": "Technical Details Widget switches between CIA tabs if present",
              "timedOut": null,
              "duration": 5209,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"technical-details\").scrollIntoView();\ncy.findWidget(\"technical-details\").then(($widget) => {\n  const hasTabs = $widget.find(\n    '[role=\"tab\"], button:contains(\"Availability\"), button:contains(\"Integrity\")'\n  ).length > 0;\n  if (hasTabs) {\n    testWidgetTabSwitching(\"technical-details\");\n  } else {\n    cy.log(\"No tabs found in technical details widget - skipping tab test\");\n  }\n});",
              "err": {},
              "uuid": "f216bb5e-892e-4c03-8a82-8d098d17de83",
              "parentUUID": "6282a6b6-7678-4c6c-83a9-4dfae4bdc3e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays implementation steps for selected security levels",
              "fullTitle": "Technical Details Widget displays implementation steps for selected security levels",
              "timedOut": null,
              "duration": 4262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"technical-details\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE,\n  SECURITY_LEVELS.MODERATE\n);\ncy.findWidget(\"technical-details\").within(() => {\n  cy.contains(/implementation|step|instructions|how to|procedure/i).should(\n    \"exist\"\n  );\n  cy.get(\"ol li, ul li, [data-testid*='step'], [class*='step']\").should(\n    \"have.length.at.least\",\n    1\n  );\n});",
              "err": {},
              "uuid": "7493714e-42f3-4f08-8546-81a7970361f4",
              "parentUUID": "6282a6b6-7678-4c6c-83a9-4dfae4bdc3e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides security-appropriate technical recommendations",
              "fullTitle": "Technical Details Widget provides security-appropriate technical recommendations",
              "timedOut": null,
              "duration": 4969,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.findWidget(\"technical-details\").scrollIntoView();\ncy.setSecurityLevels(\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH,\n  SECURITY_LEVELS.HIGH\n);\ncy.findWidget(\"technical-details\").within(() => {\n  cy.contains(\n    /encryption|authentication|authorization|audit|monitoring|redundancy/i\n  ).should(\"exist\");\n});\ncy.setSecurityLevels(\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.LOW,\n  SECURITY_LEVELS.LOW\n);\ncy.findWidget(\"technical-details\").within(() => {\n  cy.contains(/password|backup|update|patch|basic/i).should(\"exist\");\n});",
              "err": {},
              "uuid": "c3f2a7f6-9206-4f60-b3fc-774f90d6066e",
              "parentUUID": "6282a6b6-7678-4c6c-83a9-4dfae4bdc3e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee5f04bb-b6f7-4f2b-8a84-5c4d7fdfa025",
            "ce7a800c-5680-4580-9cb0-9d35929d968f",
            "f216bb5e-892e-4c03-8a82-8d098d17de83",
            "7493714e-42f3-4f08-8546-81a7970361f4",
            "c3f2a7f6-9206-4f60-b3fc-774f90d6066e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "docs/cypress/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true,
        "code": true,
        "timestamp": "mmddyyyy_HHMMss",
        "charts": true,
        "showHooks": "failed",
        "embeddedScreenshots": true
      },
      "version": "6.2.0"
    }
  }
}