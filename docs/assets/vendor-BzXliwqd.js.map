{"version":3,"file":"vendor-BzXliwqd.js","sources":["../../node_modules/scheduler/index.js","../../node_modules/scheduler/cjs/scheduler.production.js","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["schedulerModule","exports","push","heap","node","index","length","a","parentIndex","parent","compare","peek","pop","first","last","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","unstable_now","performance","now","localPerformance","localDate","Date","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","needsPaint","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","priorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","task","unstable_forceFrameRate","fps","Math","floor","unstable_getCurrentPriorityLevel","unstable_next","eventHandler","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","unstable_shouldYield","unstable_wrapCallback","parentPriorityLevel","apply","this","arguments","round","v","lim","l","h","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","endsWith","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","parseFloat","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","splice","forEach","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","getNumberFormat","format","Ticks","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","overrides","descriptors","getScope$1","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBLCorners","toPadding","toTRBL","toFont","fallback","toFontString","resolve","inputs","info","_addGrace","minmax","change","dimension","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","getValue","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","splitByStyles","segments","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","remaining","running","items","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","RadarController","bind","_fullLoop","pointPosition","getPointPositionForValue","xCenter","yCenter","binarySearch","metaset","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","innerRadius","outerRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","circumference","inner","borderAlign","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_decimated","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","animated","_points","_segments","_pointsUpdated","updateControlPoints","findStartAndEnd","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverBorderWidth","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","centerX","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","centerY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_setMinAndMaxByKey","getTickBackdropHeight","determineLimits","fitWithPointLabels","orig","_padding","limits","valueCount","_pointLabels","pointLabelOpts","pointLabels","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","getIndexAngle","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","angleLines","leftMovement","rightMovement","topMovement","bottomMovement","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}