{"version":3,"file":"vendor-BQFuipnC.js","sources":["../../node_modules/scheduler/index.js","../../node_modules/scheduler/cjs/scheduler.production.js","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/chart.js/auto/auto.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  needsPaint = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return needsPaint\n    ? !0\n    : exports.unstable_now() - startTime < frameInterval\n      ? !1\n      : !0;\n}\nfunction performWorkUntilDeadline() {\n  needsPaint = !1;\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_requestPaint = function () {\n  needsPaint = !0;\n};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0),\n        isMessageLoopRunning ||\n          ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline())));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["schedulerModule","exports","push","heap","node","index","length","a","parentIndex","parent","compare","peek","pop","first","last","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","unstable_now","performance","now","localPerformance","localDate","Date","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","needsPaint","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","isMessageLoopRunning","schedulePerformWorkUntilDeadline","firstTimer","requestHostTimeout","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","priorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","task","unstable_forceFrameRate","fps","Math","floor","unstable_getCurrentPriorityLevel","unstable_next","eventHandler","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","unstable_shouldYield","unstable_wrapCallback","parentPriorityLevel","apply","this","arguments","round","v","lim","l","h","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","registerables","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}