{"version":3,"file":"index-tBA2gTMF.js","sources":["../../src/constants/colorConstants.ts","../../src/hooks/useCIAOptions.ts","../../src/constants/riskConstants.ts","../../src/constants/appConstants.ts","../../src/constants/testIds.ts","../../src/constants/coreConstants.ts","../../src/utils/securityLevelUtils.ts","../../src/services/ciaContentService.ts","../../src/components/common/StatusBadge.tsx","../../src/components/common/CIAImpactCard.tsx","../../src/components/common/KeyValuePair.tsx","../../src/components/common/WidgetContainer.tsx","../../src/components/widgets/AvailabilityImpactWidget.tsx","../../src/components/widgets/BusinessImpactAnalysisWidget.tsx","../../src/components/widgets/ComplianceStatusWidget.tsx","../../src/components/widgets/ConfidentialityImpactWidget.tsx","../../src/components/common/MetricsCard.tsx","../../src/components/common/WidgetHeader.tsx","../../src/components/common/SecurityLevelSummaryItem.tsx","../../src/components/widgets/CIAImpactSummaryWidget.tsx","../../src/components/widgets/IntegrityImpactWidget.tsx","../../src/components/widgets/SecurityResourcesWidget.tsx","../../src/components/widgets/SecuritySummaryWidget.tsx","../../src/components/charts/RadarChart.tsx","../../src/components/widgets/SecurityVisualizationWidget.tsx","../../src/components/widgets/TechnicalDetailsWidget.tsx","../../src/components/widgets/ValueCreationWidget.tsx","../../src/utils/widgetRegistry.tsx","../../src/utils/widgetHelpers.tsx","../../src/types/cia.ts","../../src/components/dashboard/Dashboard.tsx","../../src/components/widgets/CostEstimationWidget.tsx","../../src/components/securitylevel/SecurityLevelSelector.tsx","../../src/components/widgets/SecurityLevelWidget.tsx","../../src/types/widgets.ts","../../src/application/CIAClassificationApp.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["import { SecurityLevel } from \"../types/cia\";\n\n/**\n * Color constants for security levels following\n * WCAG 2.1 AA standards (contrast ratio ≥ 4.5:1)\n */\nexport const SECURITY_LEVEL_COLORS = {\n  // Primary colors for badges, buttons, etc.\n  BACKGROUND: {\n    NONE: \"#dc3545\", // Stronger red\n    LOW: \"#e67e22\", // More vibrant orange\n    MODERATE: \"#f1c40f\", // Stronger yellow\n    HIGH: \"#2ecc71\", // More vibrant green\n    VERY_HIGH: \"#3498db\", // More vibrant blue\n  },\n\n  // Text colors that meet contrast requirements with white backgrounds\n  TEXT: {\n    NONE: \"#7d1a1a\", // Dark red\n    LOW: \"#924d10\", // Dark orange\n    MODERATE: \"#7d6608\", // Dark yellow\n    HIGH: \"#186a3b\", // Dark green\n    VERY_HIGH: \"#1a5276\", // Dark blue\n  },\n\n  // Colors for use with dark backgrounds - increased brightness for visibility\n  DARK_MODE: {\n    NONE: \"#ff6b6b\", // Brighter red for dark backgrounds\n    LOW: \"#ff9f43\", // Brighter orange\n    MODERATE: \"#feca57\", // Brighter yellow\n    HIGH: \"#54e346\", // Brighter green\n    VERY_HIGH: \"#70a1ff\", // Brighter blue\n  },\n\n  // For borders and accents - slightly higher saturation\n  BORDER: {\n    NONE: \"#f8d7da\", // Light red border\n    LOW: \"#ffedd8\", // Light orange border\n    MODERATE: \"#fff6d9\", // Light yellow border\n    HIGH: \"#d4edda\", // Light green border\n    VERY_HIGH: \"#cfe2ff\", // Light blue border\n  },\n};\n\n/**\n * Colors specific to CIA components - with enhanced distinctiveness\n */\nexport const CIA_COMPONENT_COLORS = {\n  CONFIDENTIALITY: {\n    PRIMARY: \"#9c27b0\", // Purple\n    SECONDARY: \"#e1bee7\", // Light purple\n    DARK: \"#7b1fa2\", // Dark purple\n  },\n  INTEGRITY: {\n    PRIMARY: \"#27ae60\", // Green\n    SECONDARY: \"#d4efdf\", // Light green\n    DARK: \"#2ecc71\", // Vibrant green\n  },\n  AVAILABILITY: {\n    PRIMARY: \"#2196f3\", // Blue\n    SECONDARY: \"#bbdefb\", // Light blue\n    DARK: \"#1976d2\", // Dark blue\n  },\n};\n\n/**\n * Get background and text colors for a specific security level\n */\nexport const getSecurityLevelColorPair = (\n  level: SecurityLevel\n): { bg: string; text: string } => {\n  // Check if we're in dark mode\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\n\n  const normalizedLevel = level\n    .replace(/\\s+/g, \"_\")\n    .toUpperCase() as keyof typeof SECURITY_LEVEL_COLORS.BACKGROUND;\n\n  // Use different colors based on dark mode to ensure visibility\n  const bgColor = isDarkMode\n    ? SECURITY_LEVEL_COLORS.DARK_MODE[normalizedLevel] ||\n      SECURITY_LEVEL_COLORS.DARK_MODE.NONE\n    : SECURITY_LEVEL_COLORS.BACKGROUND[normalizedLevel] ||\n      SECURITY_LEVEL_COLORS.BACKGROUND.NONE;\n\n  // For dark mode, always use white/near-white text for better visibility\n  const textColor = isDarkMode\n    ? \"#ffffff\"\n    : normalizedLevel === \"NONE\" || normalizedLevel === \"LOW\"\n    ? \"#ffffff\"\n    : \"#000000\";\n\n  return { bg: bgColor, text: textColor };\n};\n\n/**\n * Get component color scheme respecting dark mode\n */\nexport const getCIAComponentColors = (\n  component: \"CONFIDENTIALITY\" | \"INTEGRITY\" | \"AVAILABILITY\"\n): { primary: string; secondary: string } => {\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\n\n  // Return appropriate colors based on dark mode\n  return {\n    primary: isDarkMode\n      ? CIA_COMPONENT_COLORS[component].DARK\n      : CIA_COMPONENT_COLORS[component].PRIMARY,\n    secondary: isDarkMode\n      ? `${CIA_COMPONENT_COLORS[component].DARK}80` // Add transparency\n      : CIA_COMPONENT_COLORS[component].SECONDARY,\n  };\n};\n","import { useMemo } from \"react\";\nimport { getSecurityLevelColorPair } from \"../constants/colorConstants\";\nimport { CIADetails, SecurityLevel } from \"../types/cia\";\n\n/**\n * Interface defining the structure of an ROI estimate for a specific security level\n */\nexport interface ROIEstimate {\n  value: string; // Primary property name\n  returnRate: string; // Alias for backward compatibility\n  description: string;\n  potentialSavings?: string;\n  breakEvenPeriod?: string;\n  implementationCost?: string;\n}\n\n/**\n * Map of ROI estimates by security level\n */\nexport interface ROIEstimatesMap {\n  NONE: ROIEstimate;\n  LOW: ROIEstimate;\n  MODERATE: ROIEstimate;\n  HIGH: ROIEstimate;\n  VERY_HIGH: ROIEstimate;\n}\n\n/**\n * Common interface for all CIA security options to ensure consistency\n */\nexport interface EnhancedCIADetails extends CIADetails {\n  description: string;\n  technical: string;\n  businessImpact: string;\n  capex: number;\n  opex: number;\n  bg: string;\n  text: string;\n  recommendations: string[];\n  businessImpactDetails?: {\n    financialImpact?: {\n      description: string;\n      riskLevel: string;\n      annualRevenueLoss?: string;\n    };\n    operationalImpact?: {\n      description: string;\n      riskLevel: string;\n      meanTimeToRecover?: string;\n    };\n    reputationalImpact?: {\n      description: string;\n      riskLevel: string;\n    };\n    strategic?: {\n      description: string;\n      riskLevel: string;\n    };\n    regulatory?: {\n      description: string;\n      riskLevel: string;\n      complianceViolations?: string[];\n    };\n  };\n  rto?: string; // Recovery Time Objective\n  rpo?: string; // Recovery Point Objective\n  mttr?: string; // Mean Time To Recovery\n  uptime?: string; // For availability options\n  validationMethod?: string; // For integrity options\n  protectionMethod?: string; // For confidentiality options\n  implementationComplexity?: string;\n  maintenanceRequirements?: string;\n  requiredExpertise?: string;\n  controlFamily?: string[];\n  applicableFrameworks?: string[];\n  // New fields to reduce hardcoding in ciaContentService\n  businessPerspective?: string;\n  implementationSteps?: string[];\n  effort?: {\n    development: string;\n    maintenance: string;\n    expertise: string;\n  };\n  keyImpact?: string;\n  metric?: string;\n  valuePoints?: string[];\n  roiEstimate?: {\n    value: string;\n    description: string;\n  };\n  implementationConsiderations?: string;\n  securityIcon?: string;\n  complianceImpact?: {\n    frameworks: {\n      compliant: string[];\n      partiallyCompliant: string[];\n      nonCompliant: string[];\n    };\n    requirements?: string[];\n    remediationSteps?: string[];\n  };\n  codeExamples?: Array<{\n    language: string;\n    title: string;\n    code: string;\n  }>;\n  // Add technical implementation details\n  technicalImplementation?: {\n    description: string;\n    implementationSteps: string[];\n    effort: {\n      development: string;\n      maintenance: string;\n      expertise: string;\n    };\n    requirements?: string[];\n    technologies?: string[];\n  };\n}\n\n// Define all options as private internal constants\nconst _availabilityOptions: Partial<Record<SecurityLevel, EnhancedCIADetails>> =\n  {\n    None: {\n      description:\n        \"No availability measures are in place. The system is prone to frequent, unpredictable outages.\",\n      technical:\n        \"No redundancy, backup systems, monitoring, or disaster recovery procedures are implemented.\",\n      businessImpact:\n        \"Severe disruptions occur during outages, potentially resulting in revenue losses estimated at 5-10% annually under prolonged conditions.\",\n      capex: 0,\n      opex: 0,\n      bg: getSecurityLevelColorPair(\"None\" as SecurityLevel).bg,\n      text: getSecurityLevelColorPair(\"None\" as SecurityLevel).text,\n      recommendations: [\n        \"Implement basic monitoring to detect outages early\",\n        \"Establish a rudimentary backup process with periodic testing\",\n        \"Document manual recovery procedures with clear roles\",\n        \"Establish baseline uptime metrics to gauge current performance\",\n        \"Identify and prioritize critical systems for improvement\",\n      ],\n      uptime: \"<90%\",\n      businessImpactDetails: {\n        financialImpact: {\n          description:\n            \"Prolonged outages can lead to significant revenue loss, estimated at 5-10% of annual revenue.\",\n          riskLevel: \"Critical\",\n          annualRevenueLoss: \"5-10% of annual revenue\",\n        },\n        operationalImpact: {\n          description:\n            \"Operations are severely disrupted with recovery timelines that are highly unpredictable.\",\n          riskLevel: \"Critical\",\n          meanTimeToRecover: \"Unpredictable (hours to days)\",\n        },\n        regulatory: {\n          description:\n            \"Likely violates basic service agreements and regulatory requirements.\",\n          riskLevel: \"High\",\n          complianceViolations: [\"SLAs\", \"Basic industry standards\"],\n        },\n      },\n      securityIcon: \"⚠️\",\n    },\n    Low: {\n      description:\n        \"Basic availability measures are present but have significant limitations, leading to extended downtime during disruptions.\",\n      technical:\n        \"Reliance on manual backup processes and limited monitoring, with basic recovery documentation.\",\n      businessImpact:\n        \"Moderate disruptions can lead to revenue losses estimated at 3-5% annually, heavily dependent on recovery speed.\",\n      capex: 5,\n      opex: 3,\n      bg: getSecurityLevelColorPair(\"Low\" as SecurityLevel).bg,\n      text: getSecurityLevelColorPair(\"Low\" as SecurityLevel).text,\n      recommendations: [\n        \"Implement scheduled backups and test recovery procedures regularly\",\n        \"Set up basic monitoring alerts for early detection\",\n        \"Document recovery processes and establish a communication protocol for outages\",\n      ],\n      uptime: \"95%\",\n      rto: \"24-48 hours\",\n      rpo: \"24 hours\",\n      mttr: \"12-24 hours\",\n      businessImpactDetails: {\n        financialImpact: {\n          description:\n            \"Revenue impact is estimated at around 3-5% annually due to extended downtimes.\",\n          riskLevel: \"High\",\n          annualRevenueLoss: \"3-5% of annual revenue\",\n        },\n        operationalImpact: {\n          description:\n            \"Business disruptions are significant and require manual intervention, leading to slower recovery.\",\n          riskLevel: \"High\",\n          meanTimeToRecover: \"12-24 hours\",\n        },\n      },\n      securityIcon: \"🔒\",\n    },\n    Moderate: {\n      description:\n        \"Standard availability measures that yield acceptable uptime with planned disaster recovery processes.\",\n      technical:\n        \"Scheduled backups, automated monitoring with alerts, documented recovery procedures, and partial redundancy for key components.\",\n      businessImpact:\n        \"Occasional disruptions are generally contained, with revenue losses estimated at 1-3% annually.\",\n      capex: 15,\n      opex: 10,\n      bg: getSecurityLevelColorPair(\"Moderate\" as SecurityLevel).bg,\n      text: getSecurityLevelColorPair(\"Moderate\" as SecurityLevel).text,\n      recommendations: [\n        \"Enhance redundancy for mission-critical systems\",\n        \"Automate backup and disaster recovery testing\",\n        \"Integrate comprehensive monitoring with defined SLAs\",\n      ],\n      uptime: \"99%\",\n      rto: \"4-8 hours\",\n      rpo: \"4 hours\",\n      mttr: \"2-4 hours\",\n      businessImpactDetails: {\n        financialImpact: {\n          description:\n            \"Revenue impact is modest, estimated at approximately 1-3% annually, assuming typical outage scenarios.\",\n          riskLevel: \"Medium\",\n          annualRevenueLoss: \"1-3% of annual revenue\",\n        },\n        operationalImpact: {\n          description:\n            \"Disruptions occur infrequently and recovery is relatively quick.\",\n          riskLevel: \"Medium\",\n          meanTimeToRecover: \"2-4 hours\",\n        },\n      },\n      securityIcon: \"🛡️\",\n    },\n    High: {\n      description:\n        \"Robust availability measures with high redundancy and automated recovery systems ensure near-continuous operations.\",\n      technical:\n        \"N+1 redundancy, multi-region standby systems, automated failover, comprehensive monitoring, and regular disaster recovery testing.\",\n      businessImpact:\n        \"Business continuity is well-maintained with negligible revenue impact (generally under 1%).\",\n      capex: 30,\n      opex: 20,\n      bg: getSecurityLevelColorPair(\"High\" as SecurityLevel).bg,\n      text: getSecurityLevelColorPair(\"High\" as SecurityLevel).text,\n      recommendations: [\n        \"Deploy N+1 redundancy for all critical systems\",\n        \"Implement automated failover and real-time monitoring\",\n        \"Conduct regular disaster recovery drills and define escalation procedures\",\n      ],\n      uptime: \"99.9%\",\n      rto: \"15-60 minutes\",\n      rpo: \"15 minutes\",\n      mttr: \"10-30 minutes\",\n      businessImpactDetails: {\n        financialImpact: {\n          description:\n            \"Revenue impact is minimal, generally estimated at less than 1% of annual revenue.\",\n          riskLevel: \"Low\",\n          annualRevenueLoss: \"<1% of annual revenue\",\n        },\n        operationalImpact: {\n          description:\n            \"Disruptions are rare and recovery is almost instantaneous due to automation.\",\n          riskLevel: \"Low\",\n          meanTimeToRecover: \"10-30 minutes\",\n        },\n        strategic: {\n          description:\n            \"High reliability can support market expansion and reinforces customer trust.\",\n          riskLevel: \"Low\",\n        },\n      },\n      securityIcon: \"🛡️🛡️\",\n    },\n    \"Very High\": {\n      description:\n        \"Maximum availability with continuous operations enabled by multi-region redundancy, real-time replication, and fully automated recovery.\",\n      technical:\n        \"N+2 redundancy, active-active multi-region architecture, real-time replication, and automated remediation ensure near-zero downtime.\",\n      businessImpact:\n        \"Operational continuity is nearly uninterrupted under normal conditions, with revenue impact considered negligible—though extreme events remain a risk.\",\n      capex: 60,\n      opex: 40,\n      bg: getSecurityLevelColorPair(\"Very High\" as SecurityLevel).bg,\n      text: getSecurityLevelColorPair(\"Very High\" as SecurityLevel).text,\n      recommendations: [\n        \"Implement N+2 redundancy across all critical components\",\n        \"Deploy an active-active multi-region architecture with real-time replication\",\n        \"Establish fully automated remediation systems and 24/7 operations support\",\n        \"Conduct regular chaos engineering exercises to stress-test resilience\",\n      ],\n      uptime: \"99.99%\",\n      rto: \"<5 minutes\",\n      rpo: \"<1 minute\",\n      mttr: \"<5 minutes\",\n      businessImpactDetails: {\n        financialImpact: {\n          description:\n            \"Revenue losses due to availability issues are negligible under normal conditions.\",\n          riskLevel: \"Minimal\",\n        },\n        operationalImpact: {\n          description:\n            \"Business operations are maintained nearly continuously with rapid, automated recovery.\",\n          riskLevel: \"Minimal\",\n          meanTimeToRecover: \"<5 minutes\",\n        },\n        strategic: {\n          description:\n            \"Superior reliability offers a competitive advantage in high-demand markets.\",\n          riskLevel: \"Minimal\",\n        },\n        regulatory: {\n          description:\n            \"Exceeds stringent regulatory and SLA requirements for availability.\",\n          riskLevel: \"Minimal\",\n          complianceViolations: [],\n        },\n      },\n      securityIcon: \"🛡️🛡️🛡️\",\n    },\n  };\n\nconst _integrityOptions: Partial<Record<SecurityLevel, EnhancedCIADetails>> = {\n  None: {\n    description:\n      \"No integrity controls are implemented, leaving the system vulnerable to undetected data corruption.\",\n    technical:\n      \"There is no input validation, no checksums, no audit logging, and no data verification mechanisms.\",\n    businessImpact:\n      \"This lack of controls poses a critical risk to decision-making and financial reporting, potentially leading to significant operational disruptions.\",\n    capex: 0,\n    opex: 0,\n    bg: getSecurityLevelColorPair(\"None\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"None\" as SecurityLevel).text,\n    recommendations: [\n      \"Implement fundamental input validation measures\",\n      \"Introduce basic application-level data checks\",\n      \"Set up rudimentary audit logs for critical transactions\",\n    ],\n    businessImpactDetails: {\n      financialImpact: {\n        description:\n          \"Financial reporting reliability is severely compromised, risking misallocation of resources.\",\n        riskLevel: \"Critical\",\n      },\n      operationalImpact: {\n        description:\n          \"Decisions based on inaccurate data can lead to cascading failures and prolonged recovery times.\",\n        riskLevel: \"Critical\",\n      },\n    },\n    validationMethod: \"None\",\n  },\n  Low: {\n    description:\n      \"Basic integrity controls are present, relying mainly on manual verification processes that are error-prone and hard to scale.\",\n    technical:\n      \"Relies on simple input validation, rudimentary access controls, and manual checksum verification without automated oversight.\",\n    businessImpact:\n      \"Data inaccuracies may occur intermittently, potentially leading to errors in financial calculations and operational inefficiencies.\",\n    capex: 5,\n    opex: 3,\n    bg: getSecurityLevelColorPair(\"Low\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"Low\" as SecurityLevel).text,\n    recommendations: [\n      \"Adopt server-side validation to minimize human error\",\n      \"Introduce automated data verification where possible\",\n      \"Schedule regular manual reviews to detect anomalies\",\n    ],\n    validationMethod: \"Manual checks\",\n    businessImpactDetails: {\n      financialImpact: {\n        description:\n          \"Financial calculations might be affected by occasional errors, though the overall impact is moderate.\",\n        riskLevel: \"High\",\n      },\n      operationalImpact: {\n        description:\n          \"Manual processes may catch corruption inconsistently, leading to sporadic operational delays.\",\n        riskLevel: \"High\",\n      },\n    },\n  },\n  Moderate: {\n    description:\n      \"Standard integrity controls combine automated verification with periodic manual oversight, providing a reasonable level of assurance.\",\n    technical:\n      \"Utilizes comprehensive input validation, checksums, version control, and audit logging with a blend of automated and manual checks.\",\n    businessImpact:\n      \"Most data corruption is detected and corrected, though sophisticated attacks or subtle errors may still occur.\",\n    capex: 15,\n    opex: 10,\n    bg: getSecurityLevelColorPair(\"Moderate\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"Moderate\" as SecurityLevel).text,\n    recommendations: [\n      \"Implement end-to-end automated data validation\",\n      \"Utilize database constraints and triggers to enforce integrity rules\",\n      \"Establish robust audit trails and periodic integrity reviews\",\n    ],\n    validationMethod: \"Automated validation\",\n    businessImpactDetails: {\n      financialImpact: {\n        description:\n          \"Financial data is generally reliable; however, occasional discrepancies may still impact reporting accuracy.\",\n        riskLevel: \"Medium\",\n      },\n      operationalImpact: {\n        description:\n          \"Operational disruptions are infrequent and usually resolved quickly via established audit trails.\",\n        riskLevel: \"Medium\",\n      },\n      regulatory: {\n        description:\n          \"Controls meet basic regulatory standards, though they might fall short of stricter compliance requirements.\",\n        riskLevel: \"Medium\",\n      },\n    },\n  },\n  High: {\n    description:\n      \"Advanced integrity controls employing cryptographic techniques provide strong data assurance, albeit with increased complexity and cost.\",\n    technical:\n      \"Incorporates digital signatures, hash verifications, and tamper-resistant audit logs to secure data integrity.\",\n    businessImpact:\n      \"Data integrity is strongly maintained, reducing risks in financial and operational decision-making, but the high investment may limit broader scalability.\",\n    capex: 30,\n    opex: 20,\n    bg: getSecurityLevelColorPair(\"High\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"High\" as SecurityLevel).text,\n    recommendations: [\n      \"Deploy digital signatures for high-risk data entries\",\n      \"Implement cryptographic hash validations for data immutability\",\n      \"Establish immutable audit logging mechanisms\",\n    ],\n    validationMethod: \"Cryptographic verification\",\n    businessImpactDetails: {\n      financialImpact: {\n        description:\n          \"High confidence in financial data minimizes the risk of significant misreporting.\",\n        riskLevel: \"Low\",\n      },\n      operationalImpact: {\n        description:\n          \"Robust change tracking enables timely detection and correction of data errors.\",\n        riskLevel: \"Low\",\n      },\n      regulatory: {\n        description:\n          \"These controls typically exceed many regulatory requirements, providing a strong compliance posture.\",\n        riskLevel: \"Low\",\n      },\n    },\n  },\n  \"Very High\": {\n    description:\n      \"State-of-the-art integrity controls leveraging distributed ledger technologies provide near-absolute data assurance, though they introduce significant complexity and cost.\",\n    technical:\n      \"Employs multi-party verification, blockchain-based ledgers, and zero-knowledge proofs to ensure immutable audit trails.\",\n    businessImpact:\n      \"Data integrity is virtually guaranteed, which is critical for high-stakes regulatory and financial environments, but the substantial investment and complexity may not be justifiable for all organizations.\",\n    capex: 60,\n    opex: 40,\n    bg: getSecurityLevelColorPair(\"Very High\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"Very High\" as SecurityLevel).text,\n    recommendations: [\n      \"Explore blockchain or distributed ledger solutions for critical data\",\n      \"Deploy multi-party verification systems to enhance auditability\",\n      \"Investigate zero-knowledge proofs to verify data integrity without compromising confidentiality\",\n    ],\n    validationMethod: \"Blockchain/distributed ledger\",\n    businessImpactDetails: {\n      financialImpact: {\n        description:\n          \"Ensures exceptional reliability of financial data, enabling precise reporting in regulated sectors.\",\n        riskLevel: \"Minimal\",\n      },\n      operationalImpact: {\n        description:\n          \"Data integrity is nearly absolute, reducing operational risk to an absolute minimum, despite high system complexity.\",\n        riskLevel: \"Minimal\",\n      },\n      strategic: {\n        description:\n          \"Supports organizations in highly regulated or high-stakes markets; however, the cost and complexity may outweigh benefits for most.\",\n        riskLevel: \"Minimal\",\n      },\n    },\n  },\n};\n\n// Create full confidentiality options with all levels\nconst _confidentialityOptions: Partial<\n  Record<SecurityLevel, EnhancedCIADetails>\n> = {\n  None: {\n    description:\n      \"No confidentiality controls are implemented, leaving sensitive information fully exposed to any user with system access.\",\n    technical:\n      \"There are no access controls, no encryption measures, and no data classification processes.\",\n    businessImpact:\n      \"This exposes the organization to severe reputational damage and regulatory non-compliance, with potential legal penalties if sensitive data is compromised.\",\n    capex: 0,\n    opex: 0,\n    bg: getSecurityLevelColorPair(\"None\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"None\" as SecurityLevel).text,\n    recommendations: [\n      \"Implement basic authentication mechanisms\",\n      \"Introduce simple authorization controls\",\n      \"Establish a rudimentary data classification scheme\",\n    ],\n    protectionMethod: \"None\",\n    businessImpactDetails: {\n      reputationalImpact: {\n        description:\n          \"Without confidentiality controls, sensitive information can be accessed by unauthorized parties, severely damaging customer trust and brand reputation.\",\n        riskLevel: \"Critical\",\n      },\n      regulatory: {\n        description:\n          \"Non-compliance with data protection regulations is highly likely, potentially resulting in fines and legal action.\",\n        riskLevel: \"Critical\",\n        complianceViolations: [\"GDPR\", \"CCPA\", \"HIPAA\", \"PCI-DSS\"],\n      },\n    },\n  },\n  Low: {\n    description:\n      \"Basic confidentiality measures are in place but provide only minimal protection against unauthorized access.\",\n    technical:\n      \"Relies on password protection, basic role-based access controls, and minimal encryption.\",\n    businessImpact:\n      \"Sensitive data is somewhat protected, but the risk of exposure remains high, potentially leading to moderate reputational harm and regulatory challenges.\",\n    capex: 5,\n    opex: 3,\n    bg: getSecurityLevelColorPair(\"Low\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"Low\" as SecurityLevel).text,\n    recommendations: [\n      \"Upgrade to a robust authentication system\",\n      \"Implement comprehensive role-based access controls\",\n      \"Enforce TLS/SSL for all data in transit\",\n    ],\n    protectionMethod: \"Basic access control\",\n    businessImpactDetails: {\n      reputationalImpact: {\n        description:\n          \"Exposure of sensitive data is possible, which could lead to moderate damage to the organization’s reputation if an incident occurs.\",\n        riskLevel: \"High\",\n      },\n      regulatory: {\n        description:\n          \"Existing measures may not fully satisfy privacy regulations, leading to potential fines or legal scrutiny.\",\n        riskLevel: \"High\",\n      },\n    },\n  },\n  Moderate: {\n    description:\n      \"Standard confidentiality measures provide a reasonable level of protection for sensitive information under typical threat scenarios.\",\n    technical:\n      \"Utilizes strong authentication, role-based access control, and encryption both at rest and in transit.\",\n    businessImpact:\n      \"Most unauthorized access attempts are thwarted, reducing the risk of data breaches. However, sophisticated threats might still pose a risk, leading to moderate operational and reputational impacts.\",\n    capex: 15,\n    opex: 10,\n    bg: getSecurityLevelColorPair(\"Moderate\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"Moderate\" as SecurityLevel).text,\n    recommendations: [\n      \"Implement robust encryption for data both at rest and in transit\",\n      \"Regularly review and update access controls\",\n      \"Establish continuous monitoring and auditing of data access\",\n    ],\n    protectionMethod: \"Standard encryption\",\n    businessImpactDetails: {\n      reputationalImpact: {\n        description:\n          \"Sensitive data is largely protected, mitigating the risk of reputational damage in the event of an incident.\",\n        riskLevel: \"Medium\",\n      },\n      regulatory: {\n        description:\n          \"Generally meets standard data protection requirements, though vulnerabilities may remain against highly sophisticated attacks.\",\n        riskLevel: \"Medium\",\n      },\n    },\n  },\n  High: {\n    description:\n      \"Advanced confidentiality measures provide strong protection against unauthorized access to sensitive information.\",\n    technical:\n      \"Employs multi-factor authentication, robust encryption, fine-grained access controls, and continuous security monitoring.\",\n    businessImpact:\n      \"Significantly reduces the risk of data breaches, thereby minimizing reputational damage and ensuring compliance with stringent regulatory standards.\",\n    capex: 30,\n    opex: 20,\n    bg: getSecurityLevelColorPair(\"High\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"High\" as SecurityLevel).text,\n    recommendations: [\n      \"Deploy multi-factor authentication across all user access points\",\n      \"Implement end-to-end encryption and conduct regular security audits\",\n      \"Establish comprehensive monitoring of data access and activity\",\n    ],\n    protectionMethod: \"E2E encryption\",\n    businessImpactDetails: {\n      reputationalImpact: {\n        description:\n          \"High-level measures substantially reduce the risk of sensitive data exposure, protecting the organization’s reputation.\",\n        riskLevel: \"Low\",\n      },\n      regulatory: {\n        description:\n          \"Measures meet or exceed many regulatory requirements, thereby reducing legal risks.\",\n        riskLevel: \"Low\",\n      },\n    },\n  },\n  \"Very High\": {\n    description:\n      \"Maximum confidentiality measures are implemented for protecting highly sensitive or classified information.\",\n    technical:\n      \"Uses advanced encryption standards, hardware security modules, strict access controls, and a zero-trust architecture with continuous monitoring.\",\n    businessImpact:\n      \"Provides best-in-class protection, virtually eliminating the risk of unauthorized data access. However, the high cost and system complexity may not be justifiable for all organizations.\",\n    capex: 60,\n    opex: 40,\n    bg: getSecurityLevelColorPair(\"Very High\" as SecurityLevel).bg,\n    text: getSecurityLevelColorPair(\"Very High\" as SecurityLevel).text,\n    recommendations: [\n      \"Implement quantum-resistant encryption algorithms\",\n      \"Deploy hardware security modules for critical data repositories\",\n      \"Adopt a zero-trust architecture to continuously validate access\",\n    ],\n    protectionMethod: \"Military-grade encryption\",\n    businessImpactDetails: {\n      reputationalImpact: {\n        description:\n          \"Provides near-absolute protection of sensitive data, virtually eliminating the risk of reputational damage.\",\n        riskLevel: \"Minimal\",\n      },\n      strategic: {\n        description:\n          \"Enables secure handling of top-secret or highly regulated information, although the high investment and complexity require careful justification.\",\n        riskLevel: \"Minimal\",\n      },\n    },\n  },\n};\n\n// ROI estimates with proper typing\nconst _ROI_ESTIMATES: ROIEstimatesMap = {\n  NONE: {\n    value: \"0%\",\n    returnRate: \"0%\", // Added for backward compatibility\n    description:\n      \"No security investment results in no cost avoidance or operational benefits.\",\n    potentialSavings: \"$0\",\n    breakEvenPeriod: \"N/A\",\n  },\n  LOW: {\n    value: \"30-50%\",\n    returnRate: \"30-50%\", // Added for backward compatibility\n    description:\n      \"Basic security measures provide fundamental protection. Returns are modest but tangible, especially in preventing common incidents.\",\n    potentialSavings: \"$5,000-$20,000\",\n    breakEvenPeriod: \"12-18 months\",\n  },\n  MODERATE: {\n    value: \"50-100%\",\n    returnRate: \"50-100%\", // Added for backward compatibility\n    description:\n      \"Standard security investments provide good value. The ROI is substantial as risk mitigation becomes more comprehensive.\",\n    potentialSavings: \"$20,000-$75,000\",\n    breakEvenPeriod: \"9-12 months\",\n  },\n  HIGH: {\n    value: \"100-200%\",\n    returnRate: \"100-200%\", // Added for backward compatibility\n    description:\n      \"Advanced security measures yield significant returns through robust protection against sophisticated threats and compliance benefits.\",\n    potentialSavings: \"$75,000-$200,000\",\n    breakEvenPeriod: \"6-9 months\",\n  },\n  VERY_HIGH: {\n    value: \"150-300%\",\n    returnRate: \"150-300%\", // Added for backward compatibility\n    description:\n      \"Maximum security investments offer optimal protection and compliance coverage, with highest returns for critical systems.\",\n    potentialSavings: \"$200,000-$500,000\",\n    breakEvenPeriod: \"3-6 months\",\n    implementationCost: \"High initial investment\",\n  },\n};\n\n// Expose constants for external use - avoiding duplicate exports\nexport const availabilityOptions = _availabilityOptions;\nexport const integrityOptions = _integrityOptions;\nexport const confidentialityOptions = _confidentialityOptions;\nexport const ROI_ESTIMATES = _ROI_ESTIMATES;\n\n/**\n * Custom hook for accessing CIA security options with memoization\n */\nexport function useCIAOptions() {\n  // Memoize individual objects to prevent unnecessary re-renders\n  const availabilityOpts = useMemo(() => _availabilityOptions, []);\n  const integrityOpts = useMemo(() => _integrityOptions, []);\n  const confidentialityOpts = useMemo(() => _confidentialityOptions, []);\n  const roiEstimates = useMemo(() => _ROI_ESTIMATES, []);\n\n  // Memoize the combined object to prevent re-renders when hook is used\n  return useMemo(\n    () => ({\n      availabilityOptions: availabilityOpts,\n      integrityOptions: integrityOpts,\n      confidentialityOptions: confidentialityOpts,\n      ROI_ESTIMATES: roiEstimates,\n    }),\n    [availabilityOpts, integrityOpts, confidentialityOpts, roiEstimates]\n  );\n}\n\n// Export CIADetails for backward compatibility\nexport type { CIADetails } from \"../types/cia\";\n","/**\n * Constants for risk levels used throughout the application\n */\nexport const RISK_LEVELS = {\n  CRITICAL: \"Critical Risk\",\n  HIGH: \"High Risk\",\n  MEDIUM: \"Medium Risk\",\n  LOW: \"Low Risk\",\n  MINIMAL: \"Minimal Risk\",\n  UNKNOWN: \"Unknown Risk\",\n} as const;\n\nexport type RiskLevel = (typeof RISK_LEVELS)[keyof typeof RISK_LEVELS];\n\n/**\n * Gets risk level based on security level\n * @param securityLevel - The security level\n * @returns The corresponding risk level\n */\nexport function getRiskLevelFromSecurityLevel(\n  securityLevel: string\n): RiskLevel {\n  switch (securityLevel) {\n    case \"None\":\n      return RISK_LEVELS.CRITICAL;\n    case \"Low\":\n      return RISK_LEVELS.HIGH;\n    case \"Moderate\":\n      return RISK_LEVELS.MEDIUM;\n    case \"High\":\n      return RISK_LEVELS.LOW;\n    case \"Very High\":\n      return RISK_LEVELS.MINIMAL;\n    default:\n      return RISK_LEVELS.UNKNOWN;\n  }\n}\n\n// Business impact categories\nexport const BUSINESS_IMPACT_CATEGORIES = {\n  FINANCIAL: \"financial\",\n  OPERATIONAL: \"operational\",\n  REPUTATIONAL: \"reputational\",\n  REGULATORY: \"regulatory\",\n  STRATEGIC: \"strategic\",\n};\n","// App constants used by both components and tests\n// Centralized to avoid duplication and make tests more stable\n\n// Import from the shared risk constants file\nimport { RISK_LEVELS, BUSINESS_IMPACT_CATEGORIES } from \"./riskConstants\";\nimport { CIADetails, SecurityLevel } from \"../types/cia\"; // Import SecurityLevel\n// Import the UI constants for backward compatibility\nimport { BUSINESS_IMPACT_ICONS, SECURITY_LEVEL_COLORS } from \"./uiConstants\";\n\n// Re-export UI constants for backward compatibility, except WIDGET_ICONS\nexport { BUSINESS_IMPACT_ICONS, SECURITY_LEVEL_COLORS };\n\n// SecurityLevelMap type for cleaner lookups\nexport type SecurityLevelKey =\n  | \"NONE\"\n  | \"LOW\"\n  | \"MODERATE\"\n  | \"HIGH\"\n  | \"VERY_HIGH\";\nexport type SecurityLevelMap<T> = Record<SecurityLevelKey, T>;\n\n/**\n * Maps CIA option values to constants with consistent naming (NONE, LOW, etc.)\n * Modified version to avoid circular dependencies\n */\nexport const mapOptionsToConstants = <\n  T extends keyof CIADetails,\n  R = CIADetails[T]\n>(\n  options: Record<string, CIADetails>,\n  key: T,\n  transform?: (value: CIADetails[T], level: string) => R\n) => {\n  if (!options) {\n    return {\n      NONE: undefined,\n      LOW: undefined,\n      MODERATE: undefined,\n      HIGH: undefined,\n      VERY_HIGH: undefined,\n    };\n  }\n\n  return {\n    NONE:\n      options.None &&\n      (transform ? transform(options.None[key], \"None\") : options.None[key]),\n    LOW:\n      options.Low &&\n      (transform ? transform(options.Low[key], \"Low\") : options.Low[key]),\n    MODERATE:\n      options.Moderate &&\n      (transform\n        ? transform(options.Moderate[key], \"Moderate\")\n        : options.Moderate[key]),\n    HIGH:\n      options.High &&\n      (transform ? transform(options.High[key], \"High\") : options.High[key]),\n    VERY_HIGH:\n      options[\"Very High\"] &&\n      (transform\n        ? transform(options[\"Very High\"][key], \"Very High\")\n        : options[\"Very High\"][key]),\n  };\n};\n\n// Export the risk levels and business impact categories from here as well for consistency\nexport { RISK_LEVELS, BUSINESS_IMPACT_CATEGORIES };\n\n/**\n * Creates a matcher function for testing that checks if text appears in an element with a specific class\n *\n * @param text Text to look for\n * @param className CSS class the element should have\n * @returns A function that returns true if the element matches both conditions\n */\nexport const getTextElementMatcher = (text: string, className: string) => {\n  return (content: string, element: Element) =>\n    element.className.includes(className) &&\n    content.includes(getPartialTextMatcher(text));\n};\n\n// Exported test helpers - making it easy to do partial matches in tests\nexport const getPartialTextMatcher = (text: string, length = 15) => {\n  return text.substring(0, Math.min(text.length, length));\n};\n\n// Helper to create a RegExp from a constant for more robust test matching\nexport const createRegexMatcher = (text: string) => {\n  // Escape special regex characters and return a case-insensitive regex\n  const escaped = text.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  return new RegExp(escaped, \"i\");\n};\n\n// Helper for matching partial content in value descriptions\nexport const createValuePointMatcher = (point: string) => {\n  // Split the point into words and take first 2-3 to make a more robust matcher\n  const words = point.split(\" \").slice(0, 3).join(\"\\\\s+\");\n  return new RegExp(words, \"i\");\n};\n\n// Update the type of SECURITY_LEVELS to use the imported SecurityLevel\nexport const SECURITY_LEVELS: Record<SecurityLevelKey, SecurityLevel> = {\n  NONE: \"None\",\n  LOW: \"Low\",\n  MODERATE: \"Moderate\",\n  HIGH: \"High\",\n  VERY_HIGH: \"Very High\",\n};\n\n// CIA Component Labels\nexport const CIA_LABELS = {\n  AVAILABILITY: \"Availability\",\n  INTEGRITY: \"Integrity\",\n  CONFIDENTIALITY: \"Confidentiality\",\n};\n\n// CIA component icons\nexport const CIA_COMPONENT_ICONS = {\n  CONFIDENTIALITY: \"🔒\",\n  INTEGRITY: \"🔐\",\n  AVAILABILITY: \"⏱️\",\n};\n\n// CIA tooltip descriptions for better user understanding\nexport const CIA_DESCRIPTIONS = {\n  CONFIDENTIALITY: \"Controls who can access your data and systems\",\n  INTEGRITY: \"Ensures data remains accurate and unaltered\",\n  AVAILABILITY: \"Determines how reliably your systems can be accessed\",\n};\n\n// Compliance Status Text\nexport const COMPLIANCE_STATUS = {\n  NON_COMPLIANT: \"Non-Compliant\",\n  BASIC_COMPLIANCE: \"Meets basic compliance only\",\n  STANDARD_COMPLIANCE: \"Compliant with standard frameworks\",\n  FULL_COMPLIANCE: \"Compliant with all major frameworks\",\n};\n\n// Status Icons\nexport const UI_ICONS = {\n  // Compliance icons\n  NON_COMPLIANT: \"❌\",\n  BASIC_COMPLIANCE: \"⚠️\",\n  STANDARD_COMPLIANCE: \"✓\",\n  FULL_COMPLIANCE: \"✅\",\n\n  // Security level icons\n  SECURITY_NONE: \"⚠️\",\n  SECURITY_LOW: \"🔓\",\n  SECURITY_MODERATE: \"🔐\",\n  SECURITY_HIGH: \"🛡️\",\n  SECURITY_VERY_HIGH: \"🔒\",\n};\n\n// Security Summary Titles - derived from security levels\nexport const SECURITY_SUMMARY_TITLES = {\n  NONE: `${SECURITY_LEVELS.NONE} Security`,\n  LOW: `${SECURITY_LEVELS.LOW} Security`,\n  MODERATE: `${SECURITY_LEVELS.MODERATE} Security`,\n  HIGH: `${SECURITY_LEVELS.HIGH} Security`,\n  VERY_HIGH: `${SECURITY_LEVELS.VERY_HIGH} Security`,\n};\n\n// Security recommendations for each level\nexport const SECURITY_RECOMMENDATIONS = {\n  NONE: \"Not recommended for any production system. Implement basic security controls immediately.\",\n  LOW: \"Only appropriate for non-critical systems with public information.\",\n  MODERATE:\n    \"Suitable for internal business systems with some regulatory requirements.\",\n  HIGH: \"Appropriate for systems handling sensitive customer data or financial information.\",\n  VERY_HIGH:\n    \"Suitable for mission-critical systems handling top secret information.\",\n  BASIC: \"Only appropriate for non-critical systems with public information.\",\n};\n\n// Framework descriptions\nexport const FRAMEWORK_DESCRIPTIONS = {\n  SOC2: \"Requires basic security controls across CIA triad\",\n  ISO27001: \"Requires moderate security controls and management system\",\n  PCI_DSS: \"Emphasis on strong confidentiality controls\",\n  HIPAA: \"Requires protection of healthcare information\",\n  NIST: \"High security controls for federal information systems\",\n};\n\n// Security Descriptions - direct hardcoded values to maintain test compatibility\nexport const SECURITY_DESCRIPTIONS = {\n  NONE: \"No security controls implemented.\",\n  LOW: \"Basic protection with minimal controls and manual processes.\",\n  MODERATE:\n    \"Balanced protection with automated recovery, validation checks, and standard encryption.\",\n  HIGH: \"Robust protection with minimal single points of failure, blockchain validation, and strong encryption.\",\n  VERY_HIGH:\n    \"Maximum protection with quantum-safe encryption, multi-site redundancy, and real-time validation.\",\n};\n\n// Technical descriptions - for more detailed tooltips - using the helper function\nexport const TECHNICAL_DESCRIPTIONS = {\n  // Placeholder that will be populated by the actual components\n  AVAILABILITY: {} as Record<SecurityLevelKey, string>,\n  INTEGRITY: {} as Record<SecurityLevelKey, string>,\n  CONFIDENTIALITY: {} as Record<SecurityLevelKey, string>,\n};\n\n// Impact Analysis Descriptions using enhanced helper\nexport const IMPACT_DESCRIPTIONS = {\n  // Placeholder that will be populated by the actual components\n  AVAILABILITY: {} as Record<SecurityLevelKey, string>,\n  INTEGRITY: {} as Record<SecurityLevelKey, string>,\n  CONFIDENTIALITY: {} as Record<SecurityLevelKey, string>,\n};\n\n// Business Impact - using the helper\nexport const BUSINESS_IMPACTS = {\n  // Placeholder that will be populated by the actual components\n  AVAILABILITY: {} as Record<SecurityLevelKey, string>,\n  INTEGRITY: {} as Record<SecurityLevelKey, string>,\n  CONFIDENTIALITY: {} as Record<SecurityLevelKey, string>,\n};\n\n// Value Creation Points\nexport const VALUE_CREATION_POINTS: Partial<Record<SecurityLevel, string[]>> = {\n  None: [\"Minimal security baseline\"],\n  Low: [\"Basic security protection\"],\n  Moderate: [\"Demonstrates security diligence\"],\n  High: [\"Enables expansion into regulated markets\"],\n  \"Very High\": [\"Enables participation in classified\"],\n};\n\n// Detailed value creation points by security level\nexport const DETAILED_VALUE_POINTS = {\n  NONE: [\n    \"No value creation from security perspective\",\n    \"High risk of security incidents with significant business impact\",\n    \"Limited ability to participate in business relationships requiring security\",\n    \"Potential regulatory issues in many industries\",\n  ],\n  LOW: [\n    \"Minimal upfront costs allow budget allocation elsewhere\",\n    \"Appropriate for public data and low-impact internal systems\",\n    \"Provides basic protection against common threats\",\n    \"Simple implementation with minimal maintenance overhead\",\n  ],\n  MODERATE: [\n    \"Reduces operational disruptions by 80% compared to Basic level\",\n    \"Prevents common security incidents affecting quarterly performance\",\n    \"Provides competitive advantage over businesses with sub-standard security\",\n    \"Meets requirements for standard business relationships\",\n  ],\n  HIGH: [\n    \"Provides assurance to high-value customers with stringent requirements\",\n    \"Reduces insurance premiums through demonstrated security\",\n    \"Minimizes breach-related costs (avg. $4.45M per incident)\",\n    \"Supports premium service offerings where security is a differentiator\",\n  ],\n  VERY_HIGH: [\n    \"Protects irreplaceable intellectual property worth billions\",\n    \"Creates long-term trust with stakeholders including governments\",\n    \"Provides resilience against catastrophic events\",\n    \"Supports premium pricing models based on security guarantees\",\n  ],\n};\n\n// ROI Estimates - consistent format across all values\nexport const ROI_ESTIMATES = {\n  NONE: \"Negative (high risk of losses)\",\n  LOW: \"1-2x for basic security implementation\",\n  MODERATE: \"2-3x with moderate security\",\n  HIGH: \"3-5x with high security\",\n  VERY_HIGH: \"5x+ with very high security\",\n\n  // Also include structured data for component use\n  NONE_OBJ: {\n    returnRate: \"0%\",\n    description: \"No security investment means no return\",\n  },\n  LOW_OBJ: {\n    returnRate: \"120%\",\n    description: \"Basic security measures provide minimal protection\",\n  },\n  MODERATE_OBJ: {\n    returnRate: \"200%\",\n    description: \"Standard security provides good cost-benefit balance\",\n  },\n  HIGH_OBJ: {\n    returnRate: \"350%\",\n    description: \"Advanced security provides significant protection\",\n  },\n  VERY_HIGH_OBJ: {\n    returnRate: \"450%\",\n    description: \"Maximum security provides optimal protection\",\n  },\n};\n\n// Cost Analysis Messages\nexport const COST_ANALYSIS = {\n  SMALL_SOLUTION:\n    \"Basic security implementation with minimal investment. Suitable for small businesses or non-critical systems.\",\n  LARGE_SOLUTION:\n    \"Comprehensive security solution requiring significant investment. Recommended for critical systems or regulated industries.\",\n};\n\n// Framework names\nexport const COMPLIANCE_FRAMEWORKS = {\n  SOC2: \"SOC 2\", // Change if needed to match what the component uses\n  ISO27001: \"ISO 27001\",\n  PCI_DSS: \"PCI DSS\",\n  HIPAA: \"HIPAA\",\n  NIST: \"NIST 800-53 High\",\n};\n\n// Additional constants for specific UI components (previously in testConstants)\nexport const DISPLAY_FORMAT = {\n  CURRENCY_PREFIX: \"$\",\n  PERCENTAGE_SUFFIX: \"%\",\n  DECIMAL_PLACES: 2,\n};\n\n// UI Text constants - centralized text for all UI elements\nexport const UI_TEXT = {\n  // Common UI labels\n  LABELS: {\n    BUSINESS_IMPACT: \"Business Impact:\",\n    RECOMMENDATION: \"Recommendation:\",\n    ESTIMATED_COST: \"Estimated Implementation Cost\",\n    CAPEX: \"CAPEX:\",\n    OPEX: \"OPEX:\",\n    COST_ANALYSIS: \"Cost Analysis\",\n    BUSINESS_VALUE: \"Business value derived from this security profile:\",\n    ESTIMATED_ROI: \"Estimated ROI:\",\n    SECURITY_PROFILE: \"Security Profile\",\n    CURRENT_PROFILE: \"Current Profile\",\n    AVAILABILITY: \"Availability\",\n    INTEGRITY: \"Integrity\",\n    CONFIDENTIALITY: \"Confidentiality\",\n  },\n\n  // Widget titles\n  WIDGET_TITLES: {\n    SECURITY_LEVEL: \"Security Profile Configuration\",\n    SECURITY_SUMMARY: \"Security Summary\",\n    RADAR_CHART: \"Security Radar\",\n    COST_ESTIMATION: \"Cost Estimation\",\n    COMPLIANCE_STATUS: \"Compliance Status\",\n    VALUE_CREATION: \"Value Creation\",\n    IMPACT_ANALYSIS: \"Impact Analysis\",\n    SECURITY_PROFILE: \"CIA Security Profile\",\n    SECURITY_RESOURCES: \"Security Resources\",\n  },\n\n  // Budget related text\n  BUDGET: {\n    IT_BUDGET_CAPEX: \"of IT budget as one-time capital expenditure\",\n    IT_BUDGET_OPEX: \"of IT budget as annual operational expenses\",\n  },\n\n  // Security measures\n  SECURITY_MEASURES: {\n    AVAILABILITY: \"Availability\",\n    INTEGRITY: \"Integrity\",\n    CONFIDENTIALITY: \"Confidentiality\",\n  },\n\n  // Chart labels\n  CHART: {\n    LABEL_SECURITY_LEVELS: \"Security Levels\",\n    TITLE_SECURITY_PROFILE: \"Security Profile\",\n  },\n\n  // Value creation titles\n  VALUE_CREATION: {\n    NONE_TITLE: \"No Value Creation\",\n    WITH_LEVEL: (level: string) => `${level} Value Creation`,\n  },\n\n  // App title\n  APP_TITLE: \"CIA Compliance Manager Dashboard\",\n};\n\n// Test specific matchers for use in testing UI elements\nexport const TEST_MATCHERS = {\n  COMPLIANCE_FRAMEWORKS_REGEX: new RegExp(\n    Object.values(COMPLIANCE_FRAMEWORKS).join(\"|\")\n  ),\n  UPTIME_PATTERN: /\\d+\\.?\\d*%\\s+uptime/i,\n  DOWNTIME_PATTERN: /downtime/i,\n  // Add matchers for security descriptions\n  SECURITY_NONE_PATTERN: new RegExp(SECURITY_DESCRIPTIONS.NONE),\n  SECURITY_LOW_PATTERN: new RegExp(SECURITY_DESCRIPTIONS.LOW),\n  SECURITY_MODERATE_PATTERN: new RegExp(SECURITY_DESCRIPTIONS.MODERATE),\n  SECURITY_HIGH_PATTERN: new RegExp(SECURITY_DESCRIPTIONS.HIGH),\n  SECURITY_VERY_HIGH_PATTERN: new RegExp(SECURITY_DESCRIPTIONS.VERY_HIGH),\n};\n\n// Add for test data:\nexport const TEST_DATA = {\n  WIDGET: {\n    TITLE: \"Test Widget\",\n    CONTENT: \"Widget content\",\n    CUSTOM_CLASS: \"test-class\",\n  },\n  MOCK_DESCRIPTIONS: {\n    AVAILABILITY: \"Custom availability description\",\n    INTEGRITY: \"Custom integrity description\",\n    CONFIDENTIALITY: \"Custom confidentiality description\",\n  },\n  MOCK_OPTIONS: {\n    BASE: {\n      description: \"None\",\n      impact: \"None\",\n      technical: \"None\",\n      capex: 0,\n      opex: 0,\n      bg: \"#ffffff\",\n      text: \"#000000\",\n    },\n    LOW: {\n      description: \"Low\",\n      impact: \"Low\",\n      technical: \"Low\",\n      capex: 5,\n      opex: 5,\n      bg: \"#ffffff\",\n      text: \"#000000\",\n    },\n  },\n};\n\n// Add to the constants file\nexport const IMPLEMENTATION_COSTS: {\n  [key: string]: {\n    developmentEffort: string;\n    maintenance: string;\n    expertise: string;\n  };\n} = {\n  None: {\n    developmentEffort: \"Minimal\",\n    maintenance: \"None\",\n    expertise: \"Basic\",\n  },\n  Low: {\n    developmentEffort: \"Days\",\n    maintenance: \"Monthly checks\",\n    expertise: \"Junior\",\n  },\n  Moderate: {\n    developmentEffort: \"Weeks\",\n    maintenance: \"Weekly checks\",\n    expertise: \"Mid-level\",\n  },\n  High: {\n    developmentEffort: \"1-2 Months\",\n    maintenance: \"Daily monitoring\",\n    expertise: \"Senior\",\n  },\n  \"Very High\": {\n    developmentEffort: \"2-6 Months\",\n    maintenance: \"Continuous monitoring\",\n    expertise: \"Expert\",\n  },\n};\n\nexport const WIDGET_ICONS = {\n  SECURITY_LEVEL: \"🛡️\",\n  SECURITY_SUMMARY: \"📊\",\n  SECURITY_VISUALIZATION: \"📈\",\n  COMPLIANCE_STATUS: \"✅\",\n  VALUE_CREATION: \"💹\",\n  COST_ESTIMATION: \"💰\",\n  BUSINESS_IMPACT: \"🏢\",\n  TECHNICAL_IMPLEMENTATION: \"⚙️\",\n  AVAILABILITY_IMPACT: \"⏱️\",\n  INTEGRITY_IMPACT: \"🔐\",\n  CONFIDENTIALITY_IMPACT: \"🔒\",\n  SECURITY_RESOURCES: \"📚\",\n};\n","/**\n * Centralized Test ID constants for component selection in tests\n */\n\nimport { SecurityLevel } from \"../types/cia\"; // Updated import from .tsx to .ts\nimport { VALUE_CREATION_POINTS } from \"./appConstants\";\n\n// Add this function near the top of the file to make it easier to create compound testIds\nexport const createCompoundTestId = (prefix: string, suffix: string): string =>\n  `${prefix}-${suffix}`;\n\n// Add the missing createContextualTestId function\nexport const createContextualTestId = (\n  componentPrefix: string,\n  elementId: string\n): string => {\n  return `${componentPrefix}-${elementId}`;\n};\n\n// Add these mappings to help make testIds more unique and consistent\nexport const WIDGET_PREFIXES = {\n  SECURITY_PROFILE: \"widget-security-level\",\n  COST_ESTIMATION: \"widget-cost-estimation\",\n  BUSINESS_IMPACT: \"widget-business-impact\",\n  COMPLIANCE_STATUS: \"widget-compliance-status\",\n  RADAR_CHART: \"widget-radar-chart\",\n  VALUE_CREATION: \"widget-value-creation\",\n  SECURITY_SUMMARY: \"widget-security-summary\",\n  TECHNICAL_DETAILS: \"widget-technical-details\",\n};\n\n// CIA Component TestIDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const CIA_TEST_IDS = {\n  // Select dropdown elements\n  AVAILABILITY_SELECT: \"availability-selector\",\n  INTEGRITY_SELECT: \"integrity-selector\",\n  CONFIDENTIALITY_SELECT: \"confidentiality-selector\",\n\n  // Labels and descriptions\n  AVAILABILITY_LABEL: \"availability-label\",\n  INTEGRITY_LABEL: \"integrity-label\",\n  CONFIDENTIALITY_LABEL: \"confidentiality-label\",\n  AVAILABILITY_DESCRIPTION: \"availability-description\",\n  INTEGRITY_DESCRIPTION: \"integrity-description\",\n  CONFIDENTIALITY_DESCRIPTION: \"confidentiality-description\",\n\n  // Description text elements\n  AVAILABILITY_DESCRIPTION_TEXT: \"availability-description-text\",\n  INTEGRITY_DESCRIPTION_TEXT: \"integrity-description-text\",\n  CONFIDENTIALITY_DESCRIPTION_TEXT: \"confidentiality-description-text\",\n\n  // Sections and indicators\n  AVAILABILITY_SECTION: \"availability-section\",\n  INTEGRITY_SECTION: \"integrity-section\",\n  CONFIDENTIALITY_SECTION: \"confidentiality-section\",\n  AVAILABILITY_LEVEL_INDICATOR: \"availability-level-indicator\",\n  INTEGRITY_LEVEL_INDICATOR: \"integrity-level-indicator\",\n  CONFIDENTIALITY_LEVEL_INDICATOR: \"confidentiality-level-indicator\",\n\n  // Selected level indicators\n  AVAILABILITY_SELECTED_LEVEL: \"availability-selected-level\",\n  INTEGRITY_SELECTED_LEVEL: \"integrity-selected-level\",\n  CONFIDENTIALITY_SELECTED_LEVEL: \"confidentiality-selected-level\",\n\n  // Color indicators\n  AVAILABILITY_COLOR_INDICATOR: \"availability-color-indicator\",\n  INTEGRITY_COLOR_INDICATOR: \"integrity-color-indicator\",\n  CONFIDENTIALITY_COLOR_INDICATOR: \"confidentiality-color-indicator\",\n\n  // Technical info buttons and popovers\n  AVAILABILITY_TECHNICAL_INFO: \"availability-technical-info\",\n  INTEGRITY_TECHNICAL_INFO: \"integrity-technical-info\",\n  CONFIDENTIALITY_TECHNICAL_INFO: \"confidentiality-technical-info\",\n  AVAILABILITY_TECHNICAL_INFO_BUTTON: \"availability-technical-info-button\",\n  INTEGRITY_TECHNICAL_INFO_BUTTON: \"integrity-technical-info-button\",\n  CONFIDENTIALITY_TECHNICAL_INFO_BUTTON:\n    \"confidentiality-technical-info-button\",\n  AVAILABILITY_TECHNICAL_POPOVER: \"availability-technical-popover\",\n  INTEGRITY_TECHNICAL_POPOVER: \"integrity-technical-popover\",\n  CONFIDENTIALITY_TECHNICAL_POPOVER: \"confidentiality-technical-popover\",\n\n  // Badges\n  AVAILABILITY_UPTIME_BADGE: \"availability-uptime-badge\",\n  INTEGRITY_VALIDATION_BADGE: \"integrity-validation-badge\",\n  CONFIDENTIALITY_PROTECTION_BADGE: \"confidentiality-protection-badge\",\n\n  // Technical details and business impact\n  AVAILABILITY_TECHNICAL_DETAILS: \"availability-technical-details\",\n  INTEGRITY_TECHNICAL_DETAILS: \"integrity-technical-details\",\n  CONFIDENTIALITY_TECHNICAL_DETAILS: \"confidentiality-technical-details\",\n  AVAILABILITY_BUSINESS_IMPACT: \"availability-business-impact\",\n  INTEGRITY_BUSINESS_IMPACT: \"integrity-business-impact\",\n  CONFIDENTIALITY_BUSINESS_IMPACT: \"confidentiality-business-impact\",\n\n  // New constants\n  AVAILABILITY_KV: \"availability-kv\",\n  INTEGRITY_KV: \"integrity-kv\",\n  CONFIDENTIALITY_KV: \"confidentiality-kv\",\n  CURRENT_AVAILABILITY: \"current-availability\",\n  CURRENT_INTEGRITY: \"current-integrity\",\n  CURRENT_CONFIDENTIALITY: \"current-confidentiality\",\n\n  // Added missing properties\n  SECURITY_LEVEL_SELECTOR: \"security-level-selector\",\n  SECURITY_LEVEL_CONTROLS: \"security-level-controls\",\n\n  // Additional backward compatibility for any potential direct references\n  AVAILABILITY: \"availability\",\n  INTEGRITY: \"integrity\",\n  CONFIDENTIALITY: \"confidentiality\",\n};\n\n// Common widget test IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const WIDGET_TEST_IDS = {\n  // Keep existing IDs for backward compatibility\n  SECURITY_LEVEL_CONTROLS: \"security-level-controls\",\n  VALUE_CREATION_TITLE: \"value-creation-title\",\n  ROI_VALUE: \"roi-value\",\n  SECURITY_SUMMARY_TITLE: \"security-summary-title\",\n  LOADING_INDICATOR: \"loading-indicator\",\n  DATA_CONTAINER: \"data-container\",\n  CONTENT_TITLE: \"content-title\",\n\n  // Value Creation Widget\n  VALUE_CREATION_CONTENT: \"value-creation-content\",\n  VALUE_CREATION_SUBTITLE: \"value-creation-subtitle\",\n  VALUE_POINTS_LIST: \"value-points-list\",\n  ROI_SECTION: \"roi-section\",\n  // Add missing section ID for ValueCreationWidget tests\n  BENEFITS_SECTION: \"benefits-section\",\n\n  // Technical Details Widget\n  TECHNICAL_DETAILS_WIDGET: \"technical-details-widget\",\n  AVAILABILITY_TAB: \"availability-tab\",\n  INTEGRITY_TAB: \"integrity-tab\",\n  CONFIDENTIALITY_TAB: \"confidentiality-tab\",\n  TECHNICAL_HEADER: \"technical-header\",\n  TECHNICAL_DESCRIPTION: \"technical-description\",\n  IMPLEMENTATION_HEADER: \"implementation-header\",\n  RESOURCES_HEADER: \"resources-header\",\n  DEVELOPMENT_EFFORT: \"development-effort\",\n  MAINTENANCE_LEVEL: \"maintenance-level\",\n  REQUIRED_EXPERTISE: \"required-expertise\",\n\n  // CIA Impact Summary Widget\n  CIA_IMPACT_SUMMARY: \"cia-impact-summary\",\n  CIA_IMPACT_AVAILABILITY_ROW: \"cia-impact-availability-row\",\n  CIA_IMPACT_INTEGRITY_ROW: \"cia-impact-integrity-row\",\n  CIA_IMPACT_CONFIDENTIALITY_ROW: \"cia-impact-confidentiality-row\",\n  CIA_IMPACT_AVAILABILITY_LEVEL: \"cia-impact-availability-level\",\n  CIA_IMPACT_INTEGRITY_LEVEL: \"cia-impact-integrity-level\",\n  CIA_IMPACT_CONFIDENTIALITY_LEVEL: \"cia-impact-confidentiality-level\",\n\n  // Add more specific and standardized widget container IDs\n  SECURITY_LEVEL_WIDGET: \"widget-security-level\",\n  SECURITY_LEVEL_SELECTION: \"widget-security-level-selection\",\n  COST_ESTIMATION_WIDGET: \"widget-cost-estimation\",\n  BUSINESS_IMPACT_WIDGET: \"widget-business-impact\",\n  COMPLIANCE_STATUS_WIDGET: \"widget-compliance-status\",\n  RADAR_CHART_WIDGET: \"widget-radar-chart\",\n  VALUE_CREATION_WIDGET: \"widget-value-creation\",\n\n  // Add these new widget test IDs\n  INTEGRITY_IMPACT_WIDGET: \"widget-integrity-impact\",\n  CONFIDENTIALITY_IMPACT_WIDGET: \"widget-confidentiality-impact\",\n  AVAILABILITY_IMPACT_WIDGET: \"widget-availability-impact\",\n  SECURITY_RESOURCES_WIDGET: \"widget-security-resources\",\n};\n\n// BusinessImpactAnalysisWidget IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const BUSINESS_IMPACT_TEST_IDS = {\n  FINANCIAL_IMPACT_SECTION: \"financial-impact-section\",\n  OPERATIONAL_IMPACT_SECTION: \"operational-impact-section\",\n  REPUTATIONAL_IMPACT_SECTION: \"reputational-impact-section\",\n  REGULATORY_IMPACT_SECTION: \"regulatory-impact-section\",\n  STRATEGIC_IMPACT_SECTION: \"strategic-impact-section\",\n  // Add this line\n  BUSINESS_IMPACT_WIDGET: \"business-impact-widget\",\n  BUSINESS_IMPACT_ANALYSIS_PREFIX: \"business-impact-analysis\",\n  CATEGORY_ICON_PREFIX: \"category-icon\",\n  IMPACT_ANALYSIS_PREFIX: \"impact-analysis\",\n  IMPACT_LEVEL_INDICATOR_PREFIX: \"impact-level-indicator\",\n  IMPACT_LEVEL_TEXT_PREFIX: \"impact-level-text\",\n  IMPACT_DESCRIPTION_PREFIX: \"impact-description\",\n  BUSINESS_IMPACT_PREFIX: \"business-impact\",\n\n  // Tabs and sections\n  TAB_CONSIDERATIONS: \"tab-considerations\",\n  TAB_BENEFITS: \"tab-benefits\",\n  BUSINESS_IMPACT_SUMMARY: \"business-impact-summary\",\n  BUSINESS_CONSIDERATIONS: \"business-considerations\",\n  BUSINESS_BENEFITS: \"business-benefits\",\n  NO_CONSIDERATIONS_MESSAGE: \"no-considerations-message\",\n  NO_BENEFITS_MESSAGE: \"no-benefits-message\",\n\n  // Impact metrics\n  IMPACT_METRICS_SECTION: \"impact-metrics-section\",\n  FINANCIAL_IMPACT_CARD: \"financial-impact-card\",\n  FINANCIAL_IMPACT_METRICS: \"financial-impact-metrics\",\n  ANNUAL_REVENUE_LOSS: \"annual-revenue-loss\",\n  REVENUE_LOSS_KV: \"revenue-loss-kv\",\n  OPERATIONAL_IMPACT_CARD: \"operational-impact-card\",\n  OPERATIONAL_IMPACT_METRICS: \"operational-impact-metrics\",\n  MEAN_RECOVERY_TIME: \"mean-recovery-time\",\n  RECOVERY_TIME_KV: \"recovery-time-kv\",\n\n  // Combined Impact Widget\n  COMBINED_BUSINESS_IMPACT_WIDGET: \"combined-business-impact-widget\",\n};\n\n// ComplianceStatusWidget IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const FRAMEWORK_TEST_IDS = {\n  COMPLIANCE_FRAMEWORKS_CONTAINER: \"compliance-frameworks-container\",\n  FRAMEWORK_ITEM_PREFIX: \"framework-item\",\n  COMPLIANCE_STATUS_WIDGET: \"compliance-status-widget\",\n  COMPLIANCE_STATUS_BADGE: \"compliance-status-badge\",\n  COMPLIANT_FRAMEWORKS_LIST: \"compliant-frameworks-list\",\n  COMPLIANCE_REQUIREMENTS_LIST: \"compliance-requirements-list\",\n};\n\n// RadarChart test IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const CHART_TEST_IDS = {\n  RADAR_CHART: \"radar-chart\",\n  RADAR_CHART_CONTAINER: \"radar-chart-container\",\n  RADAR_CHART_CANVAS: \"radar-chart-canvas\",\n  RADAR_CHART_ERROR: \"radar-chart-error\",\n  RADAR_AVAILABILITY_VALUE: \"radar-availability-value\",\n  RADAR_INTEGRITY_VALUE: \"radar-integrity-value\",\n  RADAR_CONFIDENTIALITY_VALUE: \"radar-confidentiality-value\",\n};\n\n// CostEstimationWidget test IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const COST_TEST_IDS = {\n  // Keep existing IDs for backward compatibility\n  COST_CONTAINER: \"cost-container\",\n  CAPEX_VALUE: \"capex-value\",\n  OPEX_VALUE: \"opex-value\",\n  TOTAL_COST: \"total-cost\",\n  ROI_ESTIMATE: \"roi-estimate\",\n\n  // Cost Estimation Widget\n  COST_ESTIMATION_CONTENT: \"cost-estimation-content\",\n  ESTIMATED_COST_HEADING: \"estimated-cost-heading\",\n  IMPLEMENTATION_TIME: \"implementation-time\",\n  CAPEX_SEVERITY_ICON: \"capex-severity-icon\",\n  CAPEX_ESTIMATE_VALUE: \"capex-estimate-value\",\n  CAPEX_SECTION: \"capex-section\",\n  CAPEX_PROGRESS_BAR: \"capex-progress-bar\",\n  CAPEX_PERCENTAGE: \"capex-percentage\",\n  OPEX_SEVERITY_ICON: \"opex-severity-icon\",\n  OPEX_ESTIMATE_VALUE: \"opex-estimate-value\",\n  MONTHLY_OPEX: \"monthly-opex\",\n  OPEX_SECTION: \"opex-section\",\n  OPEX_PROGRESS_BAR: \"opex-progress-bar\",\n  OPEX_PERCENTAGE: \"opex-percentage\",\n  TOTAL_COST_SUMMARY: \"total-cost-summary\",\n  THREE_YEAR_TOTAL: \"three-year-total\",\n  COST_ANALYSIS_SECTION: \"cost-analysis-section\",\n  COST_ANALYSIS_HEADING: \"cost-analysis-heading\",\n  COST_ANALYSIS_TEXT: \"cost-analysis-text\",\n  ROI_SECTION: \"roi-section\",\n\n  // Add more specific IDs\n  COST_ESTIMATION_WIDGET: \"widget-cost-estimation\",\n  COST_ESTIMATION_ROOT: \"widget-cost-estimation-root\",\n};\n\n// SecuritySummaryWidget test IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const SUMMARY_TEST_IDS = {\n  SUMMARY_CONTAINER: \"security-summary-container\",\n  OVERALL_RATING: \"overall-rating\",\n  SECURITY_LEVEL_DESCRIPTION: \"security-level-description\",\n  SECURITY_RECOMMENDATIONS: \"security-recommendations\",\n  CIA_RATINGS: \"cia-ratings\",\n\n  // Security Summary Widget\n  SECURITY_SUMMARY_CONTAINER: \"security-summary-container\",\n  SECURITY_LEVEL_INDICATOR: \"security-level-indicator\",\n  SECURITY_ICON: \"security-icon\",\n  SECURITY_LEVEL_PROGRESS_BAR: \"security-level-progress-bar\",\n  SECURITY_SUMMARY_DESCRIPTION: \"security-summary-description\",\n  ROI_ESTIMATE_SUMMARY: \"roi-estimate-summary\",\n  ROI_ESTIMATE_PAIR: \"roi-estimate-pair\",\n\n  // Toggle sections\n  TECHNICAL_SECTION_TOGGLE: \"technical-section-toggle\",\n  TECHNICAL_DETAILS_SECTION: \"technical-details-section\",\n  BUSINESS_IMPACT_TOGGLE: \"business-impact-toggle\",\n  BUSINESS_IMPACT_SECTION: \"business-impact-section\",\n  METRICS_TOGGLE: \"metrics-toggle\",\n  METRICS_SECTION: \"metrics-section\",\n\n  // CIA levels in summary\n  AVAILABILITY_LEVEL_PILL: \"availability-level-pill\",\n  INTEGRITY_LEVEL_PILL: \"integrity-level-pill\",\n  CONFIDENTIALITY_LEVEL_PILL: \"confidentiality-level-pill\",\n\n  // Technical heading/details\n  AVAILABILITY_TECH_HEADING: \"availability-tech-heading\",\n  INTEGRITY_TECH_HEADING: \"integrity-tech-heading\",\n  CONFIDENTIALITY_TECH_HEADING: \"confidentiality-tech-heading\",\n  AVAILABILITY_TECH_DETAILS: \"availability-tech-details\",\n  INTEGRITY_TECH_DETAILS: \"integrity-tech-details\",\n  CONFIDENTIALITY_TECH_DETAILS: \"confidentiality-tech-details\",\n\n  // Impact headings/details\n  AVAILABILITY_IMPACT_HEADING: \"availability-impact-heading\",\n  INTEGRITY_IMPACT_HEADING: \"integrity-impact-heading\",\n  CONFIDENTIALITY_IMPACT_HEADING: \"confidentiality-impact-heading\",\n  AVAILABILITY_IMPACT_DETAILS: \"availability-impact-details\",\n  INTEGRITY_IMPACT_DETAILS: \"integrity-impact-details\",\n  CONFIDENTIALITY_IMPACT_DETAILS: \"confidentiality-impact-details\",\n\n  // Benefits and recommendations\n  KEY_BENEFITS_HEADING: \"key-benefits-heading\",\n  KEY_BENEFITS_LIST: \"key-benefits-list\",\n  RECOMMENDATION_HEADING: \"recommendation-heading\",\n  SECURITY_RECOMMENDATION: \"security-recommendation\",\n\n  // Status badges - ORIGINAL NAMES WITHOUT PREFIX\n  BADGE_HIGH_RISK: \"badge-high-risk\",\n  BADGE_NOT_RECOMMENDED: \"badge-not-recommended\",\n  BADGE_LIMITED_PROTECTION: \"badge-limited-protection\",\n  BADGE_PUBLIC_DATA_ONLY: \"badge-public-data-only\",\n  BADGE_COMPLIANCE_READY: \"badge-compliance-ready\",\n  BADGE_GOOD_BALANCE: \"badge-good-balance\",\n  BADGE_STRONG_PROTECTION: \"badge-strong-protection\",\n  BADGE_SENSITIVE_DATA_READY: \"badge-sensitive-data-ready\",\n  BADGE_MAXIMUM_SECURITY: \"badge-maximum-security\",\n  BADGE_MISSION_CRITICAL: \"badge-mission-critical\",\n};\n\n// App-level test IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const APP_TEST_IDS = {\n  APP_CONTAINER: \"app-container\",\n  THEME_TOGGLE: \"theme-toggle\",\n  APP_TITLE: \"app-title\",\n  DASHBOARD_CONTAINER: \"dashboard-container\",\n  APP_ROOT: \"app-root\",\n  CIA_CLASSIFICATION_APP: \"cia-classification-app\",\n  DASHBOARD_GRID: \"dashboard-grid\",\n  // Add missing theme toggle specific IDs\n  THEME_TOGGLE_DARK: \"theme-toggle-dark\",\n  THEME_TOGGLE_LIGHT: \"theme-toggle-light\",\n};\n\n// Common component test IDs - KEEP ORIGINAL VALUES FOR BACKWARD COMPATIBILITY\nexport const COMMON_COMPONENT_TEST_IDS = {\n  // MetricsCard\n  METRICS_CARD: \"metrics-card\",\n  METRICS_CARD_TITLE: \"metrics-card-title\",\n  METRICS_CARD_TREND: \"metrics-card-trend\",\n  METRICS_CARD_VALUE: \"metrics-card-value\",\n\n  // KeyValuePair\n  KEY_VALUE_PAIR: \"key-value-pair\",\n  KV_LABEL: \"kv-label\",\n  KV_VALUE: \"kv-value\",\n\n  // StatusBadge\n  STATUS_BADGE: \"status-badge\",\n\n  // ValueDisplay\n  VALUE_DISPLAY: \"value-display\",\n  DISPLAYED_VALUE: \"displayed-value\",\n\n  // SecurityLevelSelector\n  CURRENT_AVAILABILITY: \"current-availability\",\n  AVAILABILITY_KV: \"availability-kv\",\n  CURRENT_INTEGRITY: \"current-integrity\",\n  INTEGRITY_KV: \"integrity-kv\",\n  CURRENT_CONFIDENTIALITY: \"current-confidentiality\",\n  CONFIDENTIALITY_KV: \"confidentiality-kv\",\n\n  // Selection\n  CONTEXT_INFO: \"context-info\",\n};\n\n// Widget registry test IDs\nexport const WIDGET_REGISTRY_TEST_IDS = {\n  WIDGET_PREFIX: \"widget-\",\n};\n\n// Add these missing constants to the file with other test IDs\n\nexport const AVAILABILITY_IMPACT_TEST_IDS = {\n  AVAILABILITY_IMPACT_PREFIX: \"widget-availability-impact\",\n  AVAILABILITY_IMPACT_TITLE: \"availability-impact-title\",\n  AVAILABILITY_IMPACT_DESCRIPTION: \"availability-impact-description\",\n  AVAILABILITY_IMPACT_BUSINESS_IMPACT: \"availability-impact-business-impact\",\n  AVAILABILITY_IMPACT_VALUE: \"availability-impact-value\",\n  AVAILABILITY_IMPACT_UPTIME: \"availability-impact-uptime\",\n  AVAILABILITY_IMPACT_MTTR: \"availability-impact-mttr\",\n  AVAILABILITY_IMPACT_RTO: \"availability-impact-rto\",\n  AVAILABILITY_IMPACT_RPO: \"availability-impact-rpo\",\n  AVAILABILITY_IMPACT_RECOMMENDATIONS: \"availability-impact-recommendations\",\n  AVAILABILITY_IMPACT_BUSINESS_PERSPECTIVE:\n    \"availability-impact-business-perspective\",\n};\n\nexport const CONFIDENTIALITY_IMPACT_TEST_IDS = {\n  CONFIDENTIALITY_IMPACT_PREFIX: \"confidentiality-impact\",\n  CONFIDENTIALITY_IMPACT_DESCRIPTION: \"confidentiality-impact-description\",\n  CONFIDENTIALITY_IMPACT_VALUE: \"confidentiality-impact-value\",\n};\n\nexport const INTEGRITY_IMPACT_TEST_IDS = {\n  INTEGRITY_IMPACT_PREFIX: \"integrity-impact\",\n  INTEGRITY_IMPACT_DESCRIPTION: \"integrity-impact-description\",\n  INTEGRITY_IMPACT_VALUE: \"integrity-impact-value\",\n};\n\nexport const SECURITY_SUMMARY_TEST_IDS = {\n  SECURITY_SUMMARY_PREFIX: \"security-summary\",\n  SECURITY_ICON: \"security-icon\",\n  OVERALL_LEVEL: \"overall-level\",\n  AVAILABILITY_LEVEL: \"availability-level\",\n  INTEGRITY_LEVEL: \"integrity-level\",\n  CONFIDENTIALITY_LEVEL: \"confidentiality-level\",\n  IMPLICATIONS: \"implications\",\n  TECHNICAL_SECTION_TOGGLE: \"technical-section-toggle\",\n  TECHNICAL_DETAILS_SECTION: \"technical-details-section\",\n  BUSINESS_IMPACT_TOGGLE: \"business-impact-toggle\",\n  BUSINESS_IMPACT_SECTION: \"business-impact-section\",\n  METRICS_TOGGLE: \"metrics-toggle\",\n  METRICS_SECTION: \"metrics-section\",\n  TECHNICAL_IMPLEMENTATION_DETAILS: \"technical-implementation-details\",\n  AVAILABILITY_TECH_HEADING: \"availability-tech-heading\",\n  INTEGRITY_TECH_HEADING: \"integrity-tech-heading\",\n  CONFIDENTIALITY_TECH_HEADING: \"confidentiality-tech-heading\",\n  SECURITY_RECOMMENDATION: \"security-recommendation\",\n};\n\nexport const TECHNICAL_DETAILS_TEST_IDS = {\n  TECHNICAL_DETAILS_PREFIX: \"technical-details\",\n  TECHNICAL_DETAILS_WIDGET: \"technical-details-widget\", // Add this line\n  AVAILABILITY_SECTION: \"technical-details-availability\",\n  INTEGRITY_SECTION: \"technical-details-integrity\",\n  CONFIDENTIALITY_SECTION: \"technical-details-confidentiality\",\n};\n\nexport const COMPLIANCE_STATUS_TEST_IDS = {\n  COMPLIANCE_STATUS_PREFIX: \"compliance-status\",\n  COMPLIANCE_STATUS_BADGE: \"compliance-status-badge\",\n  COMPLIANCE_FRAMEWORK_ITEM: \"compliance-framework-item\",\n  COMPLIANCE_REQUIREMENTS_LIST: \"compliance-requirements-list\",\n};\n\nexport const SECURITY_RESOURCES_TEST_IDS = {\n  SECURITY_RESOURCES_PREFIX: \"security-resources\",\n  RESOURCE_ITEM: \"security-resource-item\",\n  RESOURCE_LIST: \"security-resources-list\",\n  SECURITY_RESOURCES_WIDGET: \"security-resources-widget\",\n};\n\nexport const SECURITY_LEVEL_TEST_IDS = {\n  SECURITY_LEVEL_PREFIX: \"security-level\",\n  SECURITY_LEVEL_SELECTOR: \"security-level-selector\",\n};\n\nexport const VALUE_CREATION_TEST_IDS = {\n  VALUE_CREATION_WIDGET: \"value-creation-widget\",\n  VALUE_CREATION_PREFIX: \"value-creation\",\n  VALUE_POINT: \"value-point\",\n  VALUE_POINTS_LIST: \"value-points-list\",\n};\n\n/**\n * Export CIA component types for usage in widgets and components\n */\nexport type CIAComponentType = \"confidentiality\" | \"integrity\" | \"availability\";\n\n/**\n * Helper for type-safe SecurityLevel conversion\n * Use this to convert strings to SecurityLevel type when needed\n */\nexport function asSecurityLevel(level: string): SecurityLevel {\n  return level as SecurityLevel;\n}\n\n/**\n * Helper functions for dynamic test ID generation - KEEP ORIGINAL FUNCTIONS\n */\nexport const createDynamicTestId = {\n  valuePoint: (index: number): string => `value-point-${index}`,\n  implementationStep: (index: number): string => `implementation-step-${index}`,\n  techStack: (index: number): string => `tech-stack-${index}`,\n  considerationItem: (index: number): string => `consideration-item-${index}`,\n  considerationDescription: (index: number): string =>\n    `consideration-description-${index}`,\n  impactType: (index: number): string => `impact-type-${index}`,\n  impactTypeKv: (index: number): string => `impact-type-kv-${index}`,\n  riskBadge: (index: number): string => `risk-badge-${index}`,\n  benefitItem: (index: number): string => `benefit-item-${index}`,\n  keyBenefit: (index: number): string => `key-benefit-${index}`,\n  framework: (index: number): string => `framework-${index}`,\n  frameworkStatus: (framework: string): string =>\n    `framework-status-${framework}`,\n  categorySpecific: (prefix: string, category: string): string =>\n    `${prefix}-${category.toLowerCase()}`,\n  option: (level: string): string => `option-${level}`,\n  widgetId: (id: string): string => `widget-${id}`,\n};\n\n// Helper function to get a test ID with a prefix\nexport function getTestId(prefix: string, id: string): string {\n  return `${prefix}-${id}`;\n}\n\n/**\n * Test helpers for working with security levels and related data\n */\nexport const TEST_HELPERS = {\n  /**\n   * Type-safe way to get value points for a security level\n   */\n  getValuePointsForLevel: (level: string): string[] | undefined => {\n    return VALUE_CREATION_POINTS[level as keyof typeof VALUE_CREATION_POINTS];\n  },\n  /**\n   * Convert string to SecurityLevel type safely\n   */\n  toSecurityLevel: (level: string): SecurityLevel => {\n    return level as SecurityLevel;\n  },\n};\n\n// Export all test IDs in a single object for convenience\nexport const TEST_IDS = {\n  ...CIA_TEST_IDS,\n  ...WIDGET_TEST_IDS,\n  ...BUSINESS_IMPACT_TEST_IDS,\n  ...FRAMEWORK_TEST_IDS,\n  ...CHART_TEST_IDS,\n  ...COST_TEST_IDS,\n  ...SUMMARY_TEST_IDS,\n  ...APP_TEST_IDS,\n  ...COMMON_COMPONENT_TEST_IDS,\n  ...WIDGET_REGISTRY_TEST_IDS,\n  ...AVAILABILITY_IMPACT_TEST_IDS,\n  ...CONFIDENTIALITY_IMPACT_TEST_IDS,\n  ...INTEGRITY_IMPACT_TEST_IDS,\n  ...SECURITY_SUMMARY_TEST_IDS,\n  ...TECHNICAL_DETAILS_TEST_IDS,\n  ...COMPLIANCE_STATUS_TEST_IDS,\n  ...SECURITY_RESOURCES_TEST_IDS,\n  ...SECURITY_LEVEL_TEST_IDS,\n  ...VALUE_CREATION_TEST_IDS,\n  createDynamicTestId,\n  getTestId,\n  TEST_HELPERS,\n};\n","import { SecurityLevel } from \"../types/cia\"; // Remove unused CIAOptions import\n\n// Widget Icons - For consistent icon use across the application\nexport const WIDGET_ICONS = {\n  SECURITY_LEVEL: \"🔐\",\n  SECURITY_SUMMARY: \"📊\",\n  SECURITY_VISUALIZATION: \"📊\",\n  COMPLIANCE_STATUS: \"✓\",\n  VALUE_CREATION: \"💰\",\n  COST_ESTIMATION: \"💲\",\n  BUSINESS_IMPACT: \"🏢\",\n  TECHNICAL_IMPLEMENTATION: \"⚙️\",\n  AVAILABILITY_IMPACT: \"⏱️\",\n  INTEGRITY_IMPACT: \"🛡️\",\n  CONFIDENTIALITY_IMPACT: \"🔒\",\n  SECURITY_RESOURCES: \"📚\",\n};\n\n// CIA Component Icons and Labels\nexport const CIA_COMPONENT_ICONS = {\n  AVAILABILITY: \"⏱️\",\n  INTEGRITY: \"🔐\",\n  CONFIDENTIALITY: \"🔏\",\n};\n\nexport const CIA_LABELS = {\n  AVAILABILITY: \"Availability\",\n  INTEGRITY: \"Integrity\",\n  CONFIDENTIALITY: \"Confidentiality\",\n};\n\n// Security level color scheme\nexport const SECURITY_LEVEL_COLORS = {\n  NONE: \"#e74c3c\", // Red\n  LOW: \"#f39c12\", // Orange\n  MODERATE: \"#f1c40f\", // Yellow\n  HIGH: \"#2ecc71\", // Green\n  VERY_HIGH: \"#3498db\", // Blue\n};\n\n// Security Levels\nexport const SECURITY_LEVELS = {\n  NONE: \"None\",\n  LOW: \"Low\",\n  MODERATE: \"Moderate\",\n  HIGH: \"High\",\n  VERY_HIGH: \"Very High\",\n};\n\n// Widget Titles\nexport const WIDGET_TITLES = {\n  SECURITY_LEVEL: \"Security Level Selection\",\n  SECURITY_SUMMARY: \"Security Summary\",\n  SECURITY_VISUALIZATION: \"Security Visualization\",\n  COMPLIANCE_STATUS: \"Compliance Status\",\n  VALUE_CREATION: \"Value Creation\",\n  COST_ESTIMATION: \"Cost Estimation\",\n  BUSINESS_IMPACT: \"Business Impact\",\n  TECHNICAL_IMPLEMENTATION: \"Technical Implementation\",\n  SECURITY_PROFILE: \"CIA Security Profile\",\n  SECURITY_RESOURCES: \"Security Resources\",\n  AVAILABILITY_IMPACT: \"Availability Impact\",\n  INTEGRITY_IMPACT: \"Integrity Impact\",\n  CONFIDENTIALITY_IMPACT: \"Confidentiality Impact\",\n};\n\n// Implementation details\nexport const IMPLEMENTATION_COSTS: Record<\n  SecurityLevel,\n  {\n    developmentEffort: string;\n    maintenance: string;\n    expertise: string;\n  }\n> = {\n  None: {\n    developmentEffort: \"Minimal\",\n    maintenance: \"None\",\n    expertise: \"Basic\",\n  },\n  Low: {\n    developmentEffort: \"Days\",\n    maintenance: \"Monthly checks\",\n    expertise: \"Junior\",\n  },\n  Moderate: {\n    developmentEffort: \"Weeks\",\n    maintenance: \"Weekly checks\",\n    expertise: \"Mid-level\",\n  },\n  High: {\n    developmentEffort: \"1-2 Months\",\n    maintenance: \"Daily monitoring\",\n    expertise: \"Senior\",\n  },\n  \"Very High\": {\n    developmentEffort: \"2-6 Months\",\n    maintenance: \"Continuous monitoring\",\n    expertise: \"Expert\",\n  },\n};\n\n// UI Text constants for labels\nexport const UI_TEXT = {\n  // Common UI labels\n  LABELS: {\n    BUSINESS_IMPACT: \"Business Impact:\",\n    RECOMMENDATION: \"Recommendation:\",\n    ESTIMATED_COST: \"Estimated Implementation Cost\",\n    CAPEX: \"CAPEX:\",\n    OPEX: \"OPEX:\",\n    COST_ANALYSIS: \"Cost Analysis\",\n    BUSINESS_VALUE: \"Business value derived from this security profile:\",\n    ESTIMATED_ROI: \"Estimated ROI:\",\n    SECURITY_PROFILE: \"Security Profile\",\n    CURRENT_PROFILE: \"Current Profile\",\n  },\n\n  // Budget related text\n  BUDGET: {\n    IT_BUDGET_CAPEX: \"of IT budget as one-time capital expenditure\",\n    IT_BUDGET_OPEX: \"of IT budget as annual operational expenses\",\n  },\n\n  // Value creation titles\n  VALUE_CREATION: {\n    NONE_TITLE: \"No Value Creation\",\n    WITH_LEVEL: (level: string) => `${level} Value Creation`,\n  },\n\n  // Add WIDGET_TITLES\n  WIDGET_TITLES: WIDGET_TITLES, // Reference the already defined WIDGET_TITLES constant\n};\n\n// Security level type helpers\nexport type SecurityLevelKey =\n  | \"NONE\"\n  | \"LOW\"\n  | \"MODERATE\"\n  | \"HIGH\"\n  | \"VERY_HIGH\";\nexport type SecurityLevelMap<T> = Record<SecurityLevelKey, T>;\n\n// Framework names\nexport const COMPLIANCE_FRAMEWORKS = {\n  SOC2: \"SOC 2 Type 2\",\n  ISO27001: \"ISO 27001\",\n  PCI_DSS: \"PCI DSS\",\n  HIPAA: \"HIPAA\",\n  NIST: \"NIST 800-53 High\",\n};\n\n// Compliance Status Text\nexport const COMPLIANCE_STATUS = {\n  NON_COMPLIANT: \"Non-Compliant\",\n  BASIC_COMPLIANCE: \"Meets basic compliance only\",\n  STANDARD_COMPLIANCE: \"Compliant with standard frameworks\",\n  FULL_COMPLIANCE: \"Compliant with all major frameworks\",\n};\n\n// Add this export if it's defined in this file\nexport const SECURITY_DESCRIPTIONS = {\n  NONE: \"No security controls implemented.\",\n  LOW: \"Basic protection with minimal controls and manual processes.\",\n  MODERATE:\n    \"Balanced protection with automated recovery, validation checks, and standard encryption.\",\n  HIGH: \"Robust protection with minimal single points of failure, blockchain validation, and strong encryption.\",\n  VERY_HIGH:\n    \"Maximum protection with quantum-safe encryption, multi-site redundancy, and real-time validation.\",\n};\n","import { SecurityLevel } from \"../types/cia\";\nimport { SECURITY_LEVELS } from \"../constants/appConstants\";\n\n/**\n * Normalizes a security level string to ensure it's a valid SecurityLevel value\n * @param level The input security level string\n * @returns A valid SecurityLevel\n */\nexport function normalizeSecurityLevel(level?: string): SecurityLevel {\n  if (!level) return SECURITY_LEVELS.NONE as SecurityLevel;\n\n  // Check direct match first\n  if (Object.values(SECURITY_LEVELS).includes(level as any)) {\n    return level as SecurityLevel;\n  }\n\n  // Try case-insensitive match\n  const normalizedLevel = level.toLowerCase();\n  for (const validLevel of Object.values(SECURITY_LEVELS)) {\n    if (normalizedLevel === validLevel.toLowerCase()) {\n      return validLevel as SecurityLevel;\n    }\n  }\n\n  // Default fallback\n  return SECURITY_LEVELS.NONE as SecurityLevel;\n}\n\n/**\n * Gets a numerical value for a security level for calculations\n * @param level The security level string\n * @returns A number from 0 (None) to 4 (Very High)\n */\nexport function getSecurityLevelValue(level: SecurityLevel | string): number {\n  const normalizedLevel = normalizeSecurityLevel(level as SecurityLevel);\n\n  switch (normalizedLevel) {\n    case \"Very High\":\n      return 4;\n    case \"High\":\n      return 3;\n    case \"Moderate\":\n      return 2;\n    case \"Low\":\n      return 1;\n    case \"None\":\n    default:\n      return 0;\n  }\n}\n\n/**\n * Provides a numerical representation of security levels for UI presentation\n * @param level The security level string\n * @returns A string representation formatted as a percentage\n */\nexport function getSecurityLevelPercentage(level: string): string {\n  const value = getSecurityLevelValue(level);\n  const percentage = value * 25; // 0, 25, 50, 75, 100\n  return `${percentage}%`;\n}\n\n/**\n * Determines the appropriate CSS classes for displaying a security level\n * @param level The security level string\n * @returns CSS class string for styling the security level\n */\nexport function getSecurityLevelClass(level: string): string {\n  const normalizedLevel = normalizeSecurityLevel(level);\n\n  switch (normalizedLevel) {\n    case SECURITY_LEVELS.VERY_HIGH:\n      return \"text-purple-600 dark:text-purple-400 font-bold\";\n    case SECURITY_LEVELS.HIGH:\n      return \"text-green-600 dark:text-green-400 font-bold\";\n    case SECURITY_LEVELS.MODERATE:\n      return \"text-blue-600 dark:text-blue-400\";\n    case SECURITY_LEVELS.LOW:\n      return \"text-yellow-600 dark:text-yellow-400\";\n    case SECURITY_LEVELS.NONE:\n    default:\n      return \"text-gray-600 dark:text-gray-400\";\n  }\n}\n\n/**\n * Map a security level to a status badge variant\n * @param level The security level string\n * @returns A status badge variant\n */\nexport function getSecurityLevelBadgeVariant(\n  level: string\n): \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" | \"purple\" {\n  const normalizedLevel = normalizeSecurityLevel(level);\n\n  switch (normalizedLevel) {\n    case SECURITY_LEVELS.VERY_HIGH:\n      return \"purple\";\n    case SECURITY_LEVELS.HIGH:\n      return \"success\";\n    case SECURITY_LEVELS.MODERATE:\n      return \"info\";\n    case SECURITY_LEVELS.LOW:\n      return \"warning\";\n    case SECURITY_LEVELS.NONE:\n      return \"error\";\n    default:\n      return \"neutral\";\n  }\n}\n","import { RISK_LEVELS } from \"../constants/riskConstants\";\nimport {\n  availabilityOptions,\n  confidentialityOptions,\n  EnhancedCIADetails,\n  integrityOptions,\n  ROI_ESTIMATES,\n} from \"../hooks/useCIAOptions\";\nimport { SecurityLevel } from \"../types/cia\";\nimport {\n  BusinessImpactDetails,\n  CIAComponentType,\n  ROIEstimatesMap,\n  ROIMetrics,\n  TechnicalImplementationDetails,\n} from \"../types/cia-services\";\nimport { normalizeSecurityLevel } from \"../utils/securityLevelUtils\";\n\n// Interface definitions\ninterface SecurityResource {\n  title: string;\n  description: string;\n  url: string;\n  category: string;\n  tags: string[];\n  relevanceScore: number;\n  type: string;\n}\n\ninterface ComponentMetrics {\n  financialImpact?: string;\n  operationalImpact?: string;\n  reputationalImpact?: string;\n  regulatoryImpact?: string;\n  uptime?: string;\n  rto?: string;\n  rpo?: string;\n  mttr?: string;\n  keyImpact?: string;\n  metric?: string;\n}\n\n// Export the types - add these exports to maintain backward compatibility\nexport type {\n  BusinessImpactDetails,\n  CIAComponentType,\n  ROIEstimatesMap,\n  ROIMetrics,\n  TechnicalImplementationDetails,\n} from \"../types/cia-services\";\n\n/**\n * Interface for CIA data source provider\n */\nexport interface CIADataProvider {\n  availabilityOptions: Record<string, EnhancedCIADetails>;\n  integrityOptions: Record<string, EnhancedCIADetails>;\n  confidentialityOptions: Record<string, EnhancedCIADetails>;\n  roiEstimates: ROIEstimatesMap;\n\n  // Add additional utility function to reduce fallback logic\n  getDefaultSecurityIcon(level: SecurityLevel): string;\n  getDefaultValuePoints(level: SecurityLevel): string[];\n}\n\n/**\n * Default CIA data provider that uses imported options\n */\nconst defaultDataProvider: CIADataProvider = {\n  availabilityOptions,\n  integrityOptions,\n  confidentialityOptions,\n  roiEstimates: ROI_ESTIMATES as unknown as ROIEstimatesMap,\n  getDefaultSecurityIcon: (level: SecurityLevel) => {\n    switch (level) {\n      case \"Very High\":\n        return \"🛡️🛡️🛡️\";\n      case \"High\":\n        return \"🛡️🛡️\";\n      case \"Moderate\":\n        return \"🛡️\";\n      case \"Low\":\n        return \"🔒\";\n      default:\n        return \"⚠️\";\n    }\n  },\n  getDefaultValuePoints: (level: SecurityLevel) => {\n    const defaultPoints = [\"Provides basic security foundation\"];\n    switch (level) {\n      case \"Very High\":\n        return [\n          \"Maximum security value with comprehensive protection\",\n          \"Enables business in highly regulated industries\",\n          \"Provides competitive advantage through superior security posture\",\n          \"Minimizes risk of data breaches and associated costs\",\n          \"Ensures regulatory compliance across major frameworks\",\n        ];\n      case \"High\":\n        return [\n          \"Strong security value with robust protection\",\n          \"Supports business in moderately regulated industries\",\n          \"Reduces risk of security incidents significantly\",\n          \"Protects sensitive data and critical operations\",\n          \"Meets requirements for most compliance frameworks\",\n        ];\n      default:\n        return defaultPoints;\n    }\n  },\n};\n\n/**\n * Create a CIA content service with dependency injection\n */\nexport function createCIAContentService(\n  dataProvider: CIADataProvider = defaultDataProvider\n) {\n  /**\n   * Get the base options for a CIA component\n   */\n  function getCIAOptions(\n    component: CIAComponentType\n  ): Record<string, EnhancedCIADetails> {\n    // Fix return type\n    switch (component) {\n      case \"availability\":\n        return dataProvider.availabilityOptions;\n      case \"integrity\":\n        return dataProvider.integrityOptions;\n      case \"confidentiality\":\n        return dataProvider.confidentialityOptions;\n      default:\n        return {};\n    }\n  }\n\n  /**\n   * Get component details for a specific level with strong typing\n   */\n  function getComponentDetails(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): EnhancedCIADetails | undefined {\n    // Fix return type\n    // Validate input parameters\n    if (!component || !level) {\n      return undefined;\n    }\n\n    const options = getCIAOptions(component);\n    return options[level];\n  }\n\n  /**\n   * Get detailed technical implementation information\n   */\n  function getTechnicalImplementation(\n    component: CIAComponentType,\n    level: SecurityLevel | string\n  ): TechnicalImplementationDetails {\n    const normalizedLevel = normalizeSecurityLevel(level) as SecurityLevel;\n\n    // Get component details from appropriate options object\n    let details: TechnicalImplementationDetails | undefined;\n\n    switch (component) {\n      case \"confidentiality\":\n        details =\n          confidentialityOptions[normalizedLevel]?.technicalImplementation;\n        break;\n      case \"integrity\":\n        details = integrityOptions[normalizedLevel]?.technicalImplementation;\n        break;\n      case \"availability\":\n        details = availabilityOptions[normalizedLevel]?.technicalImplementation;\n        break;\n    }\n\n    // Default implementation if no details found\n    if (!details) {\n      return {\n        description: `No technical implementation details available for ${normalizedLevel} ${component}`,\n        implementationSteps: [\"Consider implementing basic security controls\"],\n        effort: {\n          development: getDefaultDevelopmentEffort(normalizedLevel),\n          maintenance: getDefaultMaintenanceEffort(normalizedLevel),\n          expertise: getDefaultExpertiseLevel(normalizedLevel),\n        },\n      };\n    }\n\n    // Ensure we always have default values for missing fields\n    return {\n      description:\n        details.description ||\n        `Standard ${component} controls for ${normalizedLevel} security level`,\n      implementationSteps: details.implementationSteps || [],\n      effort: {\n        development:\n          details.effort?.development ||\n          getDefaultDevelopmentEffort(normalizedLevel),\n        maintenance:\n          details.effort?.maintenance ||\n          getDefaultMaintenanceEffort(normalizedLevel),\n        expertise:\n          details.effort?.expertise ||\n          getDefaultExpertiseLevel(normalizedLevel),\n      },\n      requirements: details.requirements || [],\n      technologies: details.technologies || [],\n    };\n  }\n\n  /**\n   * Gets default development effort based on security level\n   */\n  function getDefaultDevelopmentEffort(level: SecurityLevel): string {\n    switch (level) {\n      case \"None\":\n        return \"None\";\n      case \"Low\":\n        return \"Days (1-5)\";\n      case \"Moderate\":\n        return \"Weeks (2-4)\";\n      case \"High\":\n        return \"Months (1-3)\";\n      case \"Very High\":\n        return \"Months (3+)\";\n      default:\n        return \"Not specified\";\n    }\n  }\n\n  /**\n   * Gets default maintenance effort based on security level\n   */\n  function getDefaultMaintenanceEffort(level: SecurityLevel): string {\n    switch (level) {\n      case \"None\":\n        return \"None\";\n      case \"Low\":\n        return \"Minimal (quarterly review)\";\n      case \"Moderate\":\n        return \"Regular (monthly review)\";\n      case \"High\":\n        return \"Significant (biweekly monitoring)\";\n      case \"Very High\":\n        return \"Extensive (continuous monitoring)\";\n      default:\n        return \"Not specified\";\n    }\n  }\n\n  /**\n   * Gets default expertise level based on security level\n   */\n  function getDefaultExpertiseLevel(level: SecurityLevel): string {\n    switch (level) {\n      case \"None\":\n        return \"None\";\n      case \"Low\":\n        return \"Basic security knowledge\";\n      case \"Moderate\":\n        return \"Security professional\";\n      case \"High\":\n        return \"Security specialist\";\n      case \"Very High\":\n        return \"Security expert team\";\n      default:\n        return \"Not specified\";\n    }\n  }\n\n  /**\n   * Get comprehensive business impact details\n   */\n  function getBusinessImpact(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): BusinessImpactDetails {\n    const details = getComponentDetails(component, level);\n\n    // Default response if no details found\n    if (!details) {\n      return {\n        summary: \"No business impact details available\",\n        financial: {\n          description: \"Financial impact not specified\",\n          riskLevel: RISK_LEVELS.UNKNOWN,\n        },\n        operational: {\n          description: \"Operational impact not specified\",\n          riskLevel: RISK_LEVELS.UNKNOWN,\n        },\n      };\n    }\n\n    // Extract impact details from businessImpactDetails if available\n    const impactDetails = details.businessImpactDetails || {};\n\n    // Return structured business impact\n    return {\n      summary:\n        details.businessImpact ||\n        `Standard ${level} ${component} security impact`,\n      financial: {\n        description:\n          impactDetails.financialImpact?.description ||\n          \"Financial impact not specified\",\n        riskLevel:\n          impactDetails.financialImpact?.riskLevel || RISK_LEVELS.UNKNOWN,\n        annualRevenueLoss: impactDetails.financialImpact?.annualRevenueLoss,\n      },\n      operational: {\n        description:\n          impactDetails.operationalImpact?.description ||\n          \"Operational impact not specified\",\n        riskLevel:\n          impactDetails.operationalImpact?.riskLevel || RISK_LEVELS.UNKNOWN,\n        meanTimeToRecover: impactDetails.operationalImpact?.meanTimeToRecover,\n      },\n      reputational: impactDetails.reputationalImpact && {\n        description: impactDetails.reputationalImpact.description,\n        riskLevel:\n          impactDetails.reputationalImpact.riskLevel || RISK_LEVELS.UNKNOWN,\n      },\n      strategic: impactDetails.strategic && {\n        description: impactDetails.strategic.description,\n        riskLevel: impactDetails.strategic.riskLevel || RISK_LEVELS.UNKNOWN,\n        competitiveAdvantage: undefined,\n      },\n      regulatory: impactDetails.regulatory && {\n        description: impactDetails.regulatory.description,\n        riskLevel: impactDetails.regulatory.riskLevel || RISK_LEVELS.UNKNOWN,\n        complianceImpact: undefined,\n      },\n    };\n  }\n\n  /**\n   * Get detailed component description with enhanced type safety\n   */\n  function getDetailedDescription(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string {\n    // Validate input parameters\n    if (!component || !level) {\n      return \"Invalid component or security level specified\";\n    }\n\n    const details = getComponentDetails(component, level);\n    return details?.description || `${level} ${component} controls`;\n  }\n\n  /**\n   * Get business perspective information for a component and level\n   */\n  function getBusinessPerspective(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string {\n    const details = getComponentDetails(component, level);\n    return (\n      details?.businessPerspective ||\n      `No business perspective available for ${level} ${component}`\n    );\n  }\n\n  /**\n   * Get recommendations for a specific component and level\n   * Always returns a string array, even when no recommendations are found\n   */\n  function getRecommendations(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string[] {\n    const details = getComponentDetails(component, level);\n\n    // If we have recommendations, return them\n    if (details?.recommendations && Array.isArray(details.recommendations)) {\n      return details.recommendations;\n    }\n\n    // Final fallback - empty array\n    return [];\n  }\n\n  /**\n   * Get ROI information for a security level with proper type handling\n   */\n  function getROIEstimates(level: SecurityLevel): ROIMetrics {\n    const normalizedLevel = level.toUpperCase().replace(/\\s+/g, \"_\");\n\n    // Create a safer default ROI metrics object\n    const defaultROI: ROIMetrics = {\n      returnRate: \"0%\",\n      description: \"No ROI data available\",\n      potentialSavings: \"N/A\",\n      breakEvenPeriod: \"N/A\",\n    };\n\n    // Use type assertion only after checking if the key exists\n    const availableKeys = Object.keys(dataProvider.roiEstimates);\n    const key = availableKeys.includes(normalizedLevel)\n      ? normalizedLevel\n      : \"NONE\";\n\n    // Use a type assertion here to fix the index signature error\n    return (\n      dataProvider.roiEstimates[key as keyof ROIEstimatesMap] ?? defaultROI\n    );\n  }\n\n  /**\n   * Calculate ROI based on security levels with improved type safety\n   */\n  function calculateRoi(\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel\n  ): string {\n    // Define valid security levels\n    const levels: readonly SecurityLevel[] = [\n      \"None\",\n      \"Low\",\n      \"Moderate\",\n      \"High\",\n      \"Very High\",\n    ];\n\n    // Safely handle potentially invalid levels\n    const safeGetIndex = (level: SecurityLevel): number => {\n      const index = levels.indexOf(level);\n      return index >= 0 ? index : 0; // Default to 0 (None) if level is invalid\n    };\n\n    const availIdx = safeGetIndex(availabilityLevel);\n    const integrityIdx = safeGetIndex(integrityLevel);\n    const confidentialityIdx = safeGetIndex(confidentialityLevel);\n\n    const avgLevel = Math.round(\n      (availIdx + integrityIdx + confidentialityIdx) / 3\n    );\n    const baseRoi = 100 + avgLevel * 75; // None: 100%, Low: 175%, Moderate: 250%, etc.\n\n    return `${baseRoi}%`;\n  }\n\n  /**\n   * Get combined metrics for a security profile\n   */\n  function getSecurityMetrics(\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel\n  ) {\n    const availDetail = getComponentDetails(\"availability\", availabilityLevel);\n    const integrityDetail = getComponentDetails(\"integrity\", integrityLevel);\n    const confidentialityDetail = getComponentDetails(\n      \"confidentiality\",\n      confidentialityLevel\n    );\n\n    const totalCapex =\n      (availDetail?.capex || 0) +\n      (integrityDetail?.capex || 0) +\n      (confidentialityDetail?.capex || 0);\n\n    const totalOpex =\n      (availDetail?.opex || 0) +\n      (integrityDetail?.opex || 0) +\n      (confidentialityDetail?.opex || 0);\n\n    return {\n      totalCapex,\n      totalOpex,\n      capexEstimate: `$${totalCapex * 5000}`,\n      opexEstimate: `$${totalOpex * 2000}/year`,\n      isSmallSolution: totalCapex <= 60,\n      roi: calculateRoi(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ),\n    };\n  }\n\n  /**\n   * Get compliance status based on CIA security levels\n   */\n  function getComplianceStatus(\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel\n  ): {\n    compliantFrameworks: string[];\n    partiallyCompliantFrameworks: string[];\n    nonCompliantFrameworks: string[];\n    requirements?: string[];\n    remediationSteps?: string[];\n  } {\n    const levelValues = {\n      None: 0,\n      Low: 1,\n      Moderate: 2,\n      High: 3,\n      \"Very High\": 4,\n    };\n\n    const availValue = levelValues[availabilityLevel];\n    const integValue = levelValues[integrityLevel];\n    const confidValue = levelValues[confidentialityLevel];\n\n    // Use eslint-disable for unused totalScore\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const totalScore = availValue + integValue + confidValue;\n\n    // Determine compliance status based on total score\n    let compliantFrameworks: string[] = [];\n    let partiallyCompliantFrameworks: string[] = [];\n    let nonCompliantFrameworks: string[] = [];\n\n    // SOC2 compliance - requires moderate security in all areas\n    if (availValue >= 2 && integValue >= 2 && confidValue >= 2) {\n      compliantFrameworks.push(\"SOC2\");\n    } else if (availValue >= 1 && integValue >= 1 && confidValue >= 1) {\n      partiallyCompliantFrameworks.push(\"SOC2\");\n    } else {\n      nonCompliantFrameworks.push(\"SOC2\");\n    }\n\n    // ISO27001 compliance - requires high security in at least one area\n    if (availValue >= 3 || integValue >= 3 || confidValue >= 3) {\n      compliantFrameworks.push(\"ISO27001\");\n    } else if (availValue >= 2 && integValue >= 2 && confidValue >= 2) {\n      partiallyCompliantFrameworks.push(\"ISO27001\");\n    } else {\n      nonCompliantFrameworks.push(\"ISO27001\");\n    }\n\n    // PCI DSS - heavily focused on confidentiality\n    if (confidValue >= 3 && integValue >= 2) {\n      compliantFrameworks.push(\"PCI_DSS\");\n    } else if (confidValue >= 2) {\n      partiallyCompliantFrameworks.push(\"PCI_DSS\");\n    } else {\n      nonCompliantFrameworks.push(\"PCI_DSS\");\n    }\n\n    // HIPAA - requires high on confidentiality and moderate on others\n    if (confidValue >= 3 && availValue >= 2 && integValue >= 2) {\n      compliantFrameworks.push(\"HIPAA\");\n    } else if (confidValue >= 2 && availValue >= 1 && integValue >= 1) {\n      partiallyCompliantFrameworks.push(\"HIPAA\");\n    } else {\n      nonCompliantFrameworks.push(\"HIPAA\");\n    }\n\n    // NIST 800-53 High - requires high or very high on all\n    if (availValue >= 3 && integValue >= 3 && confidValue >= 3) {\n      compliantFrameworks.push(\"NIST\");\n    } else if (availValue >= 2 && integValue >= 2 && confidValue >= 2) {\n      partiallyCompliantFrameworks.push(\"NIST\");\n    } else {\n      nonCompliantFrameworks.push(\"NIST\");\n    }\n\n    // Generate requirements and remediation steps\n    const requirements = generateRequirements(compliantFrameworks);\n    const remediationSteps = generateRemediationSteps(\n      partiallyCompliantFrameworks,\n      nonCompliantFrameworks\n    );\n\n    return {\n      compliantFrameworks,\n      partiallyCompliantFrameworks,\n      nonCompliantFrameworks,\n      requirements,\n      remediationSteps,\n    };\n  }\n\n  /**\n   * Generate compliance requirements based on compliant frameworks\n   */\n  function generateRequirements(compliantFrameworks: string[]): string[] {\n    const requirements: string[] = [];\n\n    if (compliantFrameworks.includes(\"SOC2\")) {\n      requirements.push(\"Logical access controls\");\n      requirements.push(\"Change management processes\");\n    }\n\n    if (compliantFrameworks.includes(\"ISO27001\")) {\n      requirements.push(\"Risk assessment framework\");\n      requirements.push(\"Security incident management\");\n    }\n\n    if (compliantFrameworks.includes(\"PCI_DSS\")) {\n      requirements.push(\"Data encryption\");\n      requirements.push(\"Network monitoring\");\n      requirements.push(\"Regular vulnerability scanning\");\n    }\n\n    if (compliantFrameworks.includes(\"HIPAA\")) {\n      requirements.push(\"Protected health information safeguards\");\n      requirements.push(\"Breach notification protocols\");\n    }\n\n    if (compliantFrameworks.includes(\"NIST\")) {\n      requirements.push(\"Continuous monitoring\");\n      requirements.push(\"Comprehensive documentation\");\n      requirements.push(\"Strict access controls\");\n    }\n\n    return requirements;\n  }\n\n  /**\n   * Generate remediation steps for non-compliant frameworks\n   */\n  function generateRemediationSteps(\n    partiallyCompliantFrameworks: string[],\n    nonCompliantFrameworks: string[]\n  ): string[] {\n    const steps: string[] = [];\n\n    // Add steps for partially compliant frameworks\n    if (partiallyCompliantFrameworks.includes(\"SOC2\")) {\n      steps.push(\"Implement additional access controls\");\n    }\n\n    if (partiallyCompliantFrameworks.includes(\"ISO27001\")) {\n      steps.push(\"Develop and document risk assessment framework\");\n    }\n\n    // Add steps for non-compliant frameworks\n    if (nonCompliantFrameworks.includes(\"PCI_DSS\")) {\n      steps.push(\"Implement encryption for sensitive data\");\n      steps.push(\"Establish network segmentation\");\n    }\n\n    if (nonCompliantFrameworks.includes(\"HIPAA\")) {\n      steps.push(\"Develop PHI handling procedures\");\n      steps.push(\"Implement breach notification process\");\n    }\n\n    if (nonCompliantFrameworks.includes(\"NIST\")) {\n      steps.push(\"Implement continuous monitoring solution\");\n      steps.push(\"Develop comprehensive security documentation\");\n    }\n\n    return steps;\n  }\n\n  /**\n   * Get impact metrics for a given CIA component and security level\n   */\n  const getComponentMetrics = (\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): ComponentMetrics => {\n    const details = getComponentDetails(component, level);\n\n    // Handle regulatory impact specially since the path might be different\n    let regulatoryImpactDesc = \"\";\n    if (\n      details?.businessImpactDetails &&\n      \"regulatory\" in details.businessImpactDetails\n    ) {\n      const regulatory = details.businessImpactDetails.regulatory;\n      regulatoryImpactDesc = regulatory?.description || \"\";\n    }\n\n    return {\n      financialImpact:\n        details?.businessImpactDetails?.financialImpact?.description,\n      operationalImpact:\n        details?.businessImpactDetails?.operationalImpact?.description,\n      reputationalImpact:\n        details?.businessImpactDetails?.reputationalImpact?.description,\n      regulatoryImpact: regulatoryImpactDesc,\n      uptime: details?.uptime,\n      rto: details?.rto,\n      rpo: details?.rpo,\n      mttr: details?.mttr,\n      keyImpact: details?.keyImpact || determineKeyImpact(component, level),\n      metric: details?.metric || determineMetric(component, level),\n    };\n  };\n\n  /**\n   * Determine a key impact message for each component and level\n   */\n  function determineKeyImpact(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string {\n    if (component === \"availability\") {\n      switch (level) {\n        case \"None\":\n          return \"No guaranteed uptime\";\n        case \"Low\":\n          return \"Basic availability\";\n        case \"Moderate\":\n          return \"Standard business hours\";\n        case \"High\":\n          return \"High availability\";\n        case \"Very High\":\n          return \"Continuous availability\";\n        default:\n          return \"Unknown impact\";\n      }\n    } else if (component === \"integrity\") {\n      switch (level) {\n        case \"None\":\n          return \"No data integrity\";\n        case \"Low\":\n          return \"Basic integrity checks\";\n        case \"Moderate\":\n          return \"Standard validation\";\n        case \"High\":\n          return \"Advanced integrity controls\";\n        case \"Very High\":\n          return \"Complete data integrity\";\n        default:\n          return \"Unknown impact\";\n      }\n    } else if (component === \"confidentiality\") {\n      switch (level) {\n        case \"None\":\n          return \"Public information only\";\n        case \"Low\":\n          return \"Limited protection\";\n        case \"Moderate\":\n          return \"Business confidential\";\n        case \"High\":\n          return \"Sensitive information\";\n        case \"Very High\":\n          return \"Highly classified\";\n        default:\n          return \"Unknown impact\";\n      }\n    }\n    return \"Unknown component\";\n  }\n\n  /**\n   * Determine a metric for each component and level\n   */\n  function determineMetric(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string {\n    if (component === \"availability\") {\n      switch (level) {\n        case \"None\":\n          return \"< 90% uptime\";\n        case \"Low\":\n          return \"95% uptime\";\n        case \"Moderate\":\n          return \"99% uptime\";\n        case \"High\":\n          return \"99.9% uptime\";\n        case \"Very High\":\n          return \"99.999% uptime\";\n        default:\n          return \"Unknown metric\";\n      }\n    } else if (component === \"integrity\") {\n      switch (level) {\n        case \"None\":\n          return \"No validation\";\n        case \"Low\":\n          return \"Basic checksums\";\n        case \"Moderate\":\n          return \"Hash validation\";\n        case \"High\":\n          return \"Digital signatures\";\n        case \"Very High\":\n          return \"Blockchain verification\";\n        default:\n          return \"Unknown metric\";\n      }\n    } else if (component === \"confidentiality\") {\n      switch (level) {\n        case \"None\":\n          return \"No encryption\";\n        case \"Low\":\n          return \"Basic encryption\";\n        case \"Moderate\":\n          return \"Standard encryption\";\n        case \"High\":\n          return \"Advanced encryption\";\n        case \"Very High\":\n          return \"Quantum-safe encryption\";\n        default:\n          return \"Unknown metric\";\n      }\n    }\n    return \"Unknown component\";\n  }\n\n  /**\n   * Get combined impact metrics for all CIA components\n   */\n  const getImpactMetrics = (\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel\n  ): Record<string, ComponentMetrics> => {\n    return {\n      availability: getComponentMetrics(\"availability\", availabilityLevel),\n      integrity: getComponentMetrics(\"integrity\", integrityLevel),\n      confidentiality: getComponentMetrics(\n        \"confidentiality\",\n        confidentialityLevel\n      ),\n      // Add aggregate metrics as strings to avoid type issues\n      businessImpact: determineBusinessImpact(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as unknown as ComponentMetrics,\n      technicalImpact: determineTechnicalImpact(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as unknown as ComponentMetrics,\n      regulatoryImpact: determineRegulatoryImpact(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as unknown as ComponentMetrics,\n      securityScore: calculateSecurityScore(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as unknown as ComponentMetrics,\n      complianceScore: calculateComplianceScore(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as unknown as ComponentMetrics,\n      costEffectivenessScore: calculateCostEffectivenessScore(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as unknown as ComponentMetrics,\n    };\n  };\n\n  // Helper functions for impact metrics\n  function determineBusinessImpact(\n    a: SecurityLevel,\n    i: SecurityLevel,\n    c: SecurityLevel\n  ): string {\n    // Use parameters to show intent\n    console.log(`Calculating business impact for A=${a}, I=${i}, C=${c}`);\n    return \"Business impact assessment\";\n  }\n\n  function determineTechnicalImpact(\n    a: SecurityLevel,\n    i: SecurityLevel,\n    c: SecurityLevel\n  ): string {\n    // Use parameters to show intent\n    console.log(`Technical impact analysis using A=${a}, I=${i}, C=${c}`);\n    return \"Technical impact assessment\";\n  }\n\n  function determineRegulatoryImpact(\n    a: SecurityLevel,\n    i: SecurityLevel,\n    c: SecurityLevel\n  ): string {\n    // Use parameters to show intent\n    console.log(`Regulatory impact analysis using A=${a}, I=${i}, C=${c}`);\n    return \"Regulatory impact assessment\";\n  }\n\n  function calculateSecurityScore(\n    a: SecurityLevel,\n    i: SecurityLevel,\n    c: SecurityLevel\n  ): number {\n    const levelToScore = (level: SecurityLevel): number => {\n      switch (level) {\n        case \"None\":\n          return 0;\n        case \"Low\":\n          return 25;\n        case \"Moderate\":\n          return 50;\n        case \"High\":\n          return 75;\n        case \"Very High\":\n          return 100;\n      }\n    };\n\n    return Math.round(\n      (levelToScore(a) + levelToScore(i) + levelToScore(c)) / 3\n    );\n  }\n\n  function calculateComplianceScore(\n    a: SecurityLevel,\n    i: SecurityLevel,\n    c: SecurityLevel\n  ): number {\n    return calculateSecurityScore(a, i, c) - 10; // Just for demonstration\n  }\n\n  function calculateCostEffectivenessScore(\n    a: SecurityLevel,\n    i: SecurityLevel,\n    c: SecurityLevel\n  ): number {\n    return 100 - calculateSecurityScore(a, i, c); // Inverse correlation for demo\n  }\n\n  /**\n   * Get security resources based on security levels\n   */\n  const getSecurityResources = (\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel,\n    securityLevel: SecurityLevel\n  ): SecurityResource[] => {\n    // Use the parameters for resource filtering\n    const securityScore = calculateSecurityScore(\n      availabilityLevel,\n      integrityLevel,\n      confidentialityLevel\n    );\n\n    // Return resources filtered by security score\n    return [\n      {\n        title: `${securityLevel} Security Resource`,\n        description: `Resource for ${availabilityLevel} availability, ${integrityLevel} integrity, and ${confidentialityLevel} confidentiality`,\n        url: \"https://example.com/security-resource\",\n        category: \"Framework\",\n        tags: [\"framework\", \"guidelines\", \"risk-management\"],\n        relevanceScore: securityScore,\n        type: \"Documentation\",\n      },\n      // ...more resources...\n    ];\n  };\n\n  /**\n   * Helper functions and types for technical implementation details\n   */\n\n  /**\n   * Technical implementation details for different security components\n   */\n  interface ComponentTechnicalDetails {\n    description: string;\n    implementationSteps: string[];\n    effort: {\n      development: string;\n      maintenance: string;\n      expertise: string;\n    };\n  }\n\n  /**\n   * Get security level description with meaningful context\n   */\n  function getSecurityLevelDescription(level: SecurityLevel): string {\n    // Ideally, this would come from a shared definitions object in useCIAOptions\n    const descriptions: Record<SecurityLevel, string> = {\n      None: \"No specific security controls applied. Suitable only for non-sensitive public information.\",\n      Low: \"Basic security controls for internal use. Minimal protection against casual threats.\",\n      Moderate:\n        \"Standard security controls suitable for business data. Balanced protection against common threats.\",\n      High: \"Enhanced security controls for sensitive data. Robust protection against sophisticated threats.\",\n      \"Very High\":\n        \"Maximum security controls for critical data. Comprehensive protection against advanced threats.\",\n    };\n\n    return descriptions[level] || `${level} security level`;\n  }\n\n  /**\n   * Get information sensitivity classification based on confidentiality level\n   */\n  function getInformationSensitivity(level: SecurityLevel): string {\n    switch (level) {\n      case \"None\":\n        return \"Public Data\";\n      case \"Low\":\n        return \"Internal Data\";\n      case \"Moderate\":\n        return \"Sensitive Data\";\n      case \"High\":\n        return \"Confidential Data\";\n      case \"Very High\":\n        return \"Restricted Data\";\n      default:\n        return \"Unknown\";\n    }\n  }\n\n  /**\n   * Get protection level description based on confidentiality level\n   */\n  function getProtectionLevel(level: SecurityLevel): string {\n    switch (level) {\n      case \"None\":\n        return \"No Protection\";\n      case \"Low\":\n        return \"Basic Protection\";\n      case \"Moderate\":\n        return \"Standard Protection\";\n      case \"High\":\n        return \"Enhanced Protection\";\n      case \"Very High\":\n        return \"Maximum Protection\";\n      default:\n        return \"Unknown\";\n    }\n  }\n\n  /**\n   * Calculate business impact level based on CIA security levels\n   */\n  function calculateBusinessImpactLevel(\n    availLevel: SecurityLevel,\n    integrLevel: SecurityLevel,\n    confLevel: SecurityLevel\n  ): SecurityLevel {\n    const levels: SecurityLevel[] = [\n      \"None\",\n      \"Low\",\n      \"Moderate\",\n      \"High\",\n      \"Very High\",\n    ];\n    const availIndex = levels.indexOf(availLevel);\n    const integrIndex = levels.indexOf(integrLevel);\n    const confIndex = levels.indexOf(confLevel);\n\n    const avgIndex = Math.round((availIndex + integrIndex + confIndex) / 3);\n    return levels[avgIndex] || \"Moderate\";\n  }\n\n  /**\n   * Get appropriate badge variant based on risk level\n   */\n  function getRiskBadgeVariant(\n    riskLevel: string\n  ): \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\" {\n    const riskMap: Record<\n      string,\n      \"info\" | \"success\" | \"warning\" | \"error\" | \"neutral\"\n    > = {\n      Critical: \"error\",\n      High: \"warning\",\n      Medium: \"info\",\n      Low: \"success\",\n      Minimal: \"success\",\n    };\n\n    return riskMap[riskLevel] || \"neutral\";\n  }\n\n  /**\n   * Get icon for business impact category\n   */\n  function getCategoryIcon(category: string): string {\n    const icons: Record<string, string> = {\n      FINANCIAL: \"💰\",\n      OPERATIONAL: \"⚙️\",\n      REPUTATIONAL: \"🏆\",\n      REGULATORY: \"⚖️\",\n      STRATEGIC: \"🎯\",\n      NEUTRAL: \"📊\",\n    };\n\n    const normalizedCategory = category.toUpperCase();\n    // Ensure we always return a string by using nullish coalescing with a default\n    return icons[normalizedCategory] ?? icons.NEUTRAL ?? \"📊\";\n  }\n\n  /**\n   * Get value points for a security level\n   */\n  function getValuePoints(level: SecurityLevel): string[] {\n    // Get component details for any component (just to check if valuePoints exists)\n    const availDetails = getComponentDetails(\"availability\", level);\n\n    // If the component has valuePoints defined, use them\n    if (availDetails?.valuePoints && availDetails.valuePoints.length > 0) {\n      return availDetails.valuePoints;\n    }\n\n    // Use the provider's default implementation\n    return dataProvider.getDefaultValuePoints(level);\n  }\n\n  /**\n   * Get ROI estimate data for security level\n   */\n  function getROIEstimate(level: SecurityLevel): {\n    value: string;\n    returnRate: string; // Add returnRate to return type\n    description: string;\n  } {\n    switch (level) {\n      case \"Very High\":\n        return {\n          value: \"5x+\",\n          returnRate: \"5x+\", // Add returnRate with same value\n          description: \"Maximum return with comprehensive security controls\",\n        };\n      case \"High\":\n        return {\n          value: \"3-5x\",\n          returnRate: \"3-5x\", // Add returnRate with same value\n          description: \"Strong return with robust security implementation\",\n        };\n      case \"Moderate\":\n        return {\n          value: \"2-3x\",\n          returnRate: \"2-3x\", // Add returnRate with same value\n          description: \"Good return with balanced security approach\",\n        };\n      case \"Low\":\n        return {\n          value: \"1-2x\",\n          returnRate: \"1-2x\", // Add returnRate with same value\n          description: \"Basic return with minimal security investment\",\n        };\n      default:\n        return {\n          value: \"Negative\",\n          returnRate: \"Negative\", // Add returnRate with same value\n          description: \"No return without security investment\",\n        };\n    }\n  }\n\n  /**\n   * Get implementation considerations for a security level\n   */\n  function getImplementationConsiderations(level: SecurityLevel): string {\n    switch (level) {\n      case \"Very High\":\n        return \"Implementation requires significant upfront investment but offers maximum long-term value through comprehensive risk reduction and regulatory compliance.\";\n      case \"High\":\n        return \"Balanced approach with substantial security benefits and reasonable implementation costs for most organizations with sensitive data or operations.\";\n      case \"Moderate\":\n        return \"Cost-effective implementation that provides standard security capabilities suitable for most business applications and moderate risk environments.\";\n      case \"Low\":\n        return \"Minimal implementation effort focused on essential security controls, appropriate for non-critical systems or limited budgets.\";\n      default:\n        return \"No security implementation considerations. Consider baseline security controls for any business system.\";\n    }\n  }\n\n  /**\n   * Get technical implementation details for each component and level\n   */\n  function getComponentImplementationDetails(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): ComponentTechnicalDetails {\n    // Get component details from appropriate options\n    const details = getComponentDetails(component, level);\n\n    // Default values for effort\n    const defaultEffort = {\n      development: getDefaultDevelopmentEffort(level),\n      maintenance: getDefaultMaintenanceEffort(level),\n      expertise: getDefaultExpertiseLevel(level),\n    };\n\n    // Default implementation steps\n    const defaultSteps = [\"Implement basic controls\", \"Document procedures\"];\n\n    if (component === \"availability\") {\n      return {\n        description: details?.technical || \"\",\n        implementationSteps:\n          details?.technicalImplementation?.implementationSteps || defaultSteps,\n        effort: details?.technicalImplementation?.effort || defaultEffort,\n      };\n    }\n\n    if (component === \"integrity\") {\n      return {\n        description: details?.technical || \"\",\n        implementationSteps:\n          details?.technicalImplementation?.implementationSteps || defaultSteps,\n        effort: details?.technicalImplementation?.effort || defaultEffort,\n      };\n    }\n\n    if (component === \"confidentiality\") {\n      return {\n        description: details?.technical || \"\",\n        implementationSteps:\n          details?.technicalImplementation?.implementationSteps || defaultSteps,\n        effort: details?.technicalImplementation?.effort || defaultEffort,\n      };\n    }\n\n    // Default case\n    return {\n      description: `Technical implementation for ${level} ${component}`,\n      implementationSteps: defaultSteps,\n      effort: defaultEffort,\n    };\n  }\n\n  /**\n   * Get business impact description for a component and level\n   */\n  function getBusinessImpactDescription(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string {\n    const details = getComponentDetails(component, level);\n    return (\n      details?.businessImpact ||\n      `${level} ${component} impact on business operations`\n    );\n  }\n\n  /**\n   * Get technical description for a component and level\n   */\n  function getTechnicalDescription(\n    component: CIAComponentType,\n    level: SecurityLevel\n  ): string {\n    const details = getComponentDetails(component, level);\n    return (\n      details?.technical || `${level} ${component} technical implementation`\n    );\n  }\n\n  /**\n   * Get security icon for a security level\n   */\n  function getSecurityIcon(level: SecurityLevel): string {\n    // Check if any component for this level has a securityIcon\n    const availDetails = getComponentDetails(\"availability\", level);\n\n    if (availDetails?.securityIcon) {\n      return availDetails.securityIcon;\n    }\n\n    // Use the provider's default implementation\n    return dataProvider.getDefaultSecurityIcon(level);\n  }\n\n  /**\n   * Get compliant frameworks based on security levels\n   */\n  function getCompliantFrameworks(\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel\n  ): string[] {\n    const complianceStatus = getComplianceStatus(\n      availabilityLevel,\n      integrityLevel,\n      confidentialityLevel\n    );\n\n    return complianceStatus.compliantFrameworks;\n  }\n\n  /**\n   * Get framework description for a specific compliance framework\n   */\n  function getFrameworkDescription(framework: string): string {\n    const frameworkDescriptions: Record<string, string> = {\n      SOC2: \"System and Organization Controls 2 - Focuses on security, availability, processing integrity, confidentiality, and privacy\",\n      ISO27001: \"International standard for information security management\",\n      PCI_DSS:\n        \"Payment Card Industry Data Security Standard - Security standard for organizations handling credit cards\",\n      HIPAA:\n        \"Health Insurance Portability and Accountability Act - Standards for sensitive patient data protection\",\n      NIST: \"National Institute of Standards and Technology - Framework for improving critical infrastructure cybersecurity\",\n      GDPR: \"General Data Protection Regulation - EU data protection and privacy regulation\",\n      CCPA: \"California Consumer Privacy Act - Enhances privacy rights and consumer protection\",\n    };\n\n    return (\n      frameworkDescriptions[framework] || `${framework} compliance framework`\n    );\n  }\n\n  /**\n   * Get implementation time estimate based on security levels\n   */\n  function getImplementationTime(\n    availabilityLevel: SecurityLevel,\n    integrityLevel: SecurityLevel,\n    confidentialityLevel: SecurityLevel\n  ): string {\n    const levelValues = {\n      None: 0,\n      Low: 1,\n      Moderate: 2,\n      High: 3,\n      \"Very High\": 4,\n    };\n\n    const availValue = levelValues[availabilityLevel];\n    const integValue = levelValues[integrityLevel];\n    const confidValue = levelValues[confidentialityLevel];\n\n    const totalScore = availValue + integValue + confidValue;\n\n    if (totalScore <= 2) return \"1-2 weeks\";\n    if (totalScore <= 5) return \"2-4 weeks\";\n    if (totalScore <= 8) return \"1-3 months\";\n    if (totalScore <= 10) return \"3-6 months\";\n    return \"6+ months\";\n  }\n\n  // Return the public service API\n  return {\n    getCIAOptions,\n    getComponentDetails,\n    getBusinessImpact,\n    getDetailedDescription,\n    getBusinessPerspective,\n    getRecommendations,\n    getROIEstimates,\n    getSecurityMetrics,\n    getComplianceStatus,\n    getComponentMetrics,\n    getImpactMetrics,\n    getSecurityResources,\n    getTechnicalImplementation,\n    getSecurityLevelDescription,\n    getInformationSensitivity,\n    getProtectionLevel,\n    calculateBusinessImpactLevel,\n    getRiskBadgeVariant,\n    getCategoryIcon,\n    getValuePoints,\n    getROIEstimate,\n    getImplementationConsiderations,\n    getComponentImplementationDetails,\n    getBusinessImpactDescription,\n    getTechnicalDescription,\n    getSecurityIcon,\n    getCompliantFrameworks,\n    getFrameworkDescription,\n    getImplementationTime,\n  };\n}\n\n// Create a default instance of the service for backward compatibility\nconst defaultService = createCIAContentService();\n\n// Export the default instance\nexport default defaultService;\nexport const getBusinessImpact = defaultService.getBusinessImpact;\nexport const getDetailedDescription = defaultService.getDetailedDescription;\nexport const getBusinessPerspective = defaultService.getBusinessPerspective;\nexport const getRecommendations = defaultService.getRecommendations;\nexport const getROIEstimates = defaultService.getROIEstimates;\nexport const getSecurityMetrics = defaultService.getSecurityMetrics;\nexport const getComplianceStatus = defaultService.getComplianceStatus;\n\n// Add new exports for these functions\nexport const getSecurityLevelDescription =\n  defaultService.getSecurityLevelDescription;\nexport const getInformationSensitivity =\n  defaultService.getInformationSensitivity;\nexport const getProtectionLevel = defaultService.getProtectionLevel;\nexport const calculateBusinessImpactLevel =\n  defaultService.calculateBusinessImpactLevel;\nexport const getRiskBadgeVariant = defaultService.getRiskBadgeVariant;\nexport const getCategoryIcon = defaultService.getCategoryIcon;\nexport const getValuePoints = defaultService.getValuePoints;\nexport const getROIEstimate = defaultService.getROIEstimate;\nexport const getImplementationConsiderations =\n  defaultService.getImplementationConsiderations;\nexport const getComponentImplementationDetails =\n  defaultService.getComponentImplementationDetails;\nexport const getBusinessImpactDescription =\n  defaultService.getBusinessImpactDescription;\nexport const getTechnicalDescription = defaultService.getTechnicalDescription;\nexport const getSecurityIcon = defaultService.getSecurityIcon;\nexport const getCompliantFrameworks = defaultService.getCompliantFrameworks;\nexport const getFrameworkDescription = defaultService.getFrameworkDescription;\nexport const getImplementationTime = defaultService.getImplementationTime;\n\n// Export the types\nexport type { ComponentMetrics, SecurityResource };\n","import React, { ReactNode } from \"react\";\nimport { COMMON_COMPONENT_TEST_IDS } from \"../../constants/testIds\";\n\nexport type StatusBadgeVariant =\n  | \"neutral\"\n  | \"success\"\n  | \"warning\"\n  | \"error\"\n  | \"info\"\n  | \"purple\";\n\nexport type StatusBadgeSize = \"xs\" | \"sm\" | \"md\" | \"lg\";\n\ninterface StatusBadgeProps {\n  status: StatusBadgeVariant;\n  children: ReactNode;\n  className?: string;\n  size?: StatusBadgeSize;\n  testId?: string;\n}\n\n/**\n * StatusBadge displays statuses and labels with consistent styling\n * Enhanced with Ingress-style visual effects in dark mode\n */\nconst StatusBadge: React.FC<StatusBadgeProps> = ({\n  status = \"neutral\",\n  children,\n  className = \"\",\n  size = \"md\",\n  testId = COMMON_COMPONENT_TEST_IDS.STATUS_BADGE,\n}) => {\n  // Get base classes for the badge\n  const getBaseClasses = () => {\n    const baseClasses = [\n      \"inline-flex\",\n      \"items-center\",\n      \"justify-center\",\n      \"rounded-full\",\n      \"font-medium\",\n      \"status-badge\",\n    ];\n\n    // Add size-specific classes\n    switch (size) {\n      case \"xs\":\n        baseClasses.push(\"text-xs\", \"py-0.5\", \"px-2\");\n        break;\n      case \"sm\":\n        baseClasses.push(\"text-xs\", \"py-1\", \"px-2\");\n        break;\n      case \"lg\":\n        baseClasses.push(\"text-sm\", \"py-2\", \"px-4\", \"font-bold\");\n        break;\n      case \"md\":\n      default:\n        baseClasses.push(\"text-sm\", \"py-1\", \"px-3\");\n    }\n\n    return baseClasses.join(\" \");\n  };\n\n  // Get variant-specific styling\n  const getVariantClasses = () => {\n    // Define the classes for each variant\n    const variantMap: Record<StatusBadgeVariant, string> = {\n      success:\n        \"bg-green-100 text-green-800 dark:bg-green-900 dark:bg-opacity-20 dark:text-green-300 success\",\n      warning:\n        \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:bg-opacity-20 dark:text-yellow-300 warning\",\n      error:\n        \"bg-red-100 text-red-800 dark:bg-red-900 dark:bg-opacity-20 dark:text-red-300 error\",\n      info: \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:bg-opacity-20 dark:text-blue-300 info\",\n      purple:\n        \"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:bg-opacity-20 dark:text-purple-300 purple\",\n      neutral:\n        \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:bg-opacity-50 dark:text-gray-300 neutral\",\n    };\n\n    return variantMap[status] || variantMap.neutral;\n  };\n\n  return (\n    <span\n      data-testid={testId}\n      data-status={status}\n      className={`${getBaseClasses()} ${getVariantClasses()} ${className}`}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport default StatusBadge;\n","import React, { ReactNode } from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport StatusBadge from \"./StatusBadge\";\n\ninterface CIAImpactCardProps {\n  title: string;\n  level: SecurityLevel;\n  description: string;\n  icon: string;\n  badgeVariant: \"purple\" | \"success\" | \"info\";\n  cardClass: string;\n  children?: ReactNode;\n  testId?: string;\n}\n\n/**\n * Reusable component for displaying CIA impact information with enhanced Ingress styling\n */\nconst CIAImpactCard: React.FC<CIAImpactCardProps> = ({\n  title,\n  level,\n  description,\n  icon,\n  badgeVariant,\n  cardClass,\n  children,\n  testId,\n}) => {\n  // Determine icon class based on card class\n  const getIconClass = () => {\n    if (cardClass.includes(\"confidentiality\")) return \"icon-confidentiality\";\n    if (cardClass.includes(\"integrity\")) return \"icon-integrity\";\n    if (cardClass.includes(\"availability\")) return \"icon-availability\";\n    return \"\";\n  };\n\n  // Get the security level indicator class\n  const getLevelClass = () => {\n    const levelMap: Record<string, string> = {\n      None: \"level-none\",\n      Low: \"level-low\",\n      Moderate: \"level-moderate\",\n      High: \"level-high\",\n      \"Very High\": \"level-very-high\",\n    };\n\n    return levelMap[level] || \"level-none\";\n  };\n\n  return (\n    <div\n      className={`p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border-l-4 ${cardClass} security-card`}\n      data-testid={testId}\n    >\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-lg font-medium flex items-center\">\n          <span className={`mr-2 ${getIconClass()}`}>{icon}</span>\n          {title}\n        </h3>\n        <StatusBadge status={badgeVariant} className=\"text-xs px-3\">\n          <span\n            className={`security-level-indicator ${getLevelClass()} mr-1`}\n          ></span>\n          {level}\n        </StatusBadge>\n      </div>\n\n      <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{description}</p>\n\n      {children}\n    </div>\n  );\n};\n\nexport default CIAImpactCard;\n","import React, { ReactNode } from \"react\";\nimport { COMMON_COMPONENT_TEST_IDS } from \"../../constants/testIds\";\n\nexport interface KeyValuePairProps {\n  label: string;\n  value: ReactNode;\n  valueClassName?: string;\n  labelClassName?: string;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * KeyValuePair displays a label and value pair with consistent styling\n *\n * @category UI Components\n * @param props - Component properties\n * @returns Rendered component\n */\nconst KeyValuePair: React.FC<KeyValuePairProps> = ({\n  label,\n  value,\n  valueClassName = \"\",\n  labelClassName = \"\",\n  className = \"\",\n  testId = COMMON_COMPONENT_TEST_IDS.KEY_VALUE_PAIR,\n}) => {\n  return (\n    <div className={`flex flex-col ${className}`} data-testid={testId}>\n      <span\n        className={`text-xs text-gray-500 dark:text-gray-400 mb-0.5 ${labelClassName}`}\n      >\n        {label}\n      </span>\n      <span\n        className={`font-medium text-sm text-gray-800 dark:text-gray-200 ${valueClassName}`}\n      >\n        {value}\n      </span>\n    </div>\n  );\n};\n\nexport default KeyValuePair;\n","import React from \"react\";\nimport { WidgetSize } from \"../../types/widget\";\n\ninterface WidgetContainerProps {\n  children: React.ReactNode;\n  title?: string;\n  icon?: React.ReactNode;\n  testId?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  size?: WidgetSize;\n  loading?: boolean;\n  error?: Error | null;\n}\n\n/**\n * Container component for dashboard widgets that provides consistent styling\n */\nconst WidgetContainer: React.FC<WidgetContainerProps> = ({\n  children,\n  title,\n  icon,\n  testId,\n  className = \"\",\n  style,\n  size,\n  loading = false,\n  error = null,\n}) => {\n  // Base classes for the widget container\n  const containerClasses = `widget-container bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden \n    border border-gray-200 dark:border-gray-700 ${className}`;\n\n  // Combine standard style with size dimensions if provided\n  const containerStyle = {\n    ...style,\n    ...(size && {\n      gridColumn: `span ${size.width}`,\n      gridRow: `span ${size.height}`,\n    }),\n  };\n\n  return (\n    <div\n      data-testid={testId}\n      className={containerClasses}\n      style={containerStyle}\n      data-loading={loading ? \"true\" : undefined}\n    >\n      {/* Optional widget header with title and icon */}\n      {title && (\n        <div className=\"widget-header p-3 border-b border-gray-200 dark:border-gray-700 flex items-center bg-gray-50 dark:bg-gray-900\">\n          {icon && <span className=\"widget-icon mr-2\">{icon}</span>}\n          <h2 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">\n            {title}\n          </h2>\n        </div>\n      )}\n\n      {/* Widget content area */}\n      <div className=\"widget-content h-full\">\n        {loading ? (\n          <div className=\"animate-pulse h-full w-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center\">\n            <div className=\"w-8 h-8 border-t-2 border-b-2 border-blue-500 rounded-full animate-spin\"></div>\n          </div>\n        ) : error ? (\n          <div className=\"p-4 text-red-500 dark:text-red-400\">\n            <p className=\"font-bold\">Error:</p>\n            <p>{error.message}</p>\n          </div>\n        ) : (\n          children\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WidgetContainer;\n","import React, { useMemo, useState } from \"react\";\nimport { WIDGET_ICONS, WIDGET_TITLES } from \"../../constants\";\nimport { AVAILABILITY_IMPACT_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport CIAImpactCard from \"../common/CIAImpactCard\";\nimport KeyValuePair from \"../common/KeyValuePair\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props for AvailabilityImpactWidget component\n */\nexport interface AvailabilityImpactWidgetProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n  className?: string;\n  testId?: string;\n  options?: Record<string, any>; // Added the missing options property\n}\n\nconst AvailabilityImpactWidget: React.FC<AvailabilityImpactWidgetProps> = ({\n  availabilityLevel,\n  integrityLevel: _integrityLevel, // Add underscore to mark as intentionally unused\n  confidentialityLevel: _confidentialityLevel, // Add underscore to mark as intentionally unused\n  className = \"\",\n  testId = AVAILABILITY_IMPACT_TEST_IDS.AVAILABILITY_IMPACT_PREFIX,\n  options: _options = {}, // Add underscore to mark as intentionally unused\n}) => {\n  const [showAllRecommendations, setShowAllRecommendations] = useState(false);\n\n  // Fetch component details from ciaContentService\n  const availabilityDetails = useMemo(\n    () =>\n      ciaContentService.getComponentDetails(\"availability\", availabilityLevel),\n    [availabilityLevel]\n  );\n\n  // Fetch business impact from ciaContentService\n  const businessImpact = useMemo(\n    () =>\n      ciaContentService.getBusinessImpact(\"availability\", availabilityLevel),\n    [availabilityLevel]\n  );\n\n  // Get technical implementation details\n  const technicalDetails = useMemo(\n    () =>\n      ciaContentService.getTechnicalImplementation(\n        \"availability\",\n        availabilityLevel\n      ),\n    [availabilityLevel]\n  );\n\n  // Get recommendations from service\n  const recommendations = useMemo(\n    () =>\n      ciaContentService.getRecommendations(\"availability\", availabilityLevel),\n    [availabilityLevel]\n  );\n\n  // Create the impact description from available information\n  const impactDescription = useMemo(() => {\n    return (\n      availabilityDetails?.description ||\n      businessImpact?.summary ||\n      `Impact of ${availabilityLevel} availability on system operations and business continuity.`\n    );\n  }, [availabilityDetails, businessImpact, availabilityLevel]);\n\n  // Handle cases where data might not be available\n  if (!availabilityDetails) {\n    return (\n      <WidgetContainer\n        title=\"Availability Impact\"\n        icon=\"⏱️\"\n        className={className}\n        testId={testId}\n        error={new Error(\"Availability details not available\")}\n      >\n        <div>Availability details not available</div>\n      </WidgetContainer>\n    );\n  }\n\n  return (\n    <WidgetContainer\n      title={WIDGET_TITLES.AVAILABILITY_IMPACT}\n      icon={WIDGET_ICONS.AVAILABILITY_IMPACT}\n      className={className}\n      testId={testId || \"widget-availability-impact\"}\n    >\n      <div\n        className=\"p-4\"\n        role=\"region\"\n        aria-labelledby=\"availability-impact-heading\"\n      >\n        <h3\n          id=\"availability-impact-heading\"\n          className=\"text-lg font-medium mb-4 text-blue-600 dark:text-blue-400\"\n        >\n          {availabilityLevel} Availability Impact\n        </h3>\n\n        {/* Impact Description */}\n        <div className=\"mb-6\">\n          <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n            {impactDescription || \"No impact description available.\"}\n          </p>\n        </div>\n\n        <div className=\"space-y-6\">\n          <CIAImpactCard\n            title=\"Availability Profile\"\n            level={availabilityLevel}\n            description={\n              availabilityDetails.description || \"No description available\"\n            }\n            icon=\"⏱️\"\n            badgeVariant=\"info\"\n            cardClass=\"availability-card\"\n            testId={`${testId}-impact-card`}\n          >\n            {availabilityDetails.uptime && (\n              <div className=\"flex items-center mt-2 text-sm text-blue-600 dark:text-blue-400\">\n                <span className=\"mr-2\">⏱️</span>\n                <span className=\"font-medium\">Uptime Target: </span>\n                <span className=\"ml-1\">{availabilityDetails.uptime}</span>\n              </div>\n            )}\n          </CIAImpactCard>\n\n          {/* Business Impact Section with enhanced styling */}\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n            <h4 className=\"text-md font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">💼</span>\n              Business Impact\n            </h4>\n\n            <p\n              className=\"text-gray-600 dark:text-gray-300 mb-4\"\n              data-testid={`${testId}-business-impact`}\n            >\n              {businessImpact.summary ||\n                availabilityDetails.businessImpact ||\n                \"No business impact data available\"}\n            </p>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {businessImpact.operational && (\n                <div className=\"p-3 rounded-md bg-opacity-10 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20 border border-blue-200 dark:border-blue-800\">\n                  <div className=\"flex items-center mb-2\">\n                    <span className=\"mr-2\">⚙️</span>\n                    <span className=\"font-medium text-blue-700 dark:text-blue-300\">\n                      Operational Impact\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                    {businessImpact.operational.description ||\n                      \"No operational impact information available\"}\n                  </p>\n                </div>\n              )}\n\n              {businessImpact.financial && (\n                <div className=\"p-3 rounded-md bg-opacity-10 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20 border border-blue-200 dark:border-blue-800\">\n                  <div className=\"flex items-center mb-2\">\n                    <span className=\"mr-2\">💰</span>\n                    <span className=\"font-medium text-blue-700 dark:text-blue-300\">\n                      Financial Impact\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                    {businessImpact.financial.description ||\n                      \"No financial impact information available\"}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Technical Details with enhanced styling */}\n          {technicalDetails && technicalDetails.description && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 availability-card security-card\">\n              <h4 className=\"text-md font-medium mb-2 flex items-center\">\n                <span className=\"mr-2\">⚙️</span>\n                Technical Implementation\n              </h4>\n\n              <p className=\"text-gray-600 dark:text-gray-300 mb-3\">\n                {technicalDetails.description}\n              </p>\n\n              {technicalDetails.implementationSteps &&\n                technicalDetails.implementationSteps.length > 0 && (\n                  <div className=\"mt-3\">\n                    <h5 className=\"text-sm font-medium mb-2 text-blue-700 dark:text-blue-300\">\n                      Implementation Steps\n                    </h5>\n                    <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-600 dark:text-gray-300\">\n                      {technicalDetails.implementationSteps\n                        .slice(0, 3)\n                        .map((step, idx) => (\n                          <li key={idx}>{step}</li>\n                        ))}\n                    </ul>\n                  </div>\n                )}\n            </div>\n          )}\n\n          {/* Recommendations with enhanced styling */}\n          {recommendations && recommendations.length > 0 && (\n            <div className=\"bg-blue-50 dark:bg-gray-800 p-4 rounded-lg border border-blue-200 dark:border-blue-900 shadow-sm security-card\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"text-md font-medium flex items-center\">\n                  <span className=\"mr-2\">💡</span>\n                  Recommendations\n                </h4>\n                {recommendations.length > 3 && (\n                  <button\n                    className=\"text-sm px-3 py-1 rounded-full bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors\"\n                    onClick={() =>\n                      setShowAllRecommendations(!showAllRecommendations)\n                    }\n                  >\n                    {showAllRecommendations ? \"Show Less\" : \"Show All\"}\n                  </button>\n                )}\n              </div>\n\n              <ul className=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n                {(showAllRecommendations\n                  ? recommendations\n                  : recommendations.slice(0, 3)\n                ).map((recommendation, index) => (\n                  <li\n                    key={index}\n                    data-testid={`${testId}-recommendation-${index}`}\n                    className=\"text-sm\"\n                  >\n                    {recommendation}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Availability Metrics with enhanced styling */}\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 availability-card security-card\">\n            <h4 className=\"text-md font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">📊</span>\n              Availability Metrics\n            </h4>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20\">\n                <KeyValuePair\n                  label=\"Uptime Target\"\n                  value={availabilityDetails.uptime || \"N/A\"}\n                  testId={`${testId}-uptime-target`}\n                  valueClassName=\"text-blue-700 dark:text-blue-300 font-medium\"\n                />\n              </div>\n\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20\">\n                <KeyValuePair\n                  label=\"Recovery Time Objective\"\n                  value={availabilityDetails.rto || \"N/A\"}\n                  testId={`${testId}-rto-value`}\n                  valueClassName=\"text-blue-700 dark:text-blue-300 font-medium\"\n                />\n              </div>\n\n              {availabilityDetails.rpo && (\n                <div className=\"p-3 rounded-md bg-opacity-10 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20\">\n                  <KeyValuePair\n                    label=\"Recovery Point Objective\"\n                    value={availabilityDetails.rpo}\n                    testId={`${testId}-rpo-value`}\n                    valueClassName=\"text-blue-700 dark:text-blue-300 font-medium\"\n                  />\n                </div>\n              )}\n\n              {availabilityDetails.mttr && (\n                <div className=\"p-3 rounded-md bg-opacity-10 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20\">\n                  <KeyValuePair\n                    label=\"Mean Time To Recovery\"\n                    value={availabilityDetails.mttr}\n                    testId={`${testId}-mttr-value`}\n                    valueClassName=\"text-blue-700 dark:text-blue-300 font-medium\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default AvailabilityImpactWidget;\n","import React, { useState } from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { BUSINESS_IMPACT_TEST_IDS } from \"../../constants/testIds\";\nimport { CIA_COMPONENT_COLORS } from \"../../constants/colorConstants\";\nimport { CIA_LABELS, CIA_COMPONENT_ICONS } from \"../../constants/appConstants\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport WidgetContainer from \"../common/WidgetContainer\";\nimport StatusBadge from \"../common/StatusBadge\";\n\n/**\n * Props for the BusinessImpactAnalysisWidget component\n */\nexport interface BusinessImpactAnalysisWidgetProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  securityLevel?: SecurityLevel; // Overall security level\n  className?: string;\n  testId?: string;\n  activeComponent?: \"availability\" | \"integrity\" | \"confidentiality\";\n}\n\n/**\n * BusinessImpactAnalysisWidget displays business impact analysis for CIA components\n */\nconst BusinessImpactAnalysisWidget: React.FC<\n  BusinessImpactAnalysisWidgetProps\n> = ({\n  availabilityLevel,\n  integrityLevel,\n  confidentialityLevel,\n  securityLevel, // Overall security level\n  className = \"\",\n  testId = BUSINESS_IMPACT_TEST_IDS.BUSINESS_IMPACT_WIDGET,\n  activeComponent = \"availability\",\n}) => {\n  const [activeTab, setActiveTab] = useState<\n    \"availability\" | \"integrity\" | \"confidentiality\"\n  >(activeComponent);\n\n  // Get business impact for each component\n  const availabilityImpact = ciaContentService.getBusinessImpact(\n    \"availability\",\n    availabilityLevel\n  );\n\n  const integrityImpact = ciaContentService.getBusinessImpact(\n    \"integrity\",\n    integrityLevel\n  );\n\n  const confidentialityImpact = ciaContentService.getBusinessImpact(\n    \"confidentiality\",\n    confidentialityLevel\n  );\n\n  // Get component metrics\n  const availabilityMetrics = ciaContentService.getComponentMetrics(\n    \"availability\",\n    availabilityLevel\n  );\n\n  const integrityMetrics = ciaContentService.getComponentMetrics(\n    \"integrity\",\n    integrityLevel\n  );\n\n  const confidentialityMetrics = ciaContentService.getComponentMetrics(\n    \"confidentiality\",\n    confidentialityLevel\n  );\n\n  // Get appropriate badge variant for risk level\n  const getRiskBadgeVariant = (riskLevel?: string) => {\n    if (!riskLevel) return \"neutral\";\n\n    if (riskLevel.toLowerCase().includes(\"high\")) {\n      return \"error\";\n    } else if (riskLevel.toLowerCase().includes(\"medium\")) {\n      return \"warning\";\n    } else if (riskLevel.toLowerCase().includes(\"low\")) {\n      return \"success\";\n    }\n\n    return \"info\";\n  };\n\n  // Active component details\n  const getActiveImpact = () => {\n    switch (activeTab) {\n      case \"availability\":\n        return {\n          impact: availabilityImpact,\n          metrics: availabilityMetrics,\n          color: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY,\n          level: availabilityLevel,\n          icon: CIA_COMPONENT_ICONS.AVAILABILITY,\n          badgeVariant: \"info\" as const,\n          label: CIA_LABELS.AVAILABILITY,\n        };\n      case \"integrity\":\n        return {\n          impact: integrityImpact,\n          metrics: integrityMetrics,\n          color: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY,\n          level: integrityLevel,\n          icon: CIA_COMPONENT_ICONS.INTEGRITY,\n          badgeVariant: \"success\" as const,\n          label: CIA_LABELS.INTEGRITY,\n        };\n      case \"confidentiality\":\n        return {\n          impact: confidentialityImpact,\n          metrics: confidentialityMetrics,\n          color: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY,\n          level: confidentialityLevel,\n          icon: CIA_COMPONENT_ICONS.CONFIDENTIALITY,\n          badgeVariant: \"purple\" as const,\n          label: CIA_LABELS.CONFIDENTIALITY,\n        };\n    }\n  };\n\n  const { impact, metrics, color, level, icon, badgeVariant, label } =\n    getActiveImpact();\n\n  return (\n    <WidgetContainer\n      title=\"Business Impact Analysis\"\n      icon=\"📊\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        {/* Tab navigation */}\n        <div className=\"flex border-b mb-4\" role=\"tablist\">\n          <button\n            className={`px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n              activeTab === \"availability\"\n                ? \"border-b-2 border-blue-500 text-blue-600 dark:text-blue-400\"\n                : \"text-gray-600 dark:text-gray-400\"\n            }`}\n            onClick={() => setActiveTab(\"availability\")}\n            data-testid={`${testId}-availability-tab`}\n            role=\"tab\"\n            aria-selected={activeTab === \"availability\"}\n            aria-controls=\"availability-tab-panel\"\n            id=\"availability-tab-button\"\n            style={\n              activeTab === \"availability\"\n                ? { borderColor: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY }\n                : undefined\n            }\n          >\n            <span className=\"mr-1\">{CIA_COMPONENT_ICONS.AVAILABILITY}</span>\n            Availability\n          </button>\n          <button\n            className={`px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n              activeTab === \"integrity\"\n                ? \"border-b-2 border-blue-500 text-blue-600 dark:text-blue-400\"\n                : \"text-gray-600 dark:text-gray-400\"\n            }`}\n            onClick={() => setActiveTab(\"integrity\")}\n            data-testid={`${testId}-integrity-tab`}\n            role=\"tab\"\n            aria-selected={activeTab === \"integrity\"}\n            aria-controls=\"integrity-tab-panel\"\n            id=\"integrity-tab-button\"\n            style={\n              activeTab === \"integrity\"\n                ? { borderColor: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY }\n                : undefined\n            }\n          >\n            <span className=\"mr-1\">{CIA_COMPONENT_ICONS.INTEGRITY}</span>\n            Integrity\n          </button>\n          <button\n            className={`px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n              activeTab === \"confidentiality\"\n                ? \"border-b-2 border-blue-500 text-blue-600 dark:text-blue-400\"\n                : \"text-gray-600 dark:text-gray-400\"\n            }`}\n            onClick={() => setActiveTab(\"confidentiality\")}\n            data-testid={`${testId}-confidentiality-tab`}\n            role=\"tab\"\n            aria-selected={activeTab === \"confidentiality\"}\n            aria-controls=\"confidentiality-tab-panel\"\n            id=\"confidentiality-tab-button\"\n            style={\n              activeTab === \"confidentiality\"\n                ? { borderColor: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY }\n                : undefined\n            }\n          >\n            <span className=\"mr-1\">{CIA_COMPONENT_ICONS.CONFIDENTIALITY}</span>\n            Confidentiality\n          </button>\n        </div>\n\n        {/* Component Summary */}\n        <div\n          className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border-l-4 security-card\"\n          style={{ borderLeftColor: color }}\n        >\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-lg font-medium flex items-center\">\n              <span className=\"mr-2\">{icon}</span>\n              {label} Impact\n            </h3>\n            <StatusBadge status={badgeVariant} className=\"text-xs px-3\">\n              {level}\n            </StatusBadge>\n          </div>\n\n          <p\n            className=\"text-gray-600 dark:text-gray-300 mb-4\"\n            data-testid={`${testId}-summary`}\n          >\n            {impact.summary}\n          </p>\n        </div>\n\n        {/* Impact Areas */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* Operational Impact */}\n          {impact.operational && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"text-md font-medium flex items-center\">\n                  <span className=\"mr-2\">⚙️</span>\n                  Operational Impact\n                </h4>\n                <StatusBadge\n                  status={getRiskBadgeVariant(impact.operational.riskLevel)}\n                  size=\"sm\"\n                >\n                  {impact.operational.riskLevel || \"Unknown\"}\n                </StatusBadge>\n              </div>\n\n              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                {impact.operational.description}\n              </p>\n\n              {metrics.operationalImpact && (\n                <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    Key Metric\n                  </span>\n                  <div className=\"text-sm font-medium mt-1\">\n                    {activeTab === \"availability\"\n                      ? `Uptime: ${metrics.uptime || \"N/A\"}`\n                      : metrics.operationalImpact}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Financial Impact */}\n          {impact.financial && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"text-md font-medium flex items-center\">\n                  <span className=\"mr-2\">💰</span>\n                  Financial Impact\n                </h4>\n                <StatusBadge\n                  status={getRiskBadgeVariant(impact.financial.riskLevel)}\n                  size=\"sm\"\n                >\n                  {impact.financial.riskLevel || \"Unknown\"}\n                </StatusBadge>\n              </div>\n\n              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                {impact.financial.description}\n              </p>\n\n              {metrics.financialImpact && (\n                <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    Potential Cost\n                  </span>\n                  <div className=\"text-sm font-medium mt-1\">\n                    {metrics.financialImpact}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Secondary Impact Areas */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {/* Reputational Impact */}\n          {impact.reputational && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-sm font-medium flex items-center\">\n                  <span className=\"mr-2\">🏆</span>\n                  Reputational Impact\n                </h4>\n                {impact.reputational.riskLevel && (\n                  <StatusBadge\n                    status={getRiskBadgeVariant(impact.reputational.riskLevel)}\n                    size=\"xs\"\n                  >\n                    {impact.reputational.riskLevel}\n                  </StatusBadge>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-600 dark:text-gray-300\">\n                {impact.reputational.description}\n              </p>\n            </div>\n          )}\n\n          {/* Regulatory Impact */}\n          {impact.regulatory && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-sm font-medium flex items-center\">\n                  <span className=\"mr-2\">⚖️</span>\n                  Regulatory Impact\n                </h4>\n                {impact.regulatory.riskLevel && (\n                  <StatusBadge\n                    status={getRiskBadgeVariant(impact.regulatory.riskLevel)}\n                    size=\"xs\"\n                  >\n                    {impact.regulatory.riskLevel}\n                  </StatusBadge>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-600 dark:text-gray-300\">\n                {impact.regulatory.description}\n              </p>\n            </div>\n          )}\n\n          {/* Strategic Impact */}\n          {impact.strategic && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-sm font-medium flex items-center\">\n                  <span className=\"mr-2\">🎯</span>\n                  Strategic Impact\n                </h4>\n                {impact.strategic.riskLevel && (\n                  <StatusBadge\n                    status={getRiskBadgeVariant(impact.strategic.riskLevel)}\n                    size=\"xs\"\n                  >\n                    {impact.strategic.riskLevel}\n                  </StatusBadge>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-600 dark:text-gray-300\">\n                {impact.strategic.description}\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* Component-specific metrics */}\n        {activeTab === \"availability\" && (\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n            {metrics.uptime && (\n              <div className=\"p-3 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 rounded-lg text-center\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Uptime\n                </div>\n                <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                  {metrics.uptime}\n                </div>\n              </div>\n            )}\n            {metrics.rto && (\n              <div className=\"p-3 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 rounded-lg text-center\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  RTO\n                </div>\n                <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                  {metrics.rto}\n                </div>\n              </div>\n            )}\n            {metrics.rpo && (\n              <div className=\"p-3 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 rounded-lg text-center\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  RPO\n                </div>\n                <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                  {metrics.rpo}\n                </div>\n              </div>\n            )}\n            {metrics.mttr && (\n              <div className=\"p-3 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 rounded-lg text-center\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  MTTR\n                </div>\n                <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                  {metrics.mttr}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default BusinessImpactAnalysisWidget;\n","import React, { useMemo } from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { FRAMEWORK_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport WidgetContainer from \"../common/WidgetContainer\";\nimport StatusBadge from \"../common/StatusBadge\";\nimport { normalizeSecurityLevel } from \"../../utils/securityLevelUtils\";\n\n// Define types for compliance data returned from service\ninterface ComplianceData {\n  compliantFrameworks: string[];\n  partiallyCompliantFrameworks: string[];\n  nonCompliantFrameworks: string[];\n  requirements?: string[];\n  remediationSteps?: string[];\n}\n\n/**\n * ComplianceStatusWidgetProps interface for the compliance status widget props\n */\nexport interface ComplianceStatusWidgetProps {\n  securityLevel?: SecurityLevel;\n  availabilityLevel?: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * ComplianceStatusWidget displays the compliance status based on selected security levels\n * It shows compliant, partially compliant, and non-compliant frameworks\n */\nconst ComplianceStatusWidget: React.FC<ComplianceStatusWidgetProps> = ({\n  availabilityLevel = \"None\",\n  integrityLevel = \"None\",\n  confidentialityLevel = \"None\",\n  className = \"\",\n  testId = FRAMEWORK_TEST_IDS.COMPLIANCE_STATUS_WIDGET,\n}) => {\n  // Normalize security levels\n  const safeAvailability = normalizeSecurityLevel(availabilityLevel);\n  const safeIntegrity = normalizeSecurityLevel(integrityLevel);\n  const safeConfidentiality = normalizeSecurityLevel(confidentialityLevel);\n\n  // Get compliance data based on security levels\n  const complianceData = useMemo(\n    () =>\n      ciaContentService.getComplianceStatus(\n        safeAvailability,\n        safeIntegrity,\n        safeConfidentiality\n      ),\n    [safeAvailability, safeIntegrity, safeConfidentiality]\n  );\n\n  // Calculate overall compliance score based on the number of compliant frameworks\n  const calculateComplianceScore = (data: ComplianceData): number => {\n    const totalFrameworks =\n      data.compliantFrameworks.length +\n      data.partiallyCompliantFrameworks.length +\n      data.nonCompliantFrameworks.length;\n\n    if (totalFrameworks === 0) return 0;\n\n    // Full compliance = 1 point, partial = 0.5 points\n    const score =\n      (data.compliantFrameworks.length +\n        data.partiallyCompliantFrameworks.length * 0.5) /\n      totalFrameworks;\n\n    return Math.round(score * 100);\n  };\n\n  const complianceScore = calculateComplianceScore(complianceData);\n\n  // Get status badge variant based on compliance score\n  const getComplianceStatusVariant = (\n    score: number\n  ): \"success\" | \"warning\" | \"error\" | \"info\" => {\n    if (score >= 75) return \"success\";\n    if (score >= 50) return \"info\";\n    if (score >= 25) return \"warning\";\n    return \"error\";\n  };\n\n  return (\n    <WidgetContainer\n      title=\"Compliance Status\"\n      icon=\"📋\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        {/* Compliance Score Card */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-lg font-medium\">Compliance Status</h3>\n            <StatusBadge\n              status={getComplianceStatusVariant(complianceScore)}\n              size=\"lg\"\n              testId={FRAMEWORK_TEST_IDS.COMPLIANCE_STATUS_BADGE}\n            >\n              {complianceScore}%\n            </StatusBadge>\n          </div>\n\n          <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\n            Based on your selected security levels: {safeAvailability}{\" \"}\n            Availability, {safeIntegrity} Integrity, and {safeConfidentiality}{\" \"}\n            Confidentiality.\n          </p>\n        </div>\n\n        {/* Compliant Frameworks */}\n        <div className=\"p-4 bg-green-50 dark:bg-green-900 dark:bg-opacity-10 rounded-lg border border-green-200 dark:border-green-800\">\n          <h4 className=\"font-medium mb-2 flex items-center text-green-700 dark:text-green-400\">\n            <span className=\"mr-2\">✓</span>\n            Compliant Frameworks\n          </h4>\n\n          {complianceData.compliantFrameworks.length > 0 ? (\n            <ul\n              className=\"list-disc list-inside space-y-1\"\n              data-testid={FRAMEWORK_TEST_IDS.COMPLIANT_FRAMEWORKS_LIST}\n            >\n              {complianceData.compliantFrameworks.map((framework, index) => (\n                <li\n                  key={index}\n                  className=\"text-sm text-gray-700 dark:text-gray-300 flex items-center\"\n                >\n                  <StatusBadge status=\"success\" size=\"xs\" className=\"mr-2\">\n                    Compliant\n                  </StatusBadge>\n                  {framework.replace(/_/g, \" \")}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              No compliant frameworks at current security levels.\n            </p>\n          )}\n        </div>\n\n        {/* Partially Compliant Frameworks */}\n        <div className=\"p-4 bg-yellow-50 dark:bg-yellow-900 dark:bg-opacity-10 rounded-lg border border-yellow-200 dark:border-yellow-800\">\n          <h4 className=\"font-medium mb-2 flex items-center text-yellow-700 dark:text-yellow-400\">\n            <span className=\"mr-2\">⚠️</span>\n            Partially Compliant Frameworks\n          </h4>\n\n          {complianceData.partiallyCompliantFrameworks.length > 0 ? (\n            <ul className=\"list-disc list-inside space-y-1\">\n              {complianceData.partiallyCompliantFrameworks.map(\n                (framework, index) => (\n                  <li\n                    key={index}\n                    className=\"text-sm text-gray-700 dark:text-gray-300 flex items-center\"\n                  >\n                    <StatusBadge status=\"warning\" size=\"xs\" className=\"mr-2\">\n                      Partial\n                    </StatusBadge>\n                    {framework.replace(/_/g, \" \")}\n                  </li>\n                )\n              )}\n            </ul>\n          ) : (\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              No partially compliant frameworks at current security levels.\n            </p>\n          )}\n        </div>\n\n        {/* Non-Compliant Frameworks */}\n        <div className=\"p-4 bg-red-50 dark:bg-red-900 dark:bg-opacity-10 rounded-lg border border-red-200 dark:border-red-800\">\n          <h4 className=\"font-medium mb-2 flex items-center text-red-700 dark:text-red-400\">\n            <span className=\"mr-2\">❌</span>\n            Non-Compliant Frameworks\n          </h4>\n\n          {complianceData.nonCompliantFrameworks.length > 0 ? (\n            <ul className=\"list-disc list-inside space-y-1\">\n              {complianceData.nonCompliantFrameworks.map((framework, index) => (\n                <li\n                  key={index}\n                  className=\"text-sm text-gray-700 dark:text-gray-300 flex items-center\"\n                >\n                  <StatusBadge status=\"error\" size=\"xs\" className=\"mr-2\">\n                    Non-Compliant\n                  </StatusBadge>\n                  {framework.replace(/_/g, \" \")}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              No non-compliant frameworks at current security levels.\n            </p>\n          )}\n        </div>\n\n        {/* Remediation Steps (if available) */}\n        {complianceData.remediationSteps &&\n          complianceData.remediationSteps.length > 0 && (\n            <div className=\"p-4 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-10 rounded-lg border border-blue-200 dark:border-blue-800\">\n              <h4 className=\"font-medium mb-2 flex items-center text-blue-700 dark:text-blue-400\">\n                <span className=\"mr-2\">🛠️</span>\n                Remediation Steps\n              </h4>\n\n              <ul\n                className=\"list-disc list-inside space-y-1 text-sm text-gray-700 dark:text-gray-300\"\n                data-testid={FRAMEWORK_TEST_IDS.COMPLIANCE_REQUIREMENTS_LIST}\n              >\n                {complianceData.remediationSteps.map((step, index) => (\n                  <li key={index}>{step}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default ComplianceStatusWidget;\n","import React, { useMemo, useState } from \"react\";\nimport { CONFIDENTIALITY_IMPACT_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService, {\n  getInformationSensitivity,\n  getProtectionLevel,\n} from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { normalizeSecurityLevel } from \"../../utils/securityLevelUtils\";\nimport CIAImpactCard from \"../common/CIAImpactCard\";\nimport KeyValuePair from \"../common/KeyValuePair\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props for ConfidentialityImpactWidget component\n */\nexport interface ConfidentialityImpactWidgetProps {\n  confidentialityLevel: SecurityLevel;\n  availabilityLevel?: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\nconst ConfidentialityImpactWidget: React.FC<\n  ConfidentialityImpactWidgetProps\n> = ({\n  confidentialityLevel,\n  availabilityLevel,\n  integrityLevel,\n  className = \"\",\n  testId = CONFIDENTIALITY_IMPACT_TEST_IDS.CONFIDENTIALITY_IMPACT_PREFIX,\n}) => {\n  const [showAllRecommendations, setShowAllRecommendations] = useState(false);\n\n  // Fetch component details from ciaContentService\n  const confidentialityDetails = useMemo(\n    () =>\n      ciaContentService.getComponentDetails(\n        \"confidentiality\",\n        confidentialityLevel\n      ),\n    [confidentialityLevel]\n  );\n\n  // Fetch business impact from ciaContentService\n  const businessImpact = useMemo(\n    () =>\n      ciaContentService.getBusinessImpact(\n        \"confidentiality\",\n        confidentialityLevel\n      ),\n    [confidentialityLevel]\n  );\n\n  // Get technical implementation details\n  const technicalDetails = useMemo(\n    () =>\n      ciaContentService.getTechnicalImplementation(\n        \"confidentiality\",\n        confidentialityLevel\n      ),\n    [confidentialityLevel]\n  );\n\n  // Get recommendations from service\n  const recommendations = useMemo(\n    () =>\n      ciaContentService.getRecommendations(\n        \"confidentiality\",\n        confidentialityLevel\n      ),\n    [confidentialityLevel]\n  );\n\n  // Get information sensitivity using service function\n  const sensitivity = getInformationSensitivity(\n    normalizeSecurityLevel(confidentialityLevel) as SecurityLevel\n  );\n\n  // Get protection level using service function\n  const protectionLevel = getProtectionLevel(\n    normalizeSecurityLevel(confidentialityLevel) as SecurityLevel\n  );\n\n  // Handle cases where data might not be available\n  if (!confidentialityDetails) {\n    return (\n      <WidgetContainer\n        title=\"Confidentiality Impact\"\n        icon=\"🔒\"\n        className={className}\n        testId={testId}\n        error={new Error(\"Confidentiality details not available\")}\n      >\n        <div>Confidentiality details not available</div>\n      </WidgetContainer>\n    );\n  }\n\n  return (\n    <WidgetContainer\n      title=\"Confidentiality Impact\"\n      icon=\"🔒\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        <CIAImpactCard\n          title=\"Confidentiality Profile\"\n          level={confidentialityLevel}\n          description={\n            confidentialityDetails.description || \"No description available\"\n          }\n          icon=\"🔒\"\n          badgeVariant=\"purple\"\n          cardClass=\"confidentiality-card\"\n          testId={`${testId}-impact-card`}\n        >\n          {confidentialityDetails.protectionMethod && (\n            <div className=\"flex items-center mt-2 text-sm text-purple-600 dark:text-purple-400\">\n              <span className=\"mr-2\">🛡️</span>\n              <span className=\"font-medium\">Protection Method: </span>\n              <span className=\"ml-1\">\n                {confidentialityDetails.protectionMethod}\n              </span>\n            </div>\n          )}\n        </CIAImpactCard>\n\n        {/* Business Impact Section with enhanced styling */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n          <h4 className=\"text-md font-medium mb-3 flex items-center\">\n            <span className=\"mr-2\">💼</span>\n            Business Impact\n          </h4>\n\n          <p\n            className=\"text-gray-600 dark:text-gray-300 mb-4\"\n            data-testid={`${testId}-business-impact`}\n          >\n            {businessImpact.summary ||\n              confidentialityDetails.businessImpact ||\n              \"No business impact data available\"}\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {businessImpact.reputational && (\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-purple-100 dark:bg-purple-900 dark:bg-opacity-20 border border-purple-200 dark:border-purple-800\">\n                <div className=\"flex items-center mb-2\">\n                  <span className=\"mr-2\">🏆</span>\n                  <span className=\"font-medium text-purple-700 dark:text-purple-300\">\n                    Reputational Impact\n                  </span>\n                </div>\n                <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  {businessImpact.reputational.description ||\n                    \"No reputational impact information available\"}\n                </p>\n              </div>\n            )}\n\n            {businessImpact.regulatory && (\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-purple-100 dark:bg-purple-900 dark:bg-opacity-20 border border-purple-200 dark:border-purple-800\">\n                <div className=\"flex items-center mb-2\">\n                  <span className=\"mr-2\">📜</span>\n                  <span className=\"font-medium text-purple-700 dark:text-purple-300\">\n                    Regulatory Impact\n                  </span>\n                </div>\n                <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  {businessImpact.regulatory.description ||\n                    \"No regulatory impact information available\"}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Technical Details with enhanced styling */}\n        {technicalDetails && technicalDetails.description && (\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 confidentiality-card security-card\">\n            <h4 className=\"text-md font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">⚙️</span>\n              Technical Implementation\n            </h4>\n\n            <p className=\"text-gray-600 dark:text-gray-300 mb-3\">\n              {technicalDetails.description}\n            </p>\n\n            {technicalDetails.implementationSteps &&\n              technicalDetails.implementationSteps.length > 0 && (\n                <div className=\"mt-3\">\n                  <h5 className=\"text-sm font-medium mb-2 text-purple-700 dark:text-purple-300\">\n                    Implementation Steps\n                  </h5>\n                  <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-600 dark:text-gray-300\">\n                    {technicalDetails.implementationSteps\n                      .slice(0, 3)\n                      .map((step, idx) => (\n                        <li key={idx}>{step}</li>\n                      ))}\n                  </ul>\n                </div>\n              )}\n          </div>\n        )}\n\n        {/* Recommendations with enhanced styling */}\n        {recommendations && recommendations.length > 0 && (\n          <div className=\"bg-purple-50 dark:bg-gray-800 p-4 rounded-lg border border-purple-200 dark:border-purple-900 shadow-sm security-card\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h4 className=\"text-md font-medium flex items-center\">\n                <span className=\"mr-2\">💡</span>\n                Recommendations\n              </h4>\n              {recommendations.length > 3 && (\n                <button\n                  className=\"text-sm px-3 py-1 rounded-full bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300 hover:bg-purple-200 dark:hover:bg-purple-800 transition-colors\"\n                  onClick={() =>\n                    setShowAllRecommendations(!showAllRecommendations)\n                  }\n                >\n                  {showAllRecommendations ? \"Show Less\" : \"Show All\"}\n                </button>\n              )}\n            </div>\n\n            <ul className=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n              {(showAllRecommendations\n                ? recommendations\n                : recommendations.slice(0, 3)\n              ).map((recommendation, index) => (\n                <li\n                  key={index}\n                  data-testid={`${testId}-recommendation-${index}`}\n                  className=\"text-sm\"\n                >\n                  {recommendation}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* Data Classification with enhanced styling */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 confidentiality-card security-card\">\n          <h4 className=\"text-md font-medium mb-3 flex items-center\">\n            <span className=\"mr-2\">🏷️</span>\n            Data Protection Classification\n          </h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"p-3 rounded-md bg-opacity-10 bg-purple-100 dark:bg-purple-900 dark:bg-opacity-20\">\n              <KeyValuePair\n                label=\"Classification Level\"\n                value={confidentialityLevel}\n                testId={`${testId}-classification-level`}\n                valueClassName=\"text-purple-700 dark:text-purple-300 font-medium\"\n              />\n            </div>\n\n            <div className=\"p-3 rounded-md bg-opacity-10 bg-purple-100 dark:bg-purple-900 dark:bg-opacity-20\">\n              <KeyValuePair\n                label=\"Information Sensitivity\"\n                value={sensitivity}\n                testId={`${testId}-information-sensitivity`}\n                valueClassName=\"text-purple-700 dark:text-purple-300 font-medium\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default ConfidentialityImpactWidget;\n","import React, { useEffect, useState } from \"react\";\nimport { COMMON_COMPONENT_TEST_IDS } from \"../../constants/testIds\";\n\nexport interface MetricsCardProps {\n  title: string;\n  value: string | number;\n  subtitle?: string;\n  icon?: string;\n  className?: string;\n  testId?: string;\n  accentColor?: string;\n  // Add properties needed by test files\n  trend?: {\n    value: string;\n    direction: \"up\" | \"down\" | \"neutral\";\n  };\n  variant?: \"primary\" | \"success\" | \"warning\" | \"danger\" | \"info\" | \"purple\";\n}\n\n/**\n * MetricsCard displays a metric with title, value, and optional trend indicator\n *\n * @category UI Components\n * @param props - Component properties\n * @returns Rendered component\n */\nconst MetricsCard: React.FC<MetricsCardProps> = ({\n  title,\n  value,\n  subtitle,\n  icon,\n  className = \"\",\n  testId = COMMON_COMPONENT_TEST_IDS.METRICS_CARD,\n  accentColor,\n  trend,\n  variant = \"primary\",\n}) => {\n  const [displayValue, setDisplayValue] = useState(\"0\");\n  // Convert value to string for processing\n  const valueString = String(value);\n  const numericValue = parseInt(valueString.replace(/\\D/g, \"\")) || 0;\n\n  useEffect(() => {\n    // Animate numeric values\n    if (numericValue > 0) {\n      const duration = 1500; // 1.5 seconds\n      const steps = 20;\n      const stepTime = duration / steps;\n      const increment = numericValue / steps;\n\n      let current = 0;\n      const timer = setInterval(() => {\n        current += increment;\n        if (current >= numericValue) {\n          setDisplayValue(String(value));\n          clearInterval(timer);\n        } else {\n          // Format like original but with current value\n          let formattedValue;\n          if (valueString.includes(\"$\")) {\n            formattedValue = `$${Math.round(current).toLocaleString()}`;\n            // Preserve suffix like \"/year\" if present\n            if (valueString.includes(\"/\")) {\n              formattedValue += \"/\" + valueString.split(\"/\")[1];\n            }\n          } else {\n            formattedValue = Math.round(current).toString();\n            // Add % if the original value has it\n            if (valueString.includes(\"%\")) {\n              formattedValue += \"%\";\n            }\n          }\n          setDisplayValue(formattedValue);\n        }\n      }, stepTime);\n\n      return () => clearInterval(timer);\n    } else {\n      setDisplayValue(String(value));\n    }\n  }, [value, numericValue, valueString]);\n\n  const getVariantClasses = () => {\n    switch (variant) {\n      case \"success\":\n        return \"bg-green-100 dark:bg-green-900 dark:bg-opacity-20 border-green-200 dark:border-green-800\";\n      case \"warning\":\n        return \"bg-yellow-100 dark:bg-yellow-900 dark:bg-opacity-20 border-yellow-200 dark:border-yellow-800\";\n      case \"danger\":\n        return \"bg-red-100 dark:bg-red-900 dark:bg-opacity-20 border-red-200 dark:border-red-800\";\n      case \"info\":\n        return \"bg-blue-100 dark:bg-blue-900 dark:bg-opacity-20 border-blue-200 dark:border-blue-800\";\n      case \"purple\":\n        return \"bg-purple-100 dark:bg-purple-900 dark:bg-opacity-20 border-purple-200 dark:border-purple-800\";\n      default:\n        return \"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-10 border-blue-100 dark:border-blue-800\";\n    }\n  };\n\n  const getValueColor = () => {\n    switch (variant) {\n      case \"success\":\n        return \"text-green-700 dark:text-green-400\";\n      case \"warning\":\n        return \"text-yellow-700 dark:text-yellow-400\";\n      case \"danger\":\n        return \"text-red-700 dark:text-red-400\";\n      case \"info\":\n        return \"text-blue-700 dark:text-blue-400\";\n      case \"purple\":\n        return \"text-purple-700 dark:text-purple-400\";\n      default:\n        return \"text-blue-700 dark:text-blue-400\";\n    }\n  };\n\n  return (\n    <div\n      className={`p-4 rounded-lg border ${getVariantClasses()} ${className}`}\n      data-testid={testId}\n    >\n      <div className=\"flex items-center justify-between mb-2\">\n        <div className=\"flex items-center\">\n          {icon && <span className=\"mr-2 text-xl\">{icon}</span>}\n          <h3\n            className=\"text-sm font-medium text-gray-600 dark:text-gray-300\"\n            data-testid={COMMON_COMPONENT_TEST_IDS.METRICS_CARD_TITLE}\n          >\n            {title}\n          </h3>\n        </div>\n        {trend && (\n          <div\n            className={`text-xs px-1.5 py-0.5 rounded ${\n              trend.direction === \"up\"\n                ? \"bg-green-100 text-green-700 dark:bg-green-900 dark:bg-opacity-30 dark:text-green-400\"\n                : trend.direction === \"down\"\n                ? \"bg-red-100 text-red-700 dark:bg-red-900 dark:bg-opacity-30 dark:text-red-400\"\n                : \"bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-400\"\n            }`}\n            data-testid={COMMON_COMPONENT_TEST_IDS.METRICS_CARD_TREND}\n          >\n            {trend.value}\n          </div>\n        )}\n      </div>\n      <div className=\"flex items-end justify-between\">\n        <span\n          className={`text-2xl font-bold ${getValueColor()}`}\n          data-testid={COMMON_COMPONENT_TEST_IDS.METRICS_CARD_VALUE}\n          style={accentColor ? { color: accentColor } : undefined}\n        >\n          {displayValue}\n        </span>\n        {subtitle && (\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n            {subtitle}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsCard;\n","import React, { ReactNode } from \"react\";\nimport { WIDGET_ICONS } from \"../../constants/appConstants\";\n\ninterface WidgetHeaderProps {\n  title: string;\n  iconKey?: keyof typeof WIDGET_ICONS | string;\n  actions?: ReactNode;\n  className?: string;\n  testId?: string;\n}\n\nconst WidgetHeader: React.FC<WidgetHeaderProps> = ({\n  title,\n  iconKey,\n  actions,\n  className = \"\",\n  testId,\n}) => {\n  // Determine the icon to display\n  let iconToDisplay = \"\";\n  if (iconKey) {\n    // If iconKey is a key in WIDGET_ICONS, use the corresponding value\n    if (iconKey in WIDGET_ICONS) {\n      iconToDisplay = WIDGET_ICONS[iconKey as keyof typeof WIDGET_ICONS];\n    } else {\n      // Otherwise, assume iconKey is already an emoji string\n      iconToDisplay = iconKey;\n    }\n  }\n\n  return (\n    <div\n      className={`flex items-center justify-between pb-2 mb-4 border-b border-gray-200 dark:border-gray-700 ${className}`}\n      data-testid={testId}\n    >\n      <h3 className=\"flex items-center text-lg font-semibold text-gray-800 dark:text-gray-200\">\n        {iconToDisplay && (\n          <span className=\"mr-2\" aria-hidden=\"true\">\n            {iconToDisplay}\n          </span>\n        )}\n        {title}\n      </h3>\n      {actions && <div className=\"flex items-center space-x-2\">{actions}</div>}\n    </div>\n  );\n};\n\nexport default WidgetHeader;\n","import React from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { getSecurityLevelClass } from \"../../utils/securityLevelUtils\";\n\nexport interface SecurityLevelSummaryItemProps {\n  label: string;\n  value: SecurityLevel;\n  icon: string;\n  testId?: string;\n  color?: string;\n  borderColor?: string;\n  compact?: boolean;\n}\n\n/**\n * Security level summary item with enhanced Ingress styling\n * Used to display security level information in a compact, consistent format\n */\nconst SecurityLevelSummaryItem: React.FC<SecurityLevelSummaryItemProps> = ({\n  label,\n  value,\n  icon,\n  testId,\n  color = \"blue\",\n  borderColor,\n  compact = false,\n}) => {\n  // Get the icon class based on the label (for consistent styling)\n  const getIconClass = () => {\n    if (label.toLowerCase().includes(\"confidentiality\"))\n      return \"icon-confidentiality\";\n    if (label.toLowerCase().includes(\"integrity\")) return \"icon-integrity\";\n    if (label.toLowerCase().includes(\"availability\"))\n      return \"icon-availability\";\n    return \"\";\n  };\n\n  // Get the security level indicator class\n  const getLevelClass = () => {\n    const levelMap: Record<string, string> = {\n      None: \"level-none\",\n      Low: \"level-low\",\n      Moderate: \"level-moderate\",\n      High: \"level-high\",\n      \"Very High\": \"level-very-high\",\n    };\n\n    return levelMap[value] || \"level-none\";\n  };\n\n  if (compact) {\n    return (\n      <div\n        data-testid={testId}\n        className=\"flex items-center bg-gray-50 dark:bg-gray-800 px-2 py-1 rounded-md text-xs\"\n        style={{\n          borderLeft: borderColor ? `3px solid ${borderColor}` : undefined,\n        }}\n      >\n        <span className={`mr-1 ${getIconClass()}`}>{icon}</span>\n        <div>\n          <div className=\"text-gray-500 dark:text-gray-400 text-xxs\">\n            {label}\n          </div>\n          <div className=\"font-medium flex items-center\">\n            <span\n              className={`security-level-indicator ${getLevelClass()} mr-1`}\n            ></span>\n            {value}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"bg-gray-50 dark:bg-gray-800 p-3 rounded-md flex items-center security-card\"\n      style={{\n        borderLeft: borderColor ? `3px solid ${borderColor}` : undefined,\n      }}\n      data-testid={testId}\n    >\n      <div className=\"icon-container mr-3\">\n        <span className={getIconClass()}>{icon}</span>\n      </div>\n      <div className=\"flex-grow\">\n        <div className=\"text-xs text-gray-500 dark:text-gray-400\">{label}</div>\n        <div className=\"font-medium flex items-center\">\n          <span\n            className={`security-level-indicator ${getLevelClass()} mr-1`}\n          ></span>\n          {value}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SecurityLevelSummaryItem;\n","import React from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport WidgetContainer from \"../common/WidgetContainer\";\nimport StatusBadge from \"../common/StatusBadge\";\nimport KeyValuePair from \"../common/KeyValuePair\";\nimport SecurityLevelSummaryItem from \"../common/SecurityLevelSummaryItem\";\nimport { CIA_COMPONENT_COLORS } from \"../../constants/colorConstants\";\nimport { CIA_COMPONENT_ICONS, CIA_LABELS } from \"../../constants/appConstants\";\nimport { calculateOverallSecurityLevel } from \"../../types/cia\";\nimport { getSecurityLevelBadgeVariant } from \"../../utils/securityLevelUtils\";\n\n/**\n * Props for CIAImpactSummaryWidget component\n */\nexport interface CIAImpactSummaryWidgetProps {\n  confidentialityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  availabilityLevel: SecurityLevel;\n  // Add aliases for test compatibility\n  confidentiality?: SecurityLevel;\n  integrity?: SecurityLevel;\n  availability?: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * CIAImpactSummaryWidget shows a consolidated view of all three CIA pillars\n * with consistent UI/UX styling and color schemes.\n */\nconst CIAImpactSummaryWidget: React.FC<CIAImpactSummaryWidgetProps> = ({\n  // Support both property naming styles with fallbacks\n  confidentialityLevel,\n  integrityLevel,\n  availabilityLevel,\n  confidentiality,\n  integrity,\n  availability,\n  className = \"\",\n  testId = \"cia-impact-summary-widget\",\n}) => {\n  // Use the provided value or fallback to the alternative property name\n  const actualConfidentialityLevel =\n    confidentialityLevel || confidentiality || (\"None\" as SecurityLevel);\n  const actualIntegrityLevel =\n    integrityLevel || integrity || (\"None\" as SecurityLevel);\n  const actualAvailabilityLevel =\n    availabilityLevel || availability || (\"None\" as SecurityLevel);\n\n  // Get component details for each pillar\n  const confidentialityDetails = ciaContentService.getComponentDetails(\n    \"confidentiality\",\n    actualConfidentialityLevel\n  );\n\n  const integrityDetails = ciaContentService.getComponentDetails(\n    \"integrity\",\n    actualIntegrityLevel\n  );\n\n  const availabilityDetails = ciaContentService.getComponentDetails(\n    \"availability\",\n    actualAvailabilityLevel\n  );\n\n  // Calculate overall security level based on the three components\n  const overallSecurityLevel = calculateOverallSecurityLevel(\n    actualAvailabilityLevel,\n    actualIntegrityLevel,\n    actualConfidentialityLevel\n  );\n\n  return (\n    <WidgetContainer\n      title=\"CIA Security Impact Summary\"\n      icon=\"🔐\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        {/* Overall Security Level */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg mb-4 border-l-4 border-blue-500\">\n          <h3 className=\"text-lg font-medium mb-2 flex items-center\">\n            <span className=\"mr-2\">🛡️</span>\n            Overall Security Profile\n          </h3>\n          <div className=\"flex items-center\">\n            <StatusBadge\n              status={getSecurityLevelBadgeVariant(overallSecurityLevel)}\n              className=\"mr-2\"\n            >\n              {overallSecurityLevel}\n            </StatusBadge>\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              Security Level\n            </span>\n          </div>\n        </div>\n\n        {/* CIA Component Summary */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <SecurityLevelSummaryItem\n            label={CIA_LABELS.CONFIDENTIALITY}\n            value={actualConfidentialityLevel}\n            icon={CIA_COMPONENT_ICONS.CONFIDENTIALITY}\n            testId={`${testId}-confidentiality-summary`}\n            color=\"purple\"\n            borderColor={CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY}\n          />\n          <SecurityLevelSummaryItem\n            label={CIA_LABELS.INTEGRITY}\n            value={actualIntegrityLevel}\n            icon={CIA_COMPONENT_ICONS.INTEGRITY}\n            testId={`${testId}-integrity-summary`}\n            color=\"green\"\n            borderColor={CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY}\n          />\n          <SecurityLevelSummaryItem\n            label={CIA_LABELS.AVAILABILITY}\n            value={actualAvailabilityLevel}\n            icon={CIA_COMPONENT_ICONS.AVAILABILITY}\n            testId={`${testId}-availability-summary`}\n            color=\"blue\"\n            borderColor={CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY}\n          />\n        </div>\n\n        {/* CIA Pillar Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {/* Confidentiality Card */}\n          <div\n            className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border-l-4\"\n            style={{\n              borderLeftColor: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY,\n            }}\n          >\n            <h4 className=\"font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">\n                {CIA_COMPONENT_ICONS.CONFIDENTIALITY}\n              </span>\n              {CIA_LABELS.CONFIDENTIALITY}\n            </h4>\n            <StatusBadge status=\"purple\" className=\"mb-2\">\n              {actualConfidentialityLevel}\n            </StatusBadge>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n              {confidentialityDetails?.description?.substring(0, 100)}...\n            </p>\n            <KeyValuePair\n              label=\"Protection Method\"\n              value={\n                confidentialityDetails?.protectionMethod || \"Not specified\"\n              }\n              className=\"mt-2\"\n            />\n          </div>\n\n          {/* Integrity Card */}\n          <div\n            className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border-l-4\"\n            style={{ borderLeftColor: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY }}\n          >\n            <h4 className=\"font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">{CIA_COMPONENT_ICONS.INTEGRITY}</span>\n              {CIA_LABELS.INTEGRITY}\n            </h4>\n            <StatusBadge status=\"success\" className=\"mb-2\">\n              {actualIntegrityLevel}\n            </StatusBadge>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n              {integrityDetails?.description?.substring(0, 100)}...\n            </p>\n            <KeyValuePair\n              label=\"Validation Method\"\n              value={integrityDetails?.validationMethod || \"Not specified\"}\n              className=\"mt-2\"\n            />\n          </div>\n\n          {/* Availability Card */}\n          <div\n            className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border-l-4\"\n            style={{\n              borderLeftColor: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY,\n            }}\n          >\n            <h4 className=\"font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">{CIA_COMPONENT_ICONS.AVAILABILITY}</span>\n              {CIA_LABELS.AVAILABILITY}\n            </h4>\n            <StatusBadge status=\"info\" className=\"mb-2\">\n              {actualAvailabilityLevel}\n            </StatusBadge>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n              {availabilityDetails?.description?.substring(0, 100)}...\n            </p>\n            <KeyValuePair\n              label=\"Uptime Target\"\n              value={availabilityDetails?.uptime || \"Not specified\"}\n              className=\"mt-2\"\n            />\n          </div>\n        </div>\n\n        {/* Additional information section */}\n        <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">Security Profile Summary</h4>\n          <p className=\"text-sm\">\n            This security profile combines {actualConfidentialityLevel}{\" \"}\n            confidentiality, {actualIntegrityLevel} integrity, and{\" \"}\n            {actualAvailabilityLevel} availability controls to create an{\" \"}\n            {overallSecurityLevel.toLowerCase()} security posture. For detailed\n            implementation recommendations, see the individual CIA component\n            tabs.\n          </p>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default CIAImpactSummaryWidget;\n","import React, { useMemo, useState } from \"react\";\nimport { INTEGRITY_IMPACT_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport CIAImpactCard from \"../common/CIAImpactCard\";\nimport KeyValuePair from \"../common/KeyValuePair\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props for IntegrityImpactWidget component\n */\nexport interface IntegrityImpactWidgetProps {\n  integrityLevel: SecurityLevel;\n  availabilityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n  className?: string;\n  testId?: string;\n  options?: Record<string, any>; // Added the missing options property\n}\n\n/**\n * IntegrityImpactWidget displays impacts and recommendations related to data integrity\n * based on the selected security level. Uses common components for consistent UI/UX.\n */\nconst IntegrityImpactWidget: React.FC<IntegrityImpactWidgetProps> = ({\n  integrityLevel,\n  availabilityLevel,\n  confidentialityLevel,\n  className = \"\",\n  testId = INTEGRITY_IMPACT_TEST_IDS.INTEGRITY_IMPACT_PREFIX,\n  options = {}, // Add default value for options\n}) => {\n  const [showAllRecommendations, setShowAllRecommendations] = useState(false);\n\n  // Fetch component details from ciaContentService\n  const integrityDetails = useMemo(\n    () => ciaContentService.getComponentDetails(\"integrity\", integrityLevel),\n    [integrityLevel]\n  );\n\n  // Fetch business impact from ciaContentService\n  const businessImpact = useMemo(\n    () => ciaContentService.getBusinessImpact(\"integrity\", integrityLevel),\n    [integrityLevel]\n  );\n\n  // Get technical implementation details\n  const technicalDetails = useMemo(\n    () =>\n      ciaContentService.getTechnicalImplementation(\"integrity\", integrityLevel),\n    [integrityLevel]\n  );\n\n  // Get recommendations from service\n  const recommendations = useMemo(\n    () => ciaContentService.getRecommendations(\"integrity\", integrityLevel),\n    [integrityLevel]\n  );\n\n  // Handle cases where data might not be available\n  if (!integrityDetails) {\n    return (\n      <WidgetContainer\n        title=\"Integrity Impact\"\n        icon=\"✓\"\n        className={className}\n        testId={testId}\n        error={new Error(\"Integrity details not available\")}\n      >\n        <div>Integrity details not available</div>\n      </WidgetContainer>\n    );\n  }\n\n  return (\n    <WidgetContainer\n      title=\"Integrity Impact\"\n      icon=\"✓\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        <CIAImpactCard\n          title=\"Integrity Profile\"\n          level={integrityLevel}\n          description={\n            integrityDetails.description || \"No description available\"\n          }\n          icon=\"✓\"\n          badgeVariant=\"success\"\n          cardClass=\"integrity-card\"\n          testId={`${testId}-impact-card`}\n        >\n          {technicalDetails.validationMethod && (\n            <div className=\"flex items-center mt-2 text-sm text-green-600 dark:text-green-400\">\n              <span className=\"mr-2\">✓</span>\n              <span className=\"font-medium\">Validation Method: </span>\n              <span className=\"ml-1\">{technicalDetails.validationMethod}</span>\n            </div>\n          )}\n        </CIAImpactCard>\n\n        {/* Business Impact Section with enhanced styling */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm security-card\">\n          <h4 className=\"text-md font-medium mb-3 flex items-center\">\n            <span className=\"mr-2\">💼</span>\n            Business Impact\n          </h4>\n\n          <p\n            className=\"text-gray-600 dark:text-gray-300 mb-4\"\n            data-testid={`${testId}-business-impact`}\n          >\n            {businessImpact.summary ||\n              integrityDetails.businessImpact ||\n              \"No business impact data available\"}\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {businessImpact.operational && (\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-green-100 dark:bg-green-900 dark:bg-opacity-20 border border-green-200 dark:border-green-800\">\n                <div className=\"flex items-center mb-2\">\n                  <span className=\"mr-2\">⚙️</span>\n                  <span className=\"font-medium text-green-700 dark:text-green-300\">\n                    Operational Impact\n                  </span>\n                </div>\n                <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  {businessImpact.operational.description ||\n                    \"No operational impact information available\"}\n                </p>\n              </div>\n            )}\n\n            {businessImpact.financial && (\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-green-100 dark:bg-green-900 dark:bg-opacity-20 border border-green-200 dark:border-green-800\">\n                <div className=\"flex items-center mb-2\">\n                  <span className=\"mr-2\">💰</span>\n                  <span className=\"font-medium text-green-700 dark:text-green-300\">\n                    Financial Impact\n                  </span>\n                </div>\n                <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  {businessImpact.financial.description ||\n                    \"No financial impact information available\"}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Technical Implementation with enhanced styling */}\n        {technicalDetails && technicalDetails.description && (\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 integrity-card security-card\">\n            <h4 className=\"text-md font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">⚙️</span>\n              Technical Implementation\n            </h4>\n\n            <p className=\"text-gray-600 dark:text-gray-300 mb-3\">\n              {technicalDetails.description}\n            </p>\n\n            {technicalDetails.implementationSteps &&\n              technicalDetails.implementationSteps.length > 0 && (\n                <div className=\"mt-3\">\n                  <h5 className=\"text-sm font-medium mb-2 text-green-700 dark:text-green-300\">\n                    Implementation Steps\n                  </h5>\n                  <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-600 dark:text-gray-300\">\n                    {technicalDetails.implementationSteps\n                      .slice(0, 3)\n                      .map((step, idx) => (\n                        <li key={idx}>{step}</li>\n                      ))}\n                  </ul>\n                </div>\n              )}\n          </div>\n        )}\n\n        {/* Recommendations with enhanced styling */}\n        {recommendations && recommendations.length > 0 && (\n          <div className=\"bg-green-50 dark:bg-gray-800 p-4 rounded-lg border border-green-200 dark:border-green-900 shadow-sm security-card\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h4 className=\"text-md font-medium flex items-center\">\n                <span className=\"mr-2\">💡</span>\n                Recommendations\n              </h4>\n              {recommendations.length > 3 && (\n                <button\n                  className=\"text-sm px-3 py-1 rounded-full bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 hover:bg-green-200 dark:hover:bg-green-800 transition-colors\"\n                  onClick={() =>\n                    setShowAllRecommendations(!showAllRecommendations)\n                  }\n                >\n                  {showAllRecommendations ? \"Show Less\" : \"Show All\"}\n                </button>\n              )}\n            </div>\n\n            <ul className=\"list-disc pl-5 space-y-2 text-gray-600 dark:text-gray-300\">\n              {(showAllRecommendations\n                ? recommendations\n                : recommendations.slice(0, 3)\n              ).map((recommendation, index) => (\n                <li\n                  key={index}\n                  data-testid={`${testId}-recommendation-${index}`}\n                  className=\"text-sm\"\n                >\n                  {recommendation}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* Integrity Implementation Details */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 integrity-card security-card\">\n          <h4 className=\"text-md font-medium mb-3 flex items-center\">\n            <span className=\"mr-2\">🏷️</span>\n            Data Integrity Classification\n          </h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"p-3 rounded-md bg-opacity-10 bg-green-100 dark:bg-green-900 dark:bg-opacity-20\">\n              <KeyValuePair\n                label=\"Protection Level\"\n                value={integrityLevel}\n                testId={`${testId}-protection-level`}\n                valueClassName=\"text-green-700 dark:text-green-300 font-medium\"\n              />\n            </div>\n\n            {technicalDetails && technicalDetails.validationMethod && (\n              <div className=\"p-3 rounded-md bg-opacity-10 bg-green-100 dark:bg-green-900 dark:bg-opacity-20\">\n                <KeyValuePair\n                  label=\"Validation Technique\"\n                  value={technicalDetails.validationMethod}\n                  testId={`${testId}-validation-technique`}\n                  valueClassName=\"text-green-700 dark:text-green-300 font-medium\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default IntegrityImpactWidget;\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { SECURITY_RESOURCES_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport WidgetContainer from \"../common/WidgetContainer\";\nimport StatusBadge from \"../common/StatusBadge\";\n\n/**\n * Props for SecurityResourcesWidget component\n */\nexport interface SecurityResourcesWidgetProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  securityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * SecurityResourcesWidget displays security resources and reference materials\n * Enhanced with Ingress-style UI elements for a more immersive experience\n */\nconst SecurityResourcesWidget: React.FC<SecurityResourcesWidgetProps> = ({\n  availabilityLevel,\n  integrityLevel,\n  confidentialityLevel,\n  securityLevel,\n  className = \"\",\n  testId = SECURITY_RESOURCES_TEST_IDS.SECURITY_RESOURCES_WIDGET,\n}) => {\n  const [activeCategory, setActiveCategory] = useState<string>(\"all\");\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n  // Add network activity state\n  const [networkActivity, setNetworkActivity] = useState(false);\n\n  // Simulate network activity when search changes\n  useEffect(() => {\n    if (searchQuery.trim() !== \"\") {\n      setNetworkActivity(true);\n      const timer = setTimeout(() => {\n        setNetworkActivity(false);\n      }, 1200);\n      return () => clearTimeout(timer);\n    }\n  }, [searchQuery]);\n\n  // Get security resources from service\n  const resources = useMemo(\n    () =>\n      ciaContentService.getSecurityResources(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel,\n        securityLevel\n      ),\n    [availabilityLevel, integrityLevel, confidentialityLevel, securityLevel]\n  );\n\n  // Get unique categories for filtering\n  const categories = useMemo(() => {\n    const uniqueCategories = Array.from(\n      new Set(resources.map((resource) => resource.category))\n    );\n    return [\"all\", ...uniqueCategories];\n  }, [resources]);\n\n  // Filter resources based on active category and search query\n  const filteredResources = useMemo(() => {\n    let filtered = resources;\n\n    // Apply category filter\n    if (activeCategory !== \"all\") {\n      filtered = filtered.filter(\n        (resource) => resource.category === activeCategory\n      );\n    }\n\n    // Apply search filter\n    if (searchQuery.trim() !== \"\") {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(\n        (resource) =>\n          resource.title.toLowerCase().includes(query) ||\n          resource.description.toLowerCase().includes(query) ||\n          resource.tags.some((tag) => tag.toLowerCase().includes(query))\n      );\n    }\n\n    // Sort by relevance\n    return filtered.sort((a, b) => b.relevanceScore - a.relevanceScore);\n  }, [resources, activeCategory, searchQuery]);\n\n  // Get relevance badge variant based on score\n  const getRelevanceBadgeVariant = (score: number) => {\n    if (score >= 90) return \"purple\";\n    if (score >= 75) return \"success\";\n    if (score >= 50) return \"info\";\n    return \"neutral\";\n  };\n\n  // Get category icon\n  const getCategoryIcon = (category: string) => {\n    const categoryIcons: Record<string, string> = {\n      Framework: \"📚\",\n      Standard: \"📏\",\n      Tool: \"🛠️\",\n      \"Web Security\": \"🌐\",\n      Article: \"📄\",\n      Video: \"🎥\",\n      Course: \"🎓\",\n      Book: \"📖\",\n      Resource: \"📋\",\n      Training: \"👨‍🏫\",\n    };\n\n    return categoryIcons[category] || \"📌\";\n  };\n\n  return (\n    <WidgetContainer\n      title=\"Security Resources\"\n      icon=\"📚\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-4\">\n        {/* Security Level Summary */}\n        <div className=\"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-10 p-3 rounded-lg border border-blue-200 dark:border-blue-800\">\n          <h4 className=\"text-sm font-medium mb-2 terminal-text\">\n            <span className=\"mr-1\">▶</span> Selected Security Profile\n          </h4>\n          <div className=\"flex flex-wrap gap-2\">\n            <div className=\"flex items-center\">\n              <span className=\"text-xs text-gray-600 dark:text-gray-300 mr-1\">\n                Confidentiality:\n              </span>\n              <StatusBadge status=\"purple\" size=\"xs\">\n                <span\n                  className={`security-level-indicator level-${confidentialityLevel.toLowerCase()} mr-1`}\n                ></span>\n                {confidentialityLevel}\n              </StatusBadge>\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"text-xs text-gray-600 dark:text-gray-300 mr-1\">\n                Integrity:\n              </span>\n              <StatusBadge status=\"success\" size=\"xs\">\n                <span\n                  className={`security-level-indicator level-${integrityLevel.toLowerCase()} mr-1`}\n                ></span>\n                {integrityLevel}\n              </StatusBadge>\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"text-xs text-gray-600 dark:text-gray-300 mr-1\">\n                Availability:\n              </span>\n              <StatusBadge status=\"info\" size=\"xs\">\n                <span\n                  className={`security-level-indicator level-${availabilityLevel.toLowerCase()} mr-1`}\n                ></span>\n                {availabilityLevel}\n              </StatusBadge>\n            </div>\n          </div>\n        </div>\n\n        {/* Search and Filter */}\n        <div className=\"flex flex-col md:flex-row gap-2\">\n          <div className=\"flex-grow\">\n            <div className=\"relative search-container\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <svg\n                  className=\"h-3.5 w-3.5 text-gray-400 dark:text-gray-500\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search resources...\"\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                data-testid={`${testId}-search-input`}\n              />\n            </div>\n          </div>\n          <div className=\"flex-shrink-0\">\n            <select\n              className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n              value={activeCategory}\n              onChange={(e) => setActiveCategory(e.target.value)}\n              data-testid={`${testId}-category-select`}\n            >\n              {categories.map((category) => (\n                <option key={category} value={category}>\n                  {category === \"all\" ? \"All Categories\" : category}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Results Count */}\n        <div className=\"text-sm text-gray-600 dark:text-gray-400 flex items-center\">\n          <span\n            className={`inline-block w-3 h-3 rounded-full mr-2 ${\n              networkActivity ? \"bg-green-500 pulse-dot\" : \"bg-gray-500\"\n            }`}\n          ></span>\n          {networkActivity\n            ? \"Scanning resource database...\"\n            : `Showing ${filteredResources.length} of ${resources.length} resources`}\n          {activeCategory !== \"all\" && <> in {activeCategory}</>}\n          {searchQuery && <> matching \"{searchQuery}\"</>}\n        </div>\n\n        {/* Resource Cards */}\n        {filteredResources.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {filteredResources.map((resource, index) => (\n              <div\n                key={index}\n                className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border shadow-sm resource-card\"\n                data-testid={`${testId}-resource-${index}`}\n              >\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-base mr-2 icon-container\">\n                      {getCategoryIcon(resource.category)}\n                    </span>\n                    <h4 className=\"font-medium text-blue-600 dark:text-blue-400\">\n                      {resource.title}\n                    </h4>\n                  </div>\n                  <StatusBadge\n                    status={getRelevanceBadgeVariant(resource.relevanceScore)}\n                    size=\"xs\"\n                  >\n                    {resource.category}\n                  </StatusBadge>\n                </div>\n\n                <p className=\"text-xs text-gray-600 dark:text-gray-300 mb-3 ml-8\">\n                  {resource.description}\n                </p>\n\n                <div className=\"flex flex-wrap gap-1 mb-3 ml-8\">\n                  {resource.tags.map((tag, tagIndex) => (\n                    <span\n                      key={tagIndex}\n                      className=\"inline-block px-2 py-0.5 rounded-full text-xs resource-tag\"\n                    >\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n\n                <div className=\"flex justify-between items-center ml-8\">\n                  <a\n                    href={resource.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline flex items-center terminal-text\"\n                  >\n                    <span className=\"mr-1\">▶</span>\n                    <span>Access Resource</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-4 w-4 ml-1\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"\n                      />\n                    </svg>\n                  </a>\n\n                  {/* Relevance score indicator */}\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400 mr-1\">\n                      Relevance:\n                    </span>\n                    <div className=\"w-16 h-1.5 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n                      <div\n                        className={`h-full ${\n                          resource.relevanceScore >= 90\n                            ? \"bg-purple-500\"\n                            : resource.relevanceScore >= 75\n                            ? \"bg-green-500\"\n                            : resource.relevanceScore >= 50\n                            ? \"bg-blue-500\"\n                            : \"bg-gray-500\"\n                        }`}\n                        style={{ width: `${resource.relevanceScore}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-8 text-center\">\n            <div className=\"text-4xl mb-4\">🔍</div>\n            <h3 className=\"text-lg font-medium mb-2\">\n              No matching resources found\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n              Try adjusting your search criteria or security levels.\n            </p>\n          </div>\n        )}\n\n        {/* Security Resource Note */}\n        <div className=\"p-3 bg-gray-50 dark:bg-gray-750 rounded-md border border-gray-200 dark:border-gray-600 mt-4\">\n          <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n            <span className=\"font-medium\">Note:</span> Resources are tailored to\n            your selected security profile. Changing your security levels will\n            update available resources.\n          </p>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default SecurityResourcesWidget;\n","import React, { useMemo, useState } from \"react\";\nimport {\n  CIA_COMPONENT_ICONS,\n  CIA_LABELS,\n  SECURITY_RECOMMENDATIONS,\n} from \"../../constants/appConstants\";\nimport { CIA_COMPONENT_COLORS } from \"../../constants/colorConstants\";\nimport { WIDGET_ICONS, WIDGET_TITLES } from \"../../constants/coreConstants\";\nimport { SUMMARY_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService, {\n  getBusinessImpactDescription,\n  getROIEstimate,\n  getSecurityIcon,\n  getSecurityLevelDescription,\n  getTechnicalDescription,\n} from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { getSecurityLevelBadgeVariant } from \"../../utils/securityLevelUtils\";\nimport KeyValuePair from \"../common/KeyValuePair\";\nimport SecurityLevelSummaryItem from \"../common/SecurityLevelSummaryItem\";\nimport StatusBadge from \"../common/StatusBadge\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props for SecuritySummaryWidget\n */\nexport interface SecuritySummaryWidgetProps {\n  securityLevel: SecurityLevel;\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * Security Summary Widget that displays current security posture based on CIA levels\n *\n * @category Widgets\n * @param props - Component properties\n * @returns Rendered component\n */\nconst SecuritySummaryWidget: React.FC<SecuritySummaryWidgetProps> = ({\n  securityLevel,\n  availabilityLevel,\n  integrityLevel,\n  confidentialityLevel,\n  className = \"\",\n  testId = SUMMARY_TEST_IDS.SECURITY_SUMMARY_CONTAINER,\n}) => {\n  // Component state for toggleable sections\n  const [showTechnicalDetails, setShowTechnicalDetails] = useState(false);\n  const [showBusinessImpact, setShowBusinessImpact] = useState(false);\n  const [showMetrics, setShowMetrics] = useState(false);\n\n  // Get detailed description from service\n  const securityDescription = useMemo(\n    () =>\n      getSecurityLevelDescription(securityLevel) ||\n      \"Security level not specified\",\n    [securityLevel]\n  );\n\n  // Get ROI metrics from service\n  const roiData = useMemo(() => getROIEstimate(securityLevel), [securityLevel]);\n\n  // Fix the property access to match the return type from getROIEstimate\n  const roiValue = roiData.value; // instead of roiData.returnRate\n  const breakEvenPeriod = roiData.description.includes(\"break-even\")\n    ? \"12-24 months\"\n    : \"6-18 months\"; // default value since breakEvenPeriod doesn't exist\n\n  // Get technical implementation details from service\n  const availabilityTechDescription = useMemo(\n    () => getTechnicalDescription(\"availability\", availabilityLevel),\n    [availabilityLevel]\n  );\n\n  const integrityTechDescription = useMemo(\n    () => getTechnicalDescription(\"integrity\", integrityLevel),\n    [integrityLevel]\n  );\n\n  const confidentialityTechDescription = useMemo(\n    () => getTechnicalDescription(\"confidentiality\", confidentialityLevel),\n    [confidentialityLevel]\n  );\n\n  // Get business impact details from service\n  const availabilityBusinessImpact = useMemo(\n    () => getBusinessImpactDescription(\"availability\", availabilityLevel),\n    [availabilityLevel]\n  );\n\n  const integrityBusinessImpact = useMemo(\n    () => getBusinessImpactDescription(\"integrity\", integrityLevel),\n    [integrityLevel]\n  );\n\n  const confidentialityBusinessImpact = useMemo(\n    () => getBusinessImpactDescription(\"confidentiality\", confidentialityLevel),\n    [confidentialityLevel]\n  );\n\n  // Get recommendations from service\n  const recommendations = useMemo(\n    () => ciaContentService.getRecommendations(\"availability\", securityLevel),\n    [securityLevel]\n  );\n\n  // Get security icon based on security level\n  const securityIcon = getSecurityIcon(securityLevel);\n\n  return (\n    <WidgetContainer\n      title={WIDGET_TITLES.SECURITY_SUMMARY}\n      icon={WIDGET_ICONS.SECURITY_SUMMARY}\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\" role=\"region\" aria-label=\"Security Summary\">\n        {/* Security Level Header */}\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex-shrink-0\">\n            <span\n              className=\"text-3xl\"\n              data-testid={SUMMARY_TEST_IDS.SECURITY_ICON}\n              role=\"img\"\n              aria-label={`Security level: ${securityLevel}`}\n            >\n              {securityIcon}\n            </span>\n          </div>\n          <div>\n            <h3 className=\"text-xl font-bold\">{securityLevel} Security</h3>\n            <p\n              className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\"\n              data-testid={SUMMARY_TEST_IDS.SECURITY_SUMMARY_DESCRIPTION}\n            >\n              {securityDescription}\n            </p>\n          </div>\n        </div>\n\n        {/* CIA Level Summary Items */}\n        <div\n          className=\"flex flex-wrap gap-2\"\n          data-testid={SUMMARY_TEST_IDS.SUMMARY_CONTAINER}\n        >\n          <SecurityLevelSummaryItem\n            label={CIA_LABELS.CONFIDENTIALITY}\n            value={confidentialityLevel}\n            icon={CIA_COMPONENT_ICONS.CONFIDENTIALITY}\n            testId={`${testId}-confidentiality-summary`}\n            color=\"purple\"\n            borderColor={CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY}\n            compact={true}\n          />\n          <SecurityLevelSummaryItem\n            label={CIA_LABELS.INTEGRITY}\n            value={integrityLevel}\n            icon={CIA_COMPONENT_ICONS.INTEGRITY}\n            testId={`${testId}-integrity-summary`}\n            color=\"green\"\n            borderColor={CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY}\n            compact={true}\n          />\n          <SecurityLevelSummaryItem\n            label={CIA_LABELS.AVAILABILITY}\n            value={availabilityLevel}\n            icon={CIA_COMPONENT_ICONS.AVAILABILITY}\n            testId={`${testId}-availability-summary`}\n            color=\"blue\"\n            borderColor={CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY}\n            compact={true}\n          />\n        </div>\n\n        {/* ROI Estimate Summary */}\n        <div\n          className=\"bg-green-50 dark:bg-green-900 dark:bg-opacity-20 p-3 rounded-lg\"\n          data-testid={SUMMARY_TEST_IDS.ROI_ESTIMATE_SUMMARY}\n        >\n          <KeyValuePair\n            label=\"Estimated ROI\"\n            value={roiValue}\n            testId={SUMMARY_TEST_IDS.ROI_ESTIMATE_PAIR}\n            valueClassName=\"text-green-600 dark:text-green-400 text-lg\"\n          />\n          <p className=\"text-sm text-green-700 dark:text-green-400 mt-1\">\n            {roiData.description}\n          </p>\n        </div>\n\n        {/* Toggleable Technical Details Section */}\n        <div>\n          <button\n            onClick={() => setShowTechnicalDetails(!showTechnicalDetails)}\n            className=\"flex items-center justify-between w-full text-left font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\n            data-testid={SUMMARY_TEST_IDS.TECHNICAL_SECTION_TOGGLE}\n            aria-expanded={showTechnicalDetails}\n          >\n            <span>Technical Implementation</span>\n            <span\n              className=\"transition-transform duration-200\"\n              style={{\n                transform: showTechnicalDetails ? \"rotate(180deg)\" : \"none\",\n              }}\n            >\n              {showTechnicalDetails ? \"▲\" : \"▼\"}\n            </span>\n          </button>\n\n          {showTechnicalDetails && (\n            <div\n              className=\"mt-3 space-y-4 pl-3 border-l-2 border-gray-200 dark:border-gray-700\"\n              data-testid={SUMMARY_TEST_IDS.TECHNICAL_DETAILS_SECTION}\n            >\n              <div>\n                <h4\n                  className=\"text-sm font-medium mb-1\"\n                  style={{ color: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY }}\n                  data-testid={SUMMARY_TEST_IDS.AVAILABILITY_TECH_HEADING}\n                >\n                  Availability Implementation\n                </h4>\n                <p\n                  className=\"text-sm text-gray-600 dark:text-gray-400\"\n                  data-testid={SUMMARY_TEST_IDS.AVAILABILITY_TECH_DETAILS}\n                >\n                  {availabilityTechDescription}\n                </p>\n              </div>\n\n              <div>\n                <h4\n                  className=\"text-sm font-medium mb-1\"\n                  style={{ color: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY }}\n                  data-testid={SUMMARY_TEST_IDS.INTEGRITY_TECH_HEADING}\n                >\n                  Integrity Implementation\n                </h4>\n                <p\n                  className=\"text-sm text-gray-600 dark:text-gray-400\"\n                  data-testid={SUMMARY_TEST_IDS.INTEGRITY_TECH_DETAILS}\n                >\n                  {integrityTechDescription}\n                </p>\n              </div>\n\n              <div>\n                <h4\n                  className=\"text-sm font-medium mb-1\"\n                  style={{\n                    color: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY,\n                  }}\n                  data-testid={SUMMARY_TEST_IDS.CONFIDENTIALITY_TECH_HEADING}\n                >\n                  Confidentiality Implementation\n                </h4>\n                <p\n                  className=\"text-sm text-gray-600 dark:text-gray-400\"\n                  data-testid={SUMMARY_TEST_IDS.CONFIDENTIALITY_TECH_DETAILS}\n                >\n                  {confidentialityTechDescription}\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Toggleable Business Impact Section */}\n        <div>\n          <button\n            onClick={() => setShowBusinessImpact(!showBusinessImpact)}\n            className=\"flex items-center justify-between w-full text-left font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\n            data-testid={SUMMARY_TEST_IDS.BUSINESS_IMPACT_TOGGLE}\n            aria-expanded={showBusinessImpact}\n          >\n            <span>Business Impact</span>\n            <span\n              className=\"transition-transform duration-200\"\n              style={{\n                transform: showBusinessImpact ? \"rotate(180deg)\" : \"none\",\n              }}\n            >\n              {showBusinessImpact ? \"▲\" : \"▼\"}\n            </span>\n          </button>\n\n          {showBusinessImpact && (\n            <div\n              className=\"mt-3 space-y-4 pl-3 border-l-2 border-gray-200 dark:border-gray-700\"\n              data-testid={SUMMARY_TEST_IDS.BUSINESS_IMPACT_SECTION}\n            >\n              <div>\n                <h4\n                  className=\"text-sm font-medium mb-1\"\n                  style={{ color: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY }}\n                  data-testid={SUMMARY_TEST_IDS.AVAILABILITY_IMPACT_HEADING}\n                >\n                  Availability Impact\n                </h4>\n                <p\n                  className=\"text-sm text-gray-600 dark:text-gray-400\"\n                  data-testid={SUMMARY_TEST_IDS.AVAILABILITY_IMPACT_DETAILS}\n                >\n                  {availabilityBusinessImpact}\n                </p>\n              </div>\n\n              <div>\n                <h4\n                  className=\"text-sm font-medium mb-1\"\n                  style={{ color: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY }}\n                  data-testid={SUMMARY_TEST_IDS.INTEGRITY_IMPACT_HEADING}\n                >\n                  Integrity Impact\n                </h4>\n                <p\n                  className=\"text-sm text-gray-600 dark:text-gray-400\"\n                  data-testid={SUMMARY_TEST_IDS.INTEGRITY_IMPACT_DETAILS}\n                >\n                  {integrityBusinessImpact}\n                </p>\n              </div>\n\n              <div>\n                <h4\n                  className=\"text-sm font-medium mb-1\"\n                  style={{\n                    color: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY,\n                  }}\n                  data-testid={SUMMARY_TEST_IDS.CONFIDENTIALITY_IMPACT_HEADING}\n                >\n                  Confidentiality Impact\n                </h4>\n                <p\n                  className=\"text-sm text-gray-600 dark:text-gray-400\"\n                  data-testid={SUMMARY_TEST_IDS.CONFIDENTIALITY_IMPACT_DETAILS}\n                >\n                  {confidentialityBusinessImpact}\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Key Recommendations */}\n        <div>\n          <h4\n            className=\"font-medium mb-2\"\n            data-testid={SUMMARY_TEST_IDS.RECOMMENDATION_HEADING}\n          >\n            Security Recommendation\n          </h4>\n          <StatusBadge\n            status={getSecurityLevelBadgeVariant(securityLevel)}\n            testId={SUMMARY_TEST_IDS.SECURITY_RECOMMENDATION}\n          >\n            {SECURITY_RECOMMENDATIONS[\n              securityLevel\n                .toUpperCase()\n                .replace(\" \", \"_\") as keyof typeof SECURITY_RECOMMENDATIONS\n            ] || SECURITY_RECOMMENDATIONS.BASIC}\n          </StatusBadge>\n\n          {recommendations.length > 0 && (\n            <ul className=\"mt-3 space-y-1 list-disc list-inside text-sm text-gray-600 dark:text-gray-400\">\n              {recommendations.slice(0, 3).map((rec, index) => (\n                <li key={index}>{rec}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n\n        {/* Data Classifications */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div\n            className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4\"\n            style={{\n              borderLeftColor: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY,\n            }}\n          >\n            <h4 className=\"text-md font-medium mb-2\">\n              Data Protection Classification\n            </h4>\n            <div className=\"grid grid-cols-1 gap-2\">\n              <KeyValuePair\n                label=\"Classification Level\"\n                value={confidentialityLevel}\n                testId={`${testId}-classification-level`}\n              />\n              <KeyValuePair\n                label=\"Information Sensitivity\"\n                value={ciaContentService.getInformationSensitivity(\n                  confidentialityLevel\n                )}\n                testId={`${testId}-information-sensitivity`}\n              />\n            </div>\n          </div>\n\n          <div\n            className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4\"\n            style={{ borderLeftColor: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY }}\n          >\n            <h4 className=\"text-md font-medium mb-2\">\n              Data Integrity Classification\n            </h4>\n            <div className=\"grid grid-cols-1 gap-2\">\n              <KeyValuePair\n                label=\"Protection Level\"\n                value={integrityLevel}\n                testId={`${testId}-protection-level`}\n              />\n              {(() => {\n                const details = ciaContentService.getTechnicalImplementation(\n                  \"integrity\",\n                  integrityLevel\n                );\n                return details &&\n                  \"validationMethod\" in details &&\n                  details.validationMethod ? (\n                  <KeyValuePair\n                    label=\"Validation Technique\"\n                    value={details.validationMethod as string}\n                    testId={`${testId}-validation-technique`}\n                  />\n                ) : null;\n              })()}\n            </div>\n          </div>\n        </div>\n\n        {/* Availability Metrics */}\n        <button\n          onClick={() => setShowMetrics(!showMetrics)}\n          className=\"flex items-center justify-between w-full text-left font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors mb-2\"\n          data-testid={SUMMARY_TEST_IDS.METRICS_TOGGLE}\n          aria-expanded={showMetrics}\n        >\n          <span>Availability Metrics</span>\n          <span\n            className=\"transition-transform duration-200\"\n            style={{ transform: showMetrics ? \"rotate(180deg)\" : \"none\" }}\n          >\n            {showMetrics ? \"▲\" : \"▼\"}\n          </span>\n        </button>\n\n        {showMetrics && (\n          <div\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\"\n            data-testid={SUMMARY_TEST_IDS.METRICS_SECTION}\n          >\n            {(() => {\n              const details = ciaContentService.getComponentDetails(\n                \"availability\",\n                availabilityLevel\n              );\n              return (\n                <>\n                  <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg text-center\">\n                    <h5 className=\"text-sm font-medium mb-2\">Uptime</h5>\n                    <p className=\"text-lg font-bold\">\n                      {details?.uptime || \"N/A\"}\n                    </p>\n                  </div>\n                  <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg text-center\">\n                    <h5 className=\"text-sm font-medium mb-2\">\n                      Mean Time To Recovery (MTTR)\n                    </h5>\n                    <p className=\"text-lg font-bold\">\n                      {details?.mttr || \"N/A\"}\n                    </p>\n                  </div>\n                  <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg text-center\">\n                    <h5 className=\"flex items-center justify-center text-sm font-medium mb-2\">\n                      <span className=\"mr-1\">⏱️</span>Recovery Time Objective\n                      (RTO)\n                    </h5>\n                    <p className=\"text-lg font-bold\">{details?.rto || \"N/A\"}</p>\n                  </div>\n                  <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg text-center\">\n                    <h5 className=\"flex items-center justify-center text-sm font-medium mb-2\">\n                      <span className=\"mr-1\">💾</span>Recovery Point Objective\n                      (RPO)\n                    </h5>\n                    <p className=\"text-lg font-bold\">{details?.rpo || \"N/A\"}</p>\n                  </div>\n                </>\n              );\n            })()}\n          </div>\n        )}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default SecuritySummaryWidget;\n","import Chart from \"chart.js/auto\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CHART_TEST_IDS } from \"../../constants/testIds\";\n\ninterface RadarChartProps {\n  availabilityLevel: string;\n  integrityLevel: string;\n  confidentialityLevel: string;\n  className?: string;\n  testId?: string;\n}\n\nconst RadarChart: React.FC<RadarChartProps> = ({\n  availabilityLevel = \"None\",\n  integrityLevel = \"None\",\n  confidentialityLevel = \"None\",\n  className = \"\",\n  testId = CHART_TEST_IDS.RADAR_CHART,\n}) => {\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const chartInstanceRef = useRef<Chart<\"radar\", number[], string> | null>(\n    null\n  );\n  // Add state to track render errors for testing\n  const [renderError, setRenderError] = useState<string | null>(null);\n  // Add state to track dark mode\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(\n    document.documentElement.classList.contains(\"dark\")\n  );\n\n  // Add visible security levels for testing - this helps with debugging and state tracking\n  const [securityLevels] = useState({\n    availabilityLevel,\n    integrityLevel,\n    confidentialityLevel,\n  });\n\n  // Convert security levels to numerical values\n  const mapLevelToValue = (level: string): number => {\n    switch (level) {\n      case \"None\":\n        return 0;\n      case \"Basic\":\n      case \"Low\":\n        return 1;\n      case \"Moderate\":\n        return 2;\n      case \"High\":\n        return 3;\n      case \"Very High\":\n        return 4;\n      default:\n        return 0;\n    }\n  };\n\n  // Add effect to listen for theme changes\n  useEffect(() => {\n    // Create a MutationObserver to watch for changes to the document element's class list\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.attributeName === \"class\" &&\n          mutation.target === document.documentElement\n        ) {\n          const newDarkMode =\n            document.documentElement.classList.contains(\"dark\");\n          // Only update state if the mode actually changed\n          if (newDarkMode !== isDarkMode) {\n            setIsDarkMode(newDarkMode);\n          }\n        }\n      });\n    });\n\n    // Start observing\n    observer.observe(document.documentElement, { attributes: true });\n\n    // Cleanup observer on unmount\n    return () => observer.disconnect();\n  }, [isDarkMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    try {\n      // Cleanup previous chart instance\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n\n      // Add null checking for chart context\n      const ctx = chartRef.current?.getContext(\"2d\");\n      if (!ctx) {\n        setRenderError(\"Could not get canvas context\");\n        return;\n      }\n\n      const availabilityValue = mapLevelToValue(availabilityLevel);\n      const integrityValue = mapLevelToValue(integrityLevel);\n      const confidentialityValue = mapLevelToValue(confidentialityLevel);\n\n      // Set chart colors based on theme - now using isDarkMode state\n      const backgroundColor = isDarkMode\n        ? \"rgba(0, 204, 102, 0.2)\"\n        : \"rgba(0, 102, 51, 0.2)\";\n      const borderColor = isDarkMode ? \"#00cc66\" : \"#006633\";\n      const gridColor = isDarkMode\n        ? \"rgba(255, 255, 255, 0.1)\"\n        : \"rgba(0, 0, 0, 0.1)\";\n      const textColor = isDarkMode ? \"#f0f0f0\" : \"#222222\";\n\n      // Create chart\n      chartInstanceRef.current = new Chart(ctx, {\n        type: \"radar\",\n        data: {\n          labels: [\"Availability\", \"Integrity\", \"Confidentiality\"],\n          datasets: [\n            {\n              label: \"Security Profile\",\n              data: [availabilityValue, integrityValue, confidentialityValue],\n              backgroundColor: backgroundColor,\n              borderColor: borderColor,\n              borderWidth: 2,\n              pointBackgroundColor: borderColor,\n              pointBorderColor: \"#fff\",\n              pointHoverBackgroundColor: \"#fff\",\n              pointHoverBorderColor: borderColor,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          scales: {\n            r: {\n              angleLines: {\n                color: gridColor,\n              },\n              grid: {\n                color: gridColor,\n              },\n              pointLabels: {\n                color: textColor,\n                font: {\n                  size: 12,\n                },\n              },\n              min: 0,\n              max: 4,\n              ticks: {\n                backdropColor: \"transparent\",\n                color: textColor,\n                z: 100,\n                stepSize: 1,\n                font: {\n                  size: 10,\n                },\n                callback: function (value) {\n                  const levels = [\n                    \"None\",\n                    \"Basic\",\n                    \"Moderate\",\n                    \"High\",\n                    \"Very High\",\n                  ];\n                  return levels[value as number] || \"\";\n                },\n              },\n              beginAtZero: true,\n            },\n          },\n          plugins: {\n            legend: {\n              display: false,\n              labels: {\n                color: isDarkMode ? \"#00cc66\" : \"#006633\",\n                font: {\n                  family: \"'Share Tech Mono', monospace\",\n                  size: 12,\n                },\n                boxWidth: 15,\n                boxHeight: 2,\n              },\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const levels = [\n                    \"None\",\n                    \"Basic\",\n                    \"Moderate\",\n                    \"High\",\n                    \"Very High\",\n                  ];\n                  const value = context.raw as number;\n                  return `${context.label}: ${levels[value] || \"\"}`;\n                },\n              },\n            },\n          },\n        },\n      });\n\n      // Handle resize events to ensure the chart remains responsive\n      const resizeHandler = () => {\n        if (chartInstanceRef.current) {\n          chartInstanceRef.current.resize();\n        }\n      };\n\n      window.addEventListener(\"resize\", resizeHandler);\n\n      return () => {\n        window.removeEventListener(\"resize\", resizeHandler);\n        if (chartInstanceRef.current) {\n          chartInstanceRef.current.destroy();\n        }\n      };\n    } catch (error) {\n      // Improved error handling with proper type checking\n      setRenderError(error instanceof Error ? error.message : String(error));\n    }\n  }, [availabilityLevel, integrityLevel, confidentialityLevel, isDarkMode]); // Added isDarkMode as dependency\n\n  // Apply className to container element if provided\n  const containerClassName = className\n    ? `radar-chart-container ${className}`.trim()\n    : \"radar-chart-container\";\n\n  return (\n    <div className={containerClassName} data-testid={`${testId}-container`}>\n      {renderError ? (\n        <div data-testid={`${testId}-error`} className=\"error-message\">\n          Error loading chart: {renderError}\n        </div>\n      ) : (\n        <div className=\"radar-values flex justify-between mb-2\">\n          <div>\n            <strong>Availability:</strong>{\" \"}\n            <span data-testid={CHART_TEST_IDS.RADAR_AVAILABILITY_VALUE}>\n              {availabilityLevel || \"None\"}\n            </span>\n          </div>\n          <div>\n            <strong>Integrity:</strong>{\" \"}\n            <span data-testid={CHART_TEST_IDS.RADAR_INTEGRITY_VALUE}>\n              {integrityLevel || \"None\"}\n            </span>\n          </div>\n          <div>\n            <strong>Confidentiality:</strong>{\" \"}\n            <span data-testid={CHART_TEST_IDS.RADAR_CONFIDENTIALITY_VALUE}>\n              {confidentialityLevel || \"None\"}\n            </span>\n          </div>\n        </div>\n      )}\n      <canvas ref={chartRef} data-testid={testId}></canvas>\n    </div>\n  );\n};\n\nexport default RadarChart;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { CHART_TEST_IDS } from \"../../constants/testIds\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { getSecurityLevelValue } from \"../../utils/securityLevelUtils\";\nimport RadarChart from \"../charts/RadarChart\";\nimport MetricsCard from \"../common/MetricsCard\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props interface for SecurityVisualizationWidget\n */\nexport interface SecurityVisualizationWidgetProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * Calculates risk metrics based on security levels\n */\nconst calculateRiskMetrics = (\n  availabilityLevel: SecurityLevel,\n  integrityLevel: SecurityLevel,\n  confidentialityLevel: SecurityLevel\n) => {\n  // Convert security levels to numerical values (0-4, where 4 is Very High)\n  const availabilityValue = getSecurityLevelValue(availabilityLevel);\n  const integrityValue = getSecurityLevelValue(integrityLevel);\n  const confidentialityValue = getSecurityLevelValue(confidentialityLevel);\n\n  // Calculate average security score\n  const avgSecurityScore =\n    (availabilityValue + integrityValue + confidentialityValue) / 3;\n\n  // Calculate value at risk (inverse relationship to security)\n  // Scale is 0-100 where 100 is highest risk\n  const valueAtRisk = Math.round(100 - avgSecurityScore * 25);\n\n  // Calculate probability (inverse relationship to security)\n  // Scale is 0-100% where 100% is highest probability\n  const probability = Math.round(90 - avgSecurityScore * 20);\n\n  // Calculate combined risk score\n  const riskScore = Math.round((valueAtRisk * probability) / 100);\n\n  // Determine risk level based on score\n  let riskLevel;\n  if (riskScore >= 70) riskLevel = \"Critical\";\n  else if (riskScore >= 50) riskLevel = \"High\";\n  else if (riskScore >= 30) riskLevel = \"Medium\";\n  else riskLevel = \"Low\";\n\n  return {\n    valueAtRisk,\n    probability: `${probability}%`,\n    riskScore,\n    riskLevel,\n  };\n};\n\n/**\n * SecurityVisualizationWidget displays a radar chart visualization of the security profile\n * and risk assessment metrics based on the selected security levels.\n */\nconst SecurityVisualizationWidget: React.FC<\n  SecurityVisualizationWidgetProps\n> = ({\n  availabilityLevel,\n  integrityLevel,\n  confidentialityLevel,\n  className = \"\",\n  testId = CHART_TEST_IDS.RADAR_CHART, // Changed from RADAR_CHART_WIDGET to RADAR_CHART\n}) => {\n  // Calculate risk metrics\n  const riskMetrics = useMemo(\n    () =>\n      calculateRiskMetrics(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ),\n    [availabilityLevel, integrityLevel, confidentialityLevel]\n  );\n\n  // Add state for showing tips\n  const [showTips, setShowTips] = useState({\n    availability: false,\n    integrity: false,\n    confidentiality: false,\n  });\n\n  // Add typing effect state\n  const [typedText, setTypedText] = useState(\"\");\n  const fullText =\n    \"Risk score is calculated by multiplying the value at risk by the probability of a security incident. Improving your security levels will decrease both factors, resulting in a lower overall risk.\";\n\n  useEffect(() => {\n    let i = 0;\n    setTypedText(\"\");\n    const typingInterval = setInterval(() => {\n      if (i < fullText.length) {\n        setTypedText((prev) => prev + fullText.charAt(i));\n        i++;\n      } else {\n        clearInterval(typingInterval);\n      }\n    }, 30);\n\n    return () => clearInterval(typingInterval);\n  }, [fullText]);\n\n  // Get risk indicator color based on risk level\n  const getRiskColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case \"Critical\":\n        return \"danger\";\n      case \"High\":\n        return \"warning\";\n      case \"Medium\":\n        return \"info\";\n      case \"Low\":\n        return \"success\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  return (\n    <WidgetContainer\n      title=\"Security Profile Visualization\"\n      icon=\"📊\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        {/* Radar Chart Section */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm\">\n          <h3 className=\"text-lg font-medium mb-4 flex items-center\">\n            <span className=\"mr-2\">📊</span>\n            CIA Security Profile\n          </h3>\n          <div\n            className=\"h-64\"\n            data-testid={CHART_TEST_IDS.RADAR_CHART_CONTAINER}\n          >\n            <RadarChart\n              availabilityLevel={availabilityLevel}\n              integrityLevel={integrityLevel}\n              confidentialityLevel={confidentialityLevel}\n            />\n          </div>\n          <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-3\">\n            This radar chart visualizes your current security profile across the\n            CIA triad: Confidentiality, Integrity, and Availability.\n          </p>\n        </div>\n\n        {/* Risk Assessment Section */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm\">\n          <h3 className=\"text-lg font-medium mb-4 flex items-center\">\n            <span className=\"mr-2\">⚠️</span>\n            Risk Assessment\n          </h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* Value at Risk Card */}\n            <MetricsCard\n              title=\"Value at Risk\"\n              value={`${riskMetrics.valueAtRisk}/100`}\n              icon=\"💰\"\n              testId={`${testId}-value-at-risk`}\n              variant=\"warning\"\n              subtitle=\"Potential impact value\"\n            />\n\n            {/* Probability Card */}\n            <MetricsCard\n              title=\"Probability\"\n              value={riskMetrics.probability}\n              icon=\"🎯\"\n              testId={`${testId}-probability`}\n              variant=\"info\"\n              subtitle=\"Likelihood of security incident\"\n            />\n\n            {/* Risk Score Card */}\n            <MetricsCard\n              title=\"Risk Score\"\n              value={riskMetrics.riskScore.toString()}\n              icon=\"🔍\"\n              testId={`${testId}-risk-score`}\n              variant={getRiskColor(riskMetrics.riskLevel)}\n              subtitle={`Risk Level: ${riskMetrics.riskLevel}`}\n            />\n          </div>\n\n          {/* Risk score gauge visualization - enhanced with Ingress styling */}\n          <div className=\"mt-6 bg-gray-50 dark:bg-gray-900 rounded-lg p-4 border border-gray-200 dark:border-gray-700\">\n            <h4 className=\"text-sm font-medium mb-3\">Risk Score Gauge</h4>\n            <div className=\"relative h-8 w-full bg-gray-200 dark:bg-gray-800 rounded-full overflow-hidden\">\n              {/* Color segments for risk levels with enhanced cyberpunk styling */}\n              <div className=\"absolute top-0 left-0 h-full w-1/4 bg-gradient-to-r from-green-500 to-green-400\"></div>\n              <div className=\"absolute top-0 left-1/4 h-full w-1/4 bg-gradient-to-r from-yellow-400 to-yellow-500\"></div>\n              <div className=\"absolute top-0 left-2/4 h-full w-1/4 bg-gradient-to-r from-orange-500 to-orange-600\"></div>\n              <div className=\"absolute top-0 left-3/4 h-full w-1/4 bg-gradient-to-r from-red-600 to-red-700\"></div>\n\n              {/* Risk score indicator with glow effect */}\n              <div\n                className=\"absolute top-0 h-full w-1 bg-white dark:bg-gray-100 z-10 shadow-glow\"\n                style={{\n                  left: `${riskMetrics.riskScore}%`,\n                  boxShadow: \"0 0 10px 2px rgba(255, 255, 255, 0.7)\",\n                  transform: \"translateX(-50%)\",\n                }}\n              ></div>\n\n              {/* Risk labels */}\n              <div className=\"absolute top-full mt-2 left-0 text-xs text-gray-600 dark:text-gray-400\">\n                Low Risk\n              </div>\n              <div className=\"absolute top-full mt-2 right-0 text-xs text-gray-600 dark:text-gray-400\">\n                High Risk\n              </div>\n            </div>\n          </div>\n\n          {/* Risk score details in cyberpunk style */}\n          <div className=\"mt-4 bg-gray-50 dark:bg-gray-800 p-3 rounded-lg border border-gray-200 dark:border-gray-700 technical-text\">\n            <div className=\"flex justify-between items-center text-sm\">\n              <span className=\"text-gray-600 dark:text-gray-400\">\n                Risk Analysis:\n              </span>\n              <span\n                className={`font-mono ${\n                  riskMetrics.riskLevel === \"Critical\"\n                    ? \"text-red-500 dark:text-red-400\"\n                    : riskMetrics.riskLevel === \"High\"\n                    ? \"text-orange-500 dark:text-orange-400\"\n                    : riskMetrics.riskLevel === \"Medium\"\n                    ? \"text-yellow-500 dark:text-yellow-400\"\n                    : \"text-green-500 dark:text-green-400\"\n                }`}\n              >\n                {riskMetrics.riskScore}/100 - {riskMetrics.riskLevel}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900 dark:bg-opacity-10 rounded-lg border border-yellow-200 dark:border-yellow-800\">\n            <h4 className=\"text-sm font-medium mb-1 flex items-center text-yellow-700 dark:text-yellow-400\">\n              <span className=\"mr-1.5\">ℹ️</span>\n              Risk Calculation\n            </h4>\n            <p className=\"text-xs text-gray-600 dark:text-gray-300 font-mono\">\n              {typedText}\n              <span className=\"inline-block w-2 h-4 bg-green-400 dark:bg-green-500 ml-1 animate-pulse\">\n                {typedText.length < fullText.length ? \"\" : \" \"}\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {/* Risk Mitigation Recommendations */}\n        <div className=\"p-4 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-10 rounded-lg border border-blue-200 dark:border-blue-800\">\n          <h4 className=\"text-sm font-medium mb-2 flex items-center justify-between text-blue-700 dark:text-blue-400\">\n            <span className=\"flex items-center\">\n              <span className=\"mr-1.5\">💡</span>\n              Risk Mitigation Recommendations\n            </span>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n              Click for details\n            </span>\n          </h4>\n          <ul className=\"list-disc pl-5 space-y-1 text-sm text-gray-600 dark:text-gray-300\">\n            {availabilityLevel !== \"Very High\" && (\n              <li\n                className=\"cursor-pointer hover:text-blue-600 dark:hover:text-blue-300 transition-colors\"\n                onClick={() =>\n                  setShowTips((prev) => ({\n                    ...prev,\n                    availability: !prev.availability,\n                  }))\n                }\n              >\n                Increase your <strong>Availability</strong> security level to\n                reduce downtime risk\n                {showTips.availability && (\n                  <div className=\"mt-2 ml-2 p-3 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-50 rounded text-xs\">\n                    <p className=\"mb-1 font-semibold\">Implementation tips:</p>\n                    <ul className=\"list-disc pl-4 space-y-1\">\n                      <li>Deploy redundant systems and load balancers</li>\n                      <li>Implement automated failover mechanisms</li>\n                      <li>\n                        Use distributed architecture across multiple zones\n                      </li>\n                      <li>\n                        Establish robust backup and disaster recovery procedures\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </li>\n            )}\n            {integrityLevel !== \"Very High\" && (\n              <li\n                className=\"cursor-pointer hover:text-blue-600 dark:hover:text-blue-300 transition-colors\"\n                onClick={() =>\n                  setShowTips((prev) => ({\n                    ...prev,\n                    integrity: !prev.integrity,\n                  }))\n                }\n              >\n                Enhance <strong>Integrity</strong> controls to prevent data\n                corruption risks\n                {showTips.integrity && (\n                  <div className=\"mt-2 ml-2 p-3 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-50 rounded text-xs\">\n                    <p className=\"mb-1 font-semibold\">Implementation tips:</p>\n                    <ul className=\"list-disc pl-4 space-y-1\">\n                      <li>Implement data validation and checksums</li>\n                      <li>Use secure code practices and input sanitization</li>\n                      <li>Set up database integrity constraints</li>\n                      <li>Establish proper access controls and audit logs</li>\n                    </ul>\n                  </div>\n                )}\n              </li>\n            )}\n            {confidentialityLevel !== \"Very High\" && (\n              <li\n                className=\"cursor-pointer hover:text-blue-600 dark:hover:text-blue-300 transition-colors\"\n                onClick={() =>\n                  setShowTips((prev) => ({\n                    ...prev,\n                    confidentiality: !prev.confidentiality,\n                  }))\n                }\n              >\n                Strengthen <strong>Confidentiality</strong> measures to protect\n                against data breaches\n                {showTips.confidentiality && (\n                  <div className=\"mt-2 ml-2 p-3 bg-blue-100 dark:bg-blue-900 dark:bg-opacity-50 rounded text-xs\">\n                    <p className=\"mb-1 font-semibold\">Implementation tips:</p>\n                    <ul className=\"list-disc pl-4 space-y-1\">\n                      <li>\n                        Implement end-to-end encryption for sensitive data\n                      </li>\n                      <li>Use strong access control mechanisms</li>\n                      <li>Deploy data loss prevention solutions</li>\n                      <li>Conduct regular security awareness training</li>\n                    </ul>\n                  </div>\n                )}\n              </li>\n            )}\n            {availabilityLevel === \"Very High\" &&\n              integrityLevel === \"Very High\" &&\n              confidentialityLevel === \"Very High\" && (\n                <li>\n                  Your security profile is at maximum level. Continue\n                  maintaining these robust controls.\n                </li>\n              )}\n          </ul>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default SecurityVisualizationWidget;\n","import React, { useState, useMemo } from \"react\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { TECHNICAL_DETAILS_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService from \"../../services/ciaContentService\";\nimport WidgetContainer from \"../common/WidgetContainer\";\nimport KeyValuePair from \"../common/KeyValuePair\";\nimport StatusBadge from \"../common/StatusBadge\";\nimport { CIA_COMPONENT_COLORS } from \"../../constants/colorConstants\";\n\n// Define interface for the widget props\nexport interface TechnicalDetailsWidgetProps {\n  availabilityLevel?: SecurityLevel | string;\n  integrityLevel?: SecurityLevel | string;\n  confidentialityLevel?: SecurityLevel | string;\n  availabilityOptions?: Record<string, any>;\n  integrityOptions?: Record<string, any>;\n  confidentialityOptions?: Record<string, any>;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * TechnicalDetailsWidget displays detailed technical implementation information\n * for each of the CIA components based on selected security levels\n */\nconst TechnicalDetailsWidget: React.FC<TechnicalDetailsWidgetProps> = ({\n  availabilityLevel = \"Moderate\",\n  integrityLevel = \"Moderate\",\n  confidentialityLevel = \"Moderate\",\n  availabilityOptions = {},\n  integrityOptions = {},\n  confidentialityOptions = {},\n  testId = TECHNICAL_DETAILS_TEST_IDS.TECHNICAL_DETAILS_WIDGET,\n}) => {\n  // Use provided values or fall back to default values\n  const actualAvailabilityLevel = availabilityLevel || \"Moderate\";\n  const actualIntegrityLevel = integrityLevel || \"Moderate\";\n  const actualConfidentialityLevel = confidentialityLevel || \"Moderate\"; // Fixed: was using 'confidentiality'\n\n  const [activeTab, setActiveTab] = useState<\n    \"availability\" | \"integrity\" | \"confidentiality\"\n  >(\"availability\");\n\n  // Function to handle tab changes\n  const handleTabChange = (\n    tab: \"availability\" | \"integrity\" | \"confidentiality\"\n  ): void => {\n    setActiveTab(tab);\n  };\n\n  // Get availability implementation details from service\n  const availabilityDetails = useMemo(\n    () =>\n      ciaContentService.getTechnicalImplementation(\n        \"availability\",\n        actualAvailabilityLevel as SecurityLevel // Cast to SecurityLevel\n      ),\n    [actualAvailabilityLevel]\n  );\n\n  // Get integrity implementation details from service\n  const integrityDetails = useMemo(\n    () =>\n      ciaContentService.getTechnicalImplementation(\n        \"integrity\",\n        actualIntegrityLevel as SecurityLevel // Cast to SecurityLevel\n      ),\n    [actualIntegrityLevel]\n  );\n\n  // Get confidentiality implementation details from service\n  const confidentialityDetails = useMemo(\n    () =>\n      ciaContentService.getTechnicalImplementation(\n        \"confidentiality\",\n        actualConfidentialityLevel as SecurityLevel // Cast to SecurityLevel\n      ),\n    [actualConfidentialityLevel]\n  );\n\n  // Get active details based on selected tab\n  const getActiveDetails = () => {\n    switch (activeTab) {\n      case \"availability\":\n        return {\n          details: availabilityDetails,\n          level: actualAvailabilityLevel,\n          color: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY,\n          badgeColor: \"info\",\n        };\n      case \"integrity\":\n        return {\n          details: integrityDetails,\n          level: actualIntegrityLevel,\n          color: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY,\n          badgeColor: \"success\",\n        };\n      case \"confidentiality\":\n        return {\n          details: confidentialityDetails,\n          level: actualConfidentialityLevel,\n          color: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY,\n          badgeColor: \"purple\",\n        };\n      default:\n        return {\n          details: availabilityDetails,\n          level: actualAvailabilityLevel,\n          color: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY,\n          badgeColor: \"info\",\n        };\n    }\n  };\n\n  const { details, level, color, badgeColor } = getActiveDetails();\n\n  return (\n    <WidgetContainer\n      title=\"Technical Implementation Guide\"\n      icon=\"⚙️\"\n      testId={testId}\n    >\n      {/* Tabs for switching between CIA components */}\n      <div className=\"flex border-b mb-4\" role=\"tablist\">\n        <button\n          className={`px-4 py-2 focus:outline-none ${\n            activeTab === \"availability\"\n              ? \"border-b-2 text-blue-600 dark:text-blue-400\"\n              : \"text-gray-600 dark:text-gray-400\"\n          }`}\n          onClick={() => handleTabChange(\"availability\")}\n          data-testid=\"availability-tab-button\"\n          role=\"tab\"\n          aria-selected={activeTab === \"availability\"}\n          aria-controls=\"availability-tab-panel\"\n          id=\"availability-tab-button\"\n          style={\n            activeTab === \"availability\"\n              ? { borderColor: CIA_COMPONENT_COLORS.AVAILABILITY.PRIMARY }\n              : undefined\n          }\n        >\n          <span className=\"mr-1\">⏱️</span>\n          Availability\n        </button>\n        <button\n          className={`px-4 py-2 focus:outline-none ${\n            activeTab === \"integrity\"\n              ? \"border-b-2 text-green-600 dark:text-green-400\"\n              : \"text-gray-600 dark:text-gray-400\"\n          }`}\n          onClick={() => handleTabChange(\"integrity\")}\n          data-testid=\"integrity-tab-button\"\n          role=\"tab\"\n          aria-selected={activeTab === \"integrity\"}\n          aria-controls=\"integrity-tab-panel\"\n          id=\"integrity-tab-button\"\n          style={\n            activeTab === \"integrity\"\n              ? { borderColor: CIA_COMPONENT_COLORS.INTEGRITY.PRIMARY }\n              : undefined\n          }\n        >\n          <span className=\"mr-1\">✓</span>\n          Integrity\n        </button>\n        <button\n          className={`px-4 py-2 focus:outline-none ${\n            activeTab === \"confidentiality\"\n              ? \"border-b-2 text-purple-600 dark:text-purple-400\"\n              : \"text-gray-600 dark:text-gray-400\"\n          }`}\n          onClick={() => handleTabChange(\"confidentiality\")}\n          data-testid=\"confidentiality-tab-button\"\n          role=\"tab\"\n          aria-selected={activeTab === \"confidentiality\"}\n          aria-controls=\"confidentiality-tab-panel\"\n          id=\"confidentiality-tab-button\"\n          style={\n            activeTab === \"confidentiality\"\n              ? { borderColor: CIA_COMPONENT_COLORS.CONFIDENTIALITY.PRIMARY }\n              : undefined\n          }\n        >\n          <span className=\"mr-1\">🔒</span>\n          Confidentiality\n        </button>\n      </div>\n\n      {/* Technical details content area */}\n      <div className=\"p-4 border rounded-lg bg-gray-50 dark:bg-gray-700\">\n        <div\n          role=\"tabpanel\"\n          id={`${activeTab}-tab-panel`}\n          aria-labelledby={`${activeTab}-tab-button`}\n          data-testid=\"technical-details\"\n        >\n          {/* Level indicator and description */}\n          <div className=\"flex items-center mb-4 justify-between\">\n            <h3 className=\"text-lg font-medium\" style={{ color }}>\n              {activeTab.charAt(0).toUpperCase() + activeTab.slice(1)}{\" \"}\n              Implementation\n            </h3>\n            <StatusBadge status={badgeColor as any} size=\"md\">\n              {level}\n            </StatusBadge>\n          </div>\n\n          {/* Technical description */}\n          <p\n            className=\"text-gray-600 dark:text-gray-300 mb-6\"\n            data-testid=\"technical-description\"\n          >\n            {details.description || \"No description available.\"}\n          </p>\n\n          {/* Technologies Used Section */}\n          {details.technologies && details.technologies.length > 0 && (\n            <div className=\"mt-4\">\n              <h4\n                className=\"text-sm font-medium mb-2 flex items-center terminal-text\"\n                style={{ color }}\n              >\n                <span className=\"mr-1\">💻</span>\n                Technologies\n              </h4>\n              <div className=\"flex flex-wrap gap-1.5 mb-3\">\n                {details.technologies.map((tech: string, idx: number) => (\n                  <span\n                    key={idx}\n                    className=\"inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium dark:bg-opacity-20\"\n                    style={{\n                      backgroundColor: `${color}15`,\n                      borderLeft: `2px solid ${color}`,\n                      color: color,\n                    }}\n                  >\n                    {tech}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Implementation Steps Section */}\n          <h4\n            className=\"text-sm font-medium mt-4 mb-2 flex items-center\"\n            data-testid=\"implementation-header\"\n            style={{ color }}\n          >\n            <span className=\"mr-1\">📋</span>\n            Implementation Steps\n          </h4>\n\n          <ul className=\"list-disc list-inside text-xs ml-2 space-y-2\">\n            {details.implementationSteps &&\n              details.implementationSteps.map((step: string, index: number) => (\n                <li\n                  key={`${activeTab}-step-${index}`}\n                  data-testid={`implementation-step-${index}`}\n                  className=\"text-gray-600 dark:text-gray-300\"\n                >\n                  {step}\n                </li>\n              ))}\n          </ul>\n\n          {/* Requirements Section */}\n          {details.requirements && details.requirements.length > 0 && (\n            <div\n              className=\"mt-4 p-2 rounded-md bg-gray-50 dark:bg-black dark:bg-opacity-30 border-l-2\"\n              style={{ borderLeftColor: color }}\n            >\n              <h4\n                className=\"text-sm font-medium mb-2 flex items-center terminal-text\"\n                style={{ color }}\n              >\n                <span className=\"mr-1\">📝</span>\n                Requirements\n              </h4>\n              <ul className=\"list-disc list-inside space-y-1 text-xs text-gray-600 dark:text-gray-300\">\n                {details.requirements.map((req: string, idx: number) => (\n                  <li key={idx}>{req}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Resources Required Section */}\n          <h4\n            className=\"text-sm font-medium mt-4 mb-2 flex items-center\"\n            data-testid=\"resources-header\"\n            style={{ color }}\n          >\n            <span className=\"mr-1\">🔧</span>\n            Resources Required\n          </h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 text-xs\">\n            {details.effort && (\n              <>\n                <KeyValuePair\n                  label=\"Development Effort\"\n                  value={details.effort.development}\n                  testId=\"development-effort\"\n                  valueClassName={`font-medium terminal-text`}\n                  className={`text-${color}`}\n                />\n                <KeyValuePair\n                  label=\"Maintenance\"\n                  value={details.effort.maintenance}\n                  testId=\"maintenance-level\"\n                  valueClassName={`font-medium terminal-text`}\n                  className={`text-${color}`}\n                />\n                <KeyValuePair\n                  label=\"Required Expertise\"\n                  value={details.effort.expertise}\n                  testId=\"required-expertise\"\n                  valueClassName={`font-medium terminal-text`}\n                  className={`text-${color}`}\n                />\n              </>\n            )}\n          </div>\n\n          {/* Enhanced Implementation Metrics */}\n          <div className=\"mt-6 bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 border-gray-300 dark:border-gray-600 security-card\">\n            <h3 className=\"text-lg font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">⚙️</span>\n              Implementation Metrics\n            </h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Development Effort */}\n              <div className=\"p-3 bg-gray-100 dark:bg-gray-750 rounded-lg shadow-sm security-card\">\n                <h4 className=\"text-sm font-medium mb-2 flex items-center terminal-text\">\n                  <span className=\"mr-2\">🔨</span>\n                  Development Effort\n                </h4>\n                <div\n                  className=\"text-gray-700 dark:text-gray-300 font-medium\"\n                  data-testid=\"development-effort\"\n                >\n                  {details.effort?.development || \"Not specified\"}\n                </div>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\n                  Estimated time to implement and deploy\n                </p>\n              </div>\n\n              {/* Maintenance Requirements */}\n              <div className=\"p-3 bg-gray-100 dark:bg-gray-750 rounded-lg shadow-sm security-card\">\n                <h4 className=\"text-sm font-medium mb-2 flex items-center terminal-text\">\n                  <span className=\"mr-2\">🔄</span>\n                  Maintenance\n                </h4>\n                <div\n                  className=\"text-gray-700 dark:text-gray-300 font-medium\"\n                  data-testid=\"maintenance-level\"\n                >\n                  {details.effort?.maintenance || \"Not specified\"}\n                </div>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\n                  Ongoing maintenance requirements\n                </p>\n              </div>\n\n              {/* Required Expertise */}\n              <div className=\"p-3 bg-gray-100 dark:bg-gray-750 rounded-lg shadow-sm security-card\">\n                <h4 className=\"text-sm font-medium mb-2 flex items-center terminal-text\">\n                  <span className=\"mr-2\">👤</span>\n                  Required Expertise\n                </h4>\n                <div\n                  className=\"text-gray-700 dark:text-gray-300 font-medium\"\n                  data-testid=\"required-expertise\"\n                >\n                  {details.effort?.expertise || \"Not specified\"}\n                </div>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\n                  Team skills needed for implementation\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Component-specific metrics */}\n          {activeTab === \"availability\" && (\n            <div className=\"mt-4 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 p-3 rounded-lg border border-blue-200 dark:border-blue-800\">\n              <h5 className=\"text-xs font-medium mb-2 text-blue-700 dark:text-blue-300 flex items-center\">\n                <span className=\"mr-1.5\">⏱️</span>\n                Availability Metrics\n              </h5>\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                <KeyValuePair\n                  label=\"RTO (Recovery Time Objective)\"\n                  value={details.rto || \"N/A\"}\n                  valueClassName=\"text-blue-700 dark:text-blue-300 font-mono\"\n                />\n                <KeyValuePair\n                  label=\"RPO (Recovery Point Objective)\"\n                  value={details.rpo || \"N/A\"}\n                  valueClassName=\"text-blue-700 dark:text-blue-300 font-mono\"\n                />\n                {details.mttr && (\n                  <KeyValuePair\n                    label=\"MTTR (Mean Time To Recovery)\"\n                    value={details.mttr}\n                    valueClassName=\"text-blue-700 dark:text-blue-300 font-mono\"\n                  />\n                )}\n                {/* Check and use an uptime property from a different source if needed */}\n                {/* The availabilityDetails.uptime doesn't exist on TechnicalImplementationDetails */}\n              </div>\n            </div>\n          )}\n\n          {/* Integrity-specific section */}\n          {activeTab === \"integrity\" && details.validationMethod && (\n            <div className=\"mt-4 bg-green-50 dark:bg-green-900 dark:bg-opacity-20 p-3 rounded-lg border border-green-200 dark:border-green-800\">\n              <h5 className=\"text-xs font-medium mb-2 text-green-700 dark:text-green-300 flex items-center\">\n                <span className=\"mr-1.5\">✓</span>\n                Integrity Validation\n              </h5>\n              <div className=\"grid grid-cols-1 gap-2 text-xs\">\n                <KeyValuePair\n                  label=\"Validation Method\"\n                  value={details.validationMethod}\n                  valueClassName=\"text-green-700 dark:text-green-300 font-mono\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Confidentiality-specific section */}\n          {activeTab === \"confidentiality\" && (\n            <div className=\"mt-4 bg-purple-50 dark:bg-purple-900 dark:bg-opacity-20 p-3 rounded-lg border border-purple-200 dark:border-purple-800\">\n              <h5 className=\"text-xs font-medium mb-2 text-purple-700 dark:text-purple-300 flex items-center\">\n                <span className=\"mr-1.5\">🔒</span>\n                Confidentiality Protection\n              </h5>\n              <div className=\"grid grid-cols-1 gap-2 text-xs\">\n                {/* Replace with appropriate property that exists on the details object */}\n                <KeyValuePair\n                  label=\"Protection Method\"\n                  value={details.validationMethod || \"N/A\"}\n                  valueClassName=\"text-purple-700 dark:text-purple-300 font-mono\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Technical Info Box */}\n          <div className=\"mt-4 p-3 bg-black bg-opacity-30 rounded-md border border-opacity-30 terminal-text-container\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center\">\n                <span className=\"inline-block w-2 h-2 rounded-full bg-red-500 mr-1\"></span>\n                <span className=\"inline-block w-2 h-2 rounded-full bg-yellow-500 mr-1\"></span>\n                <span className=\"inline-block w-2 h-2 rounded-full bg-green-500 mr-1\"></span>\n                <span className=\"ml-2 text-xs opacity-70 font-mono\">\n                  technical_implementation.sh\n                </span>\n              </div>\n              <span className=\"text-xs opacity-70 font-mono\">bash</span>\n            </div>\n            <div className=\"font-mono text-xs text-green-400\">\n              <p className=\"mb-1\">\n                <span className=\"text-blue-400\">$</span> ./{activeTab}_deploy.sh\n                --level={level}\n              </p>\n              <p className=\"mb-1 text-gray-400\">\n                # Running implementation for {level} {activeTab}...\n              </p>\n              <p className=\"mb-1 text-green-400\">✓ Checking prerequisites</p>\n              <p className=\"mb-1 text-green-400\">✓ Loading configuration</p>\n              <p className=\"mb-1 text-green-400\">✓ Validating environment</p>\n              <p className=\"mb-1 text-purple-400\">\n                ► Deploying {level} security controls\n              </p>\n              <p className=\"text-yellow-400 opacity-70\">\n                Status: Ready for implementation\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default TechnicalDetailsWidget;\n","import React from \"react\";\nimport { VALUE_CREATION_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService, {\n  getROIEstimate,\n  getValuePoints,\n} from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport { getSecurityLevelBadgeVariant } from \"../../utils/securityLevelUtils\";\nimport MetricsCard from \"../common/MetricsCard\";\nimport StatusBadge from \"../common/StatusBadge\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props for the ValueCreationWidget component\n */\nexport interface ValueCreationWidgetProps {\n  securityLevel: SecurityLevel;\n  availabilityLevel?: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * ValueCreationWidget displays the business value created by security investments\n * based on the selected security levels\n */\nconst ValueCreationWidget: React.FC<ValueCreationWidgetProps> = ({\n  securityLevel,\n  availabilityLevel = \"None\",\n  integrityLevel = \"None\",\n  confidentialityLevel = \"None\",\n  className = \"\",\n  testId = VALUE_CREATION_TEST_IDS.VALUE_CREATION_WIDGET,\n}) => {\n  // Get ROI data\n  const roiEstimate = getROIEstimate(securityLevel);\n  const roiData = ciaContentService.getROIEstimates(securityLevel);\n\n  // Get value points for the security level\n  const valuePoints = getValuePoints(securityLevel);\n\n  return (\n    <WidgetContainer\n      title=\"Security Value Creation\"\n      icon=\"📈\"\n      className={className}\n      testId={testId}\n    >\n      <div className=\"space-y-6\">\n        {/* Value Summary */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border-l-4 border-blue-500\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-lg font-medium flex items-center\">\n              <span className=\"mr-2\">💰</span>\n              Business Value\n            </h3>\n            <StatusBadge\n              status={getSecurityLevelBadgeVariant(securityLevel)}\n              className=\"text-xs px-3\"\n            >\n              {securityLevel}\n            </StatusBadge>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300 mb-2\">\n            {roiData.description}\n          </p>\n        </div>\n\n        {/* ROI Metrics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <MetricsCard\n            title=\"Return on Investment\"\n            value={roiData.returnRate}\n            icon=\"📊\"\n            testId={`${testId}-roi`}\n            accentColor=\"#9b59b6\"\n            variant=\"purple\"\n          />\n          <MetricsCard\n            title=\"Potential Savings\"\n            value={roiData.potentialSavings ?? \"N/A\"}\n            icon=\"💰\"\n            testId={`${testId}-savings`}\n            accentColor=\"#2ecc71\"\n            variant=\"success\"\n          />\n          <MetricsCard\n            title=\"Break-even Period\"\n            value={roiData.breakEvenPeriod ?? \"N/A\"}\n            icon=\"⏱️\"\n            testId={`${testId}-breakeven`}\n            accentColor=\"#3498db\"\n            variant=\"info\"\n          />\n        </div>\n\n        {/* Value Creation Benefits */}\n        <div className=\"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\n          <h4 className=\"font-medium mb-3 flex items-center\">\n            <span className=\"mr-2\">🎯</span>\n            Key Benefits\n          </h4>\n\n          <ul className=\"space-y-2\">\n            {valuePoints.map((point, index) => (\n              <li\n                key={index}\n                className=\"flex items-start\"\n                data-testid={`${testId}-value-point-${index}`}\n              >\n                <span className=\"text-green-600 dark:text-green-400 mr-2 mt-0.5\">\n                  ✓\n                </span>\n                <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  {point}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Security Investment Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* Business Benefits */}\n          <div className=\"bg-green-50 dark:bg-green-900 dark:bg-opacity-20 p-4 rounded-lg border border-green-200 dark:border-green-800\">\n            <h4 className=\"text-md font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">📊</span>\n              Business Benefits\n            </h4>\n            <ul className=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-300 space-y-2\">\n              <li>Reduced risk of business disruption</li>\n              <li>Enhanced customer trust and reputation</li>\n              <li>Improved compliance posture</li>\n              <li>Increased business resilience</li>\n            </ul>\n          </div>\n\n          {/* Technical Benefits */}\n          <div className=\"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\n            <h4 className=\"text-md font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">⚙️</span>\n              Technical Benefits\n            </h4>\n            <ul className=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-300 space-y-2\">\n              <li>Improved system stability and reliability</li>\n              <li>Reduced incident response time</li>\n              <li>Enhanced data protection capabilities</li>\n              <li>More efficient security operations</li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Security Maturity */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm\">\n          <h4 className=\"text-md font-medium mb-3\">Security Maturity Impact</h4>\n\n          <div className=\"space-y-3\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  Current Security Posture\n                </span>\n                <span className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\n                  {securityLevel}\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 mb-2\">\n                {securityLevel === \"None\" && (\n                  <div\n                    className=\"bg-red-600 h-2.5 rounded-full\"\n                    style={{ width: \"5%\" }}\n                  ></div>\n                )}\n                {securityLevel === \"Low\" && (\n                  <div\n                    className=\"bg-yellow-500 h-2.5 rounded-full\"\n                    style={{ width: \"25%\" }}\n                  ></div>\n                )}\n                {securityLevel === \"Moderate\" && (\n                  <div\n                    className=\"bg-blue-500 h-2.5 rounded-full\"\n                    style={{ width: \"50%\" }}\n                  ></div>\n                )}\n                {securityLevel === \"High\" && (\n                  <div\n                    className=\"bg-green-600 h-2.5 rounded-full\"\n                    style={{ width: \"75%\" }}\n                  ></div>\n                )}\n                {securityLevel === \"Very High\" && (\n                  <div\n                    className=\"bg-purple-600 h-2.5 rounded-full\"\n                    style={{ width: \"95%\" }}\n                  ></div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n            Increasing security levels provides additional business value\n            through risk reduction and operational improvements.\n          </p>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default ValueCreationWidget;\n","import React, { ReactNode } from \"react\";\nimport AvailabilityImpactWidget from \"../components/widgets/AvailabilityImpactWidget\";\nimport BusinessImpactAnalysisWidget from \"../components/widgets/BusinessImpactAnalysisWidget\";\nimport ComplianceStatusWidget from \"../components/widgets/ComplianceStatusWidget\";\nimport ConfidentialityImpactWidget from \"../components/widgets/ConfidentialityImpactWidget\";\nimport { SECURITY_LEVELS } from \"../constants/appConstants\";\nimport { WIDGET_ICONS, WIDGET_TITLES } from \"../constants/coreConstants\";\n// Remove unused imports\nimport { WidgetContainer } from \"../components/common\";\nimport CIAImpactSummaryWidget from \"../components/widgets/CIAImpactSummaryWidget\";\nimport IntegrityImpactWidget from \"../components/widgets/IntegrityImpactWidget\";\nimport SecurityResourcesWidget from \"../components/widgets/SecurityResourcesWidget\";\nimport SecuritySummaryWidget from \"../components/widgets/SecuritySummaryWidget\";\nimport SecurityVisualizationWidget from \"../components/widgets/SecurityVisualizationWidget\";\nimport TechnicalDetailsWidget from \"../components/widgets/TechnicalDetailsWidget\";\nimport ValueCreationWidget from \"../components/widgets/ValueCreationWidget\";\nimport { handleWidgetError } from \"./widgetHelpers\";\n\n// Import all widget prop types\nimport {\n  AvailabilityImpactWidgetProps,\n  BusinessImpactAnalysisWidgetProps,\n  ComplianceStatusWidgetProps,\n  ConfidentialityImpactWidgetProps,\n  IntegrityImpactWidgetProps,\n  SecurityResourcesWidgetProps,\n  // Remove unused import\n  SecuritySummaryWidgetProps,\n  TechnicalDetailsWidgetProps,\n  ValueCreationWidgetProps,\n  WidgetBaseProps,\n} from \"../types/widgets\";\n\n// Import SecurityLevel type\nimport { SecurityLevel } from \"../types/cia\";\n// Import WidgetSize type for proper size handling\nimport { WidgetSize } from \"../types/widget\";\n\n// Widget component type without constraint\ntype WidgetComponentType<T> = React.ComponentType<T>;\n\n// Standardized interface for CIAImpactProps\ninterface CIAImpactSummaryWidgetProps extends WidgetBaseProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n}\n\n// Add widget props interface\ninterface SecurityVisualizationWidgetProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n// Define a type for widget size options to match both string enum and WidgetSize interface\nexport type WidgetSizeOption = \"small\" | \"medium\" | \"large\" | \"full\";\n\n// Helper function to convert string size to WidgetSize object\nconst convertSizeToWidgetSize = (\n  size?: WidgetSizeOption\n): WidgetSize | undefined => {\n  if (!size) return undefined;\n\n  // Map string sizes to appropriate width/height dimensions\n  switch (size) {\n    case \"small\":\n      return { width: 1, height: 1 };\n    case \"medium\":\n      return { width: 2, height: 1 };\n    case \"large\":\n      return { width: 2, height: 2 };\n    case \"full\":\n      return { width: 4, height: 2 };\n    default:\n      return { width: 2, height: 1 }; // Default to medium\n  }\n};\n\n// Modified WidgetDefinition interface to make generic type constraint optional\nexport interface WidgetDefinition<T> {\n  id: string;\n  title: string;\n  component: WidgetComponentType<T>;\n  defaultProps?: Partial<T>;\n  icon?: ReactNode;\n  size?: WidgetSizeOption;\n  order?: number;\n  description?: string;\n  position?: number;\n}\n\n// Class to manage available widgets and their configurations\nclass WidgetRegistry {\n  private widgets: Map<string, WidgetDefinition<any>> = new Map();\n\n  // Register a widget with the registry\n  register<T>(definition: WidgetDefinition<T>): void {\n    // Apply default values for missing properties\n    const finalDefinition = {\n      ...definition,\n      size: definition.size || \"medium\",\n      order: definition.order || 999,\n    };\n\n    this.widgets.set(finalDefinition.id, finalDefinition);\n  }\n\n  // Get a widget definition by ID\n  get<T>(id: string): WidgetDefinition<T> | undefined {\n    return this.widgets.get(id) as WidgetDefinition<T> | undefined;\n  }\n\n  // Get all registered widgets as an array\n  getAll(): WidgetDefinition<any>[] {\n    return Array.from(this.widgets.values()).sort(\n      (a, b) => a.order! - b.order!\n    );\n  }\n\n  // Render a single widget by ID with optional props\n  renderWidget<T>(id: string, props: Partial<T> = {}): ReactNode | null {\n    const widget = this.widgets.get(id);\n    if (!widget) return null;\n\n    try {\n      // Merge default props with provided props\n      const finalProps = {\n        ...widget.defaultProps,\n        ...props,\n      };\n\n      return (\n        <WidgetContainer\n          key={widget.id}\n          title={widget.title}\n          icon={widget.icon}\n          size={convertSizeToWidgetSize(widget.size)}\n          testId={`widget-${widget.id}`}\n        >\n          <widget.component {...finalProps} />\n        </WidgetContainer>\n      );\n    } catch (error) {\n      // Fix error handling by creating an Error object if it's not already one\n      const errorObj =\n        error instanceof Error ? error : new Error(String(error));\n      // Swap the parameter order - Error object first, then id\n      return handleWidgetError(errorObj, id);\n    }\n  }\n\n  // Render multiple widgets filtered by a predicate function\n  renderWidgets(\n    filter?: (widget: WidgetDefinition<any>) => boolean,\n    props: Record<string, any> = {}\n  ): ReactNode[] {\n    const widgetsToRender = Array.from(this.widgets.values())\n      .filter(filter || (() => true))\n      .sort((a, b) => a.order! - b.order!);\n\n    return widgetsToRender.map((widget) => {\n      const widgetProps = props[widget.id] || {};\n      const combinedProps = { ...widget.defaultProps, ...widgetProps };\n\n      return (\n        <WidgetContainer\n          key={widget.id}\n          title={widget.title}\n          icon={widget.icon}\n          size={convertSizeToWidgetSize(widget.size)}\n          testId={`widget-${widget.id}`}\n        >\n          <widget.component {...combinedProps} />\n        </WidgetContainer>\n      );\n    });\n  }\n}\n\n// Create and export a singleton instance\nexport const widgetRegistry = new WidgetRegistry();\n\n// Pre-register core widgets\nwidgetRegistry.register<SecuritySummaryWidgetProps>({\n  id: \"security-summary\",\n  title: WIDGET_TITLES.SECURITY_SUMMARY,\n  component: SecuritySummaryWidget,\n  icon: WIDGET_ICONS.SECURITY_SUMMARY,\n  size: \"medium\",\n  order: 10,\n});\n\nwidgetRegistry.register<ComplianceStatusWidgetProps>({\n  id: \"compliance-status\",\n  title: WIDGET_TITLES.COMPLIANCE_STATUS,\n  // Fix the type compatibility issue with type assertion\n  component:\n    ComplianceStatusWidget as unknown as WidgetComponentType<ComplianceStatusWidgetProps>,\n  icon: WIDGET_ICONS.COMPLIANCE_STATUS,\n  size: \"medium\",\n  order: 20,\n  defaultProps: {\n    securityLevel: SECURITY_LEVELS.NONE,\n  },\n});\n\nwidgetRegistry.register<ValueCreationWidgetProps>({\n  id: \"value-creation\",\n  title: WIDGET_TITLES.VALUE_CREATION,\n  component:\n    ValueCreationWidget as WidgetComponentType<ValueCreationWidgetProps>,\n  icon: WIDGET_ICONS.VALUE_CREATION,\n  size: \"medium\",\n  order: 25,\n  description: \"Business value created by security investments\",\n  defaultProps: {\n    securityLevel: SECURITY_LEVELS.NONE,\n  },\n});\n\n// Register integrity impact widget with proper type assertion\nwidgetRegistry.register<IntegrityImpactWidgetProps>({\n  id: \"integrity-impact\",\n  title: WIDGET_TITLES.INTEGRITY_IMPACT,\n  component: IntegrityImpactWidget,\n  icon: WIDGET_ICONS.INTEGRITY_IMPACT,\n  size: \"medium\",\n  order: 30,\n  description: \"Impact and recommendations for data integrity\",\n  defaultProps: {\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n});\n\n// Register confidentiality impact widget with proper type assertion\nwidgetRegistry.register<ConfidentialityImpactWidgetProps>({\n  id: \"confidentiality-impact\",\n  title: WIDGET_TITLES.CONFIDENTIALITY_IMPACT,\n  component: ConfidentialityImpactWidget,\n  icon: WIDGET_ICONS.CONFIDENTIALITY_IMPACT,\n  size: \"medium\",\n  order: 35,\n  description: \"Impact and recommendations for data confidentiality\",\n  defaultProps: {\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n});\n\nwidgetRegistry.register<AvailabilityImpactWidgetProps>({\n  id: \"availability-impact\",\n  title: WIDGET_TITLES.AVAILABILITY_IMPACT,\n  // Fix the type compatibility issue with type assertion\n  component:\n    AvailabilityImpactWidget as unknown as WidgetComponentType<AvailabilityImpactWidgetProps>,\n  icon: WIDGET_ICONS.AVAILABILITY_IMPACT,\n  size: \"medium\",\n  order: 40,\n  description: \"Impact and recommendations for system availability\",\n  defaultProps: {\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    options: {},\n  },\n});\n\nwidgetRegistry.register<SecurityResourcesWidgetProps>({\n  id: \"security-resources\",\n  title: WIDGET_TITLES.SECURITY_RESOURCES,\n  // Fix the type compatibility issue with type assertion\n  component:\n    SecurityResourcesWidget as unknown as WidgetComponentType<SecurityResourcesWidgetProps>,\n  icon: WIDGET_ICONS.SECURITY_RESOURCES,\n  size: \"medium\",\n  order: 45,\n  description: \"Security resources and documentation\",\n  defaultProps: {\n    securityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n});\n\nwidgetRegistry.register<TechnicalDetailsWidgetProps>({\n  id: \"technical-details\",\n  title: WIDGET_TITLES.TECHNICAL_IMPLEMENTATION,\n  component: TechnicalDetailsWidget,\n  icon: WIDGET_ICONS.TECHNICAL_IMPLEMENTATION,\n  size: \"large\",\n  order: 50,\n  description: \"Technical implementation details for security controls\",\n  defaultProps: {\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n});\n\nwidgetRegistry.register<BusinessImpactAnalysisWidgetProps>({\n  id: \"business-impact\",\n  title: WIDGET_TITLES.BUSINESS_IMPACT,\n  component: BusinessImpactAnalysisWidget,\n  icon: WIDGET_ICONS.BUSINESS_IMPACT,\n  size: \"large\",\n  order: 55,\n  description: \"Business impact analysis for security choices\",\n  defaultProps: {\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n});\n\n// For CIAImpactSummaryWidget component registration\nwidgetRegistry.register<CIAImpactSummaryWidgetProps>({\n  id: \"cia-impact-summary\",\n  title: \"CIA Impact Summary\",\n  description: \"Shows a consolidated overview of CIA security impacts\",\n  component: CIAImpactSummaryWidget,\n  defaultProps: {\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n  size: \"small\",\n  order: 12,\n  icon: \"🛡️\",\n  position: 0,\n});\n\n// Register security visualization widget\nwidgetRegistry.register<SecurityVisualizationWidgetProps>({\n  id: \"security-visualization\",\n  title: WIDGET_TITLES.SECURITY_VISUALIZATION,\n  component: SecurityVisualizationWidget,\n  icon: WIDGET_ICONS.SECURITY_VISUALIZATION,\n  size: \"medium\",\n  order: 15,\n  description: \"Security profile visualization and risk assessment\",\n  defaultProps: {\n    availabilityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    integrityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n    confidentialityLevel: SECURITY_LEVELS.NONE as SecurityLevel,\n  },\n});\n\nexport default widgetRegistry;\n","import { ReactNode } from \"react\";\nimport { SECURITY_LEVELS } from \"../constants/appConstants\";\nimport { WIDGET_ICONS, WIDGET_TITLES } from \"../constants/coreConstants\";\nimport { SecurityLevel } from \"../types/cia\";\nimport { WidgetConfig, WidgetSize, WidgetSizePreset } from \"../types/widget\";\nimport { getSecurityLevelValue } from \"./securityLevelUtils\";\n\n// Define WidgetType for local use since it's not exported from types/widgets\nexport enum WidgetType {\n  SECURITY_LEVEL = \"SECURITY_LEVEL\",\n  SECURITY_SUMMARY = \"SECURITY_SUMMARY\",\n  SECURITY_VISUALIZATION = \"SECURITY_VISUALIZATION\",\n  COMPLIANCE_STATUS = \"COMPLIANCE_STATUS\",\n  VALUE_CREATION = \"VALUE_CREATION\",\n  COST_ESTIMATION = \"COST_ESTIMATION\",\n  BUSINESS_IMPACT = \"BUSINESS_IMPACT\",\n  TECHNICAL_DETAILS = \"TECHNICAL_DETAILS\",\n  SECURITY_RESOURCES = \"SECURITY_RESOURCES\",\n  AVAILABILITY_IMPACT = \"AVAILABILITY_IMPACT\",\n  INTEGRITY_IMPACT = \"INTEGRITY_IMPACT\",\n  CONFIDENTIALITY_IMPACT = \"CONFIDENTIALITY_IMPACT\",\n}\n\n// Define constants locally since they're not exported from coreConstants\nexport const WIDGET_DESCRIPTIONS: Record<string, string> = {\n  [WidgetType.SECURITY_LEVEL]: \"Security level selection\",\n  [WidgetType.SECURITY_SUMMARY]: \"Security level summary\",\n  [WidgetType.COMPLIANCE_STATUS]: \"Compliance status information\",\n  [WidgetType.VALUE_CREATION]: \"Value creation metrics\",\n  [WidgetType.COST_ESTIMATION]: \"Cost estimation details\",\n  [WidgetType.BUSINESS_IMPACT]: \"Business impact analysis\",\n  [WidgetType.TECHNICAL_DETAILS]: \"Technical implementation details\",\n  [WidgetType.SECURITY_RESOURCES]: \"Security resources and references\",\n  [WidgetType.AVAILABILITY_IMPACT]: \"Availability impact analysis\",\n  [WidgetType.INTEGRITY_IMPACT]: \"Integrity impact analysis\",\n  [WidgetType.CONFIDENTIALITY_IMPACT]: \"Confidentiality impact analysis\",\n  [WidgetType.SECURITY_VISUALIZATION]: \"Security visualization\",\n};\n\nexport const WIDGET_CONTENT: Record<string, string> = {\n  [WidgetType.SECURITY_LEVEL]: \"Configure security levels\",\n  [WidgetType.SECURITY_SUMMARY]: \"Security level summary information\",\n  [WidgetType.COMPLIANCE_STATUS]: \"Compliance status details\",\n  [WidgetType.VALUE_CREATION]: \"Value creation metrics and analysis\",\n  [WidgetType.COST_ESTIMATION]: \"Cost estimation details and ROI\",\n  [WidgetType.BUSINESS_IMPACT]: \"Business impact analysis details\",\n  [WidgetType.TECHNICAL_DETAILS]: \"Technical implementation details\",\n  [WidgetType.SECURITY_RESOURCES]: \"Security resources and references\",\n};\n\n/**\n * Get the icon for a widget type\n * @param type The widget type\n * @returns The icon or a default value\n */\nexport const getWidgetIcon = (type: WidgetType | string): string =>\n  WIDGET_ICONS[type as keyof typeof WIDGET_ICONS] || \"help_outline\";\n\n/**\n * Get the title for a widget type\n * @param type The widget type\n * @returns The title or a default value\n */\nexport const getWidgetTitle = (type: WidgetType | string): string =>\n  WIDGET_TITLES[type as keyof typeof WIDGET_TITLES] || type;\n\n/**\n * Get the description for a widget type\n * @param type The widget type\n * @returns The description or a default value\n */\nexport const getWidgetDescription = (type: WidgetType | string): string =>\n  WIDGET_DESCRIPTIONS[type as string] || \"No description available\";\n\n/**\n * Get the content for a widget type\n * @param type The widget type\n * @returns The content or an empty string\n */\nexport const getWidgetContent = (type: WidgetType | string): string =>\n  WIDGET_CONTENT[type as string] || \"\";\n\n/**\n * Create a widget configuration object\n * @param config Widget configuration options\n * @returns Complete widget configuration\n */\nexport const createWidgetConfig = (\n  config: Partial<WidgetConfig> & { type: string }\n): WidgetConfig => {\n  // Use MEDIUM instead of DEFAULT\n  const size = config.size || WidgetSizePreset.MEDIUM;\n  // Generate a unique ID if not provided\n  const id =\n    config.id || `${config.type}-${Math.random().toString(36).substring(2, 9)}`;\n\n  // Get dimensions for the widget\n  const dimensions = getWidgetSize({ ...config, size });\n\n  return {\n    id,\n    type: config.type,\n    title: config.title || getWidgetTitle(config.type),\n    description: config.description || getWidgetDescription(config.type),\n    icon: config.icon || getWidgetIcon(config.type),\n    priority: config.priority || 0,\n    visible: config.visible !== undefined ? config.visible : true,\n    size,\n    width: dimensions.width,\n    height: dimensions.height,\n    order: config.order || 999,\n    requiredSecurityLevels: config.requiredSecurityLevels,\n    minSecurityLevel: config.minSecurityLevel,\n    maxSecurityLevel: config.maxSecurityLevel,\n  };\n};\n\n/**\n * Filter widgets based on visibility\n * @param widgets Array of widget configurations\n * @returns Filtered array of visible widgets\n */\nexport const filterWidgets = (widgets: WidgetConfig[]): WidgetConfig[] =>\n  widgets.filter((w) => w.visible);\n\n/**\n * Sort widgets by priority\n * @param widgets Array of widget configurations\n * @returns Sorted array of widgets\n */\nexport const sortWidgetsByPriority = (\n  widgets: WidgetConfig[]\n): WidgetConfig[] =>\n  [...widgets].sort((a, b) => (a.priority || 0) - (b.priority || 0));\n\n/**\n * Check if a widget should be visible based on security level\n * @param widget Widget configuration\n * @param securityLevel Current security level\n * @returns True if the widget should be visible\n */\nexport const evaluateWidgetVisibility = (\n  widget: WidgetConfig,\n  securityLevel: SecurityLevel\n): boolean => {\n  if (\n    widget.minSecurityLevel === undefined &&\n    widget.maxSecurityLevel === undefined\n  )\n    return true;\n\n  // Convert security level to number using the utility function\n  const level = getSecurityLevelValue(securityLevel);\n\n  const min =\n    typeof widget.minSecurityLevel === \"string\"\n      ? parseInt(widget.minSecurityLevel, 10) || 0\n      : (widget.minSecurityLevel as number) || 0;\n\n  const max =\n    typeof widget.maxSecurityLevel === \"string\"\n      ? parseInt(widget.maxSecurityLevel, 10) || Infinity\n      : (widget.maxSecurityLevel as number) || Infinity;\n\n  return level >= min && level <= max;\n};\n\n/**\n * Format security level string for display\n * @param level Security level string that might be in any case format\n * @returns Properly formatted security level\n */\nexport function formatSecurityLevel(level?: string): string {\n  if (!level) return \"None\";\n\n  // Check if the level matches any valid security level (case insensitive)\n  const normalizedLevel = level.toLowerCase();\n  for (const validLevel of Object.values(SECURITY_LEVELS)) {\n    if (normalizedLevel === validLevel.toLowerCase()) {\n      // Return with proper case formatting\n      return validLevel;\n    }\n  }\n\n  // Return the original value if no match found\n  return level;\n}\n\n/**\n * Get CSS classes for a security level\n * @param level Security level\n * @returns Object with bg and text class names\n */\nexport function getSecurityLevelColors(level: SecurityLevel) {\n  // Convert level to lowercase for case-insensitive matching\n  const normalizedLevel = level.toLowerCase();\n\n  // Default styles\n  let bg = \"bg-gray-100 dark:bg-gray-700\";\n  let text = \"text-gray-800 dark:text-gray-200\";\n\n  // Map levels to CSS classes\n  switch (normalizedLevel) {\n    case \"none\":\n      bg = \"bg-red-50 dark:bg-red-900 dark:bg-opacity-20\";\n      text = \"text-red-800 dark:text-red-300\";\n      break;\n    case \"low\":\n      bg = \"bg-amber-50 dark:bg-amber-900 dark:bg-opacity-20\";\n      text = \"text-amber-800 dark:text-amber-300\";\n      break;\n    case \"moderate\":\n      bg = \"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20\";\n      text = \"text-blue-800 dark:text-blue-300\";\n      break;\n    case \"high\":\n      bg = \"bg-green-50 dark:bg-green-900 dark:bg-opacity-20\";\n      text = \"text-green-800 dark:text-green-300\";\n      break;\n    case \"very high\":\n      bg = \"bg-purple-50 dark:bg-purple-900 dark:bg-opacity-20\";\n      text = \"text-purple-800 dark:text-purple-300\";\n      break;\n  }\n\n  return { bg, text };\n}\n\n/**\n * Convert string to SecurityLevel type\n * @param level String to convert to SecurityLevel\n * @returns Valid SecurityLevel value\n */\nexport function asSecurityLevel(level?: string): SecurityLevel {\n  // Normalize the level first\n  const formattedLevel = formatSecurityLevel(level);\n\n  // Cast to SecurityLevel\n  return formattedLevel as SecurityLevel;\n}\n\n/**\n * Get widget dimensions based on size preset\n * @param widget Widget configuration\n * @returns Width and height values for the widget\n */\nexport function getWidgetSize(widget: Partial<WidgetConfig>): WidgetSize {\n  // Use explicit width and height if provided\n  if (widget.width !== undefined && widget.height !== undefined) {\n    return { width: widget.width, height: widget.height };\n  }\n\n  // Get dimensions based on size preset\n  switch (widget.size) {\n    case WidgetSizePreset.SMALL:\n      return { width: 1, height: 1 };\n    case WidgetSizePreset.LARGE:\n      return { width: 2, height: 2 };\n    case \"extraLarge\":\n    case WidgetSizePreset.EXTRA_LARGE:\n      return { width: 4, height: 2 };\n    case \"fullWidth\":\n    case WidgetSizePreset.FULL_WIDTH:\n      return { width: 4, height: 1 };\n    case WidgetSizePreset.MEDIUM:\n    default:\n      return { width: 2, height: 1 };\n  }\n}\n\n/**\n * Check if all required security levels are present in the given security levels object\n * @param securityLevels Object containing security levels\n * @param requiredLevels Array of required security level keys\n * @returns True if all required levels are present, false otherwise\n */\nexport function checkRequiredSecurityLevels(\n  securityLevels: Record<string, unknown>,\n  requiredLevels?: string[]\n): boolean {\n  if (!requiredLevels || requiredLevels.length === 0) {\n    return true;\n  }\n\n  return requiredLevels.every((level) => level in securityLevels);\n}\n\n/**\n * Determine if a widget should be shown based on configuration and security levels\n * @param widgetConfig Widget configuration\n * @param securityLevels Current security levels\n * @returns True if widget should be visible, false otherwise\n */\nexport function shouldShowWidget(\n  widgetConfig: WidgetConfig,\n  securityLevels: Record<string, unknown>\n): boolean {\n  // Early return if widget is explicitly hidden\n  if (widgetConfig.visible === false) {\n    return false;\n  }\n\n  // Check required security levels\n  if (widgetConfig.requiredSecurityLevels) {\n    return checkRequiredSecurityLevels(\n      securityLevels,\n      widgetConfig.requiredSecurityLevels\n    );\n  }\n\n  return true;\n}\n\n/**\n * Render a loading indicator for widgets\n * @param testId Test ID for the loading indicator\n * @returns Loading indicator JSX element\n */\nexport function widgetLoadingIndicator(testId: string) {\n  return (\n    <div\n      data-testid={testId}\n      className=\"flex items-center justify-center p-4 h-full w-full\"\n    >\n      <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n    </div>\n  );\n}\n\n/**\n * Render an error message for widgets\n * @param error Error object\n * @param testId Test ID for the error message\n * @returns Error message JSX element or null if no error\n */\nexport function handleWidgetError(error: Error | null, testId: string) {\n  if (!error) return null;\n\n  return (\n    <div\n      data-testid={testId}\n      className=\"bg-red-50 dark:bg-red-900 dark:bg-opacity-20 border-l-4 border-red-500 p-4\"\n    >\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <svg\n            className=\"h-5 w-5 text-red-500\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </div>\n        <div className=\"ml-3\">\n          <h3\n            className=\"text-sm font-medium text-red-800 dark:text-red-200\"\n            role=\"alert\"\n          >\n            Widget Error\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n            <p>{error.message}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Render empty state message or children if not empty\n * @param isEmpty Whether the widget is empty\n * @param testId Test ID for the empty state\n * @param children Children to render if not empty\n * @returns Empty state or children\n */\nexport function widgetEmptyState(\n  isEmpty: boolean,\n  testId: string,\n  children?: ReactNode\n) {\n  if (isEmpty) {\n    return (\n      <div\n        data-testid={testId}\n        className=\"flex items-center justify-center p-4 h-full w-full text-gray-500 dark:text-gray-400 text-center\"\n      >\n        <div>\n          <svg\n            className=\"h-12 w-12 mx-auto mb-3 opacity-50\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth={1.5}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <p>No data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return children || null; // Return children if provided, otherwise return null\n}\n\n/**\n * Get the test ID for a widget element\n * @param widgetId The widget ID\n * @param elementId The element ID\n * @returns The test ID string\n */\nexport function getTestId(widgetId: string, elementId: string): string {\n  return `${widgetId}-${elementId}`;\n}\n","/**\n * Core CIA types used throughout the application\n */\n\n/**\n * Security level definitions - None, Low, Moderate, High, Very High\n */\nexport type SecurityLevel = \"None\" | \"Low\" | \"Moderate\" | \"High\" | \"Very High\";\n\n/**\n * Base interface for CIA impacts\n */\nexport interface BaseImpact {\n  level: SecurityLevel;\n  description: string;\n}\n\n/**\n * Impact associated with the availability of the system\n */\nexport interface AvailabilityImpact extends BaseImpact {\n  uptime: string;\n  recoveryTime: string;\n}\n\n/**\n * Impact associated with the integrity of the system\n */\nexport interface IntegrityImpact extends BaseImpact {\n  dataAccuracy: string;\n  verificationSteps: string;\n}\n\n/**\n * Impact associated with the confidentiality of the system\n */\nexport interface ConfidentialityImpact extends BaseImpact {\n  dataClassification: string;\n  accessControls: string;\n}\n\n/**\n * Complete CIA impact model\n */\nexport interface CIAImpact {\n  availability: AvailabilityImpact;\n  integrity: IntegrityImpact;\n  confidentiality: ConfidentialityImpact;\n}\n\n/**\n * Available options for each CIA pillar\n */\nexport interface CIAOptions {\n  availability: SecurityLevel[];\n  integrity: SecurityLevel[];\n  confidentiality: SecurityLevel[];\n}\n\n/**\n * Selected security levels for each CIA pillar\n */\nexport interface SecurityLevels {\n  availability: SecurityLevel;\n  integrity: SecurityLevel;\n  confidentiality: SecurityLevel;\n}\n\n/**\n * Business impact analysis interface for tracking security implications\n */\nexport interface BusinessImpactDetail {\n  description?: string;\n  riskLevel?: string;\n  annualRevenueLoss?: string;\n  meanTimeToRecover?: string;\n  complianceViolations?: string[];\n}\n\n/**\n * Detailed CIA information used across the application\n * Contains rich information about impacts, technical details, and recommendations\n */\nexport interface CIADetails {\n  description?: string;\n  impact?: string;\n  technical?: string;\n  businessImpact?: string;\n  uptime?: string;\n  mttr?: string;\n  rto?: string;\n  rpo?: string;\n  recommendations?: string[];\n  validationMethod?: string;\n  technicalControls?: string[];\n  technicalMeasures?: string[];\n  complianceImplications?: string;\n  riskLevel?: string;\n  capex?: number;\n  opex?: number;\n  bg?: string;\n  text?: string;\n  businessImpactDetails?: {\n    financialImpact?: { description?: string };\n    operationalImpact?: { description?: string };\n    reputationalImpact?: { description?: string };\n    regulatory?: { description?: string };\n  };\n}\n\n/**\n * CIA component type definition\n */\nexport type CIAComponentType = \"availability\" | \"integrity\" | \"confidentiality\";\n\n/**\n * Format security level for display\n * @param level The security level to format\n * @returns The formatted security level string\n */\nexport function formatSecurityLevel(\n  level: SecurityLevel | string | undefined\n): string {\n  if (!level) return \"Unknown\";\n\n  // Already a valid security level\n  if ([\"None\", \"Low\", \"Moderate\", \"High\", \"Very High\"].includes(level)) {\n    return level;\n  }\n\n  // Try to normalize\n  const normalized =\n    level.charAt(0).toUpperCase() + level.slice(1).toLowerCase();\n  if ([\"None\", \"Low\", \"Moderate\", \"High\"].includes(normalized)) {\n    return normalized;\n  } else if (normalized.toLowerCase() === \"very high\") {\n    return \"Very High\";\n  }\n\n  return \"Unknown\";\n}\n\n/**\n * Gets a numerical value for a security level for calculations\n * @param level The security level string\n * @returns A number from 0 (None) to 4 (Very High)\n */\nexport function getSecurityLevelValue(level: SecurityLevel | string): number {\n  switch (formatSecurityLevel(level)) {\n    case \"Very High\":\n      return 4;\n    case \"High\":\n      return 3;\n    case \"Moderate\":\n      return 2;\n    case \"Low\":\n      return 1;\n    case \"None\":\n    default:\n      return 0;\n  }\n}\n\n/**\n * Get a security level from a numeric value\n * @param value The numeric value (0-4)\n * @returns The corresponding security level\n */\nexport function getSecurityLevelFromValue(value: number): SecurityLevel {\n  const levels: SecurityLevel[] = [\n    \"None\",\n    \"Low\",\n    \"Moderate\",\n    \"High\",\n    \"Very High\",\n  ];\n\n  if (value < 0 || value >= levels.length) {\n    return \"None\"; // Default to \"None\" for out-of-range values\n  }\n\n  return levels[value] as SecurityLevel; // Add type assertion for TypeScript\n}\n\n/**\n * Calculate the overall security level based on CIA components\n * @param availabilityLevel The availability security level\n * @param integrityLevel The integrity security level\n * @param confidentialityLevel The confidentiality security level\n * @returns The calculated overall security level\n */\nexport function calculateOverallSecurityLevel(\n  availabilityLevel: SecurityLevel,\n  integrityLevel: SecurityLevel,\n  confidentialityLevel: SecurityLevel\n): SecurityLevel {\n  const levels: SecurityLevel[] = [\n    \"None\",\n    \"Low\",\n    \"Moderate\",\n    \"High\",\n    \"Very High\",\n  ];\n\n  const availabilityIndex = levels.indexOf(availabilityLevel);\n  const integrityIndex = levels.indexOf(integrityLevel);\n  const confidentialityIndex = levels.indexOf(confidentialityLevel);\n\n  const avgIndex = Math.round(\n    (availabilityIndex + integrityIndex + confidentialityIndex) / 3\n  );\n\n  return levels[avgIndex];\n}\n\nimport { getRiskLevelFromSecurityLevel } from \"../constants/riskConstants\";\n\n/**\n * Calculate the overall risk level based on security levels\n */\nexport function calculateRiskLevel(\n  availabilityLevel: SecurityLevel,\n  integrityLevel: SecurityLevel,\n  confidentialityLevel: SecurityLevel\n): string {\n  const overallLevel = calculateOverallSecurityLevel(\n    availabilityLevel,\n    integrityLevel,\n    confidentialityLevel\n  );\n\n  // Use the getRiskLevelFromSecurityLevel function to ensure consistent values\n  return getRiskLevelFromSecurityLevel(overallLevel);\n}\n","import React, { ReactNode } from \"react\";\nimport { WIDGET_ICONS } from \"../../constants/appConstants\";\nimport { APP_TEST_IDS, createDynamicTestId } from \"../../constants/testIds\";\nimport {\n  availabilityOptions,\n  confidentialityOptions,\n  integrityOptions,\n} from \"../../hooks/useCIAOptions\";\nimport { gridClasses } from \"../../styles/gridStyles\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport widgetRegistry from \"../../utils/widgetRegistry\";\nimport WidgetHeader from \"../common/WidgetHeader\";\n// Keep imports for directly included widgets\nimport TechnicalDetailsWidget from \"../widgets/TechnicalDetailsWidget\";\n\n// Main Dashboard component props\ninterface DashboardProps {\n  children?: ReactNode;\n  useRegistry?: boolean;\n  availability?: string;\n  integrity?: string;\n  confidentiality?: string;\n  columnsSmall?: number;\n  columnsMedium?: number;\n  columnsLarge?: number;\n  className?: string;\n  compact?: boolean;\n  showBorders?: boolean;\n}\n\nconst Dashboard: React.FC<DashboardProps> = ({\n  children,\n  useRegistry = false,\n  availability,\n  integrity,\n  confidentiality,\n  columnsSmall = 1,\n  columnsMedium = 2,\n  columnsLarge = 3,\n  className = \"\",\n  compact = false,\n  showBorders = true,\n}) => {\n  // Prepare props for business impact widgets\n  const impactWidgetProps = {\n    \"availability-impact\": {\n      level: availability,\n      options: availabilityOptions,\n    },\n    \"integrity-impact\": {\n      level: integrity,\n      options: integrityOptions,\n    },\n    \"confidentiality-impact\": {\n      level: confidentiality,\n      options: confidentialityOptions,\n    },\n  };\n\n  // Common props for security widgets\n  const securityProps = {\n    securityLevel: calculateOverallLevel(\n      availability,\n      integrity,\n      confidentiality\n    ),\n    availabilityLevel: availability,\n    integrityLevel: integrity,\n    confidentialityLevel: confidentiality,\n  };\n\n  // Props for each registered widget\n  const widgetProps = {\n    \"security-summary\": securityProps,\n    \"compliance-status\": {\n      securityLevels: {\n        availabilityLevel: availability,\n        integrityLevel: integrity,\n        confidentialityLevel: confidentiality,\n      },\n    },\n    \"value-creation\": {\n      securityLevel: securityProps.securityLevel,\n    },\n    \"cost-estimation\": calculateCostProps(\n      availability,\n      integrity,\n      confidentiality\n    ),\n    ...impactWidgetProps,\n  };\n\n  return (\n    <div\n      className={`dashboard-grid ${gridClasses} ${className}`}\n      data-testid={APP_TEST_IDS.DASHBOARD_GRID}\n    >\n      {useRegistry\n        ? // Make sure this correctly calls renderWidgets from the widget registry\n          widgetRegistry.renderWidgets(undefined, widgetProps)\n        : // Otherwise render children directly\n          React.Children.map(children, (child) => {\n            if (!React.isValidElement(child)) return null;\n            return child;\n          })}\n\n      {/* Only include TechnicalDetailsWidget when not using registry and props are available */}\n      {!useRegistry && availability && integrity && confidentiality && (\n        <TechnicalDetailsWidget\n          availabilityLevel={availability}\n          integrityLevel={integrity}\n          confidentialityLevel={confidentiality}\n        />\n      )}\n    </div>\n  );\n};\n\n// Helper function to calculate overall security level\nfunction calculateOverallLevel(\n  availability?: string,\n  integrity?: string,\n  confidentiality?: string\n): string {\n  const levels = [\"None\", \"Low\", \"Moderate\", \"High\", \"Very High\"];\n  const availabilityIndex = levels.indexOf(availability || \"None\");\n  const integrityIndex = levels.indexOf(integrity || \"None\");\n  const confidentialityIndex = levels.indexOf(confidentiality || \"None\");\n\n  const avgIndex = Math.round(\n    (availabilityIndex + integrityIndex + confidentialityIndex) / 3\n  );\n\n  return levels[avgIndex] || \"None\";\n}\n\n// Helper function to calculate cost props\nfunction calculateCostProps(\n  availability?: string,\n  integrity?: string,\n  confidentiality?: string\n) {\n  // Handle undefined values\n  const availLevel = availability || \"None\";\n  const intLevel = integrity || \"None\";\n  const confLevel = confidentiality || \"None\";\n\n  const totalCapex =\n    (availabilityOptions[availLevel as SecurityLevel]?.capex || 0) +\n    (integrityOptions[intLevel as SecurityLevel]?.capex || 0) +\n    (confidentialityOptions[confLevel as SecurityLevel]?.capex || 0);\n\n  const totalOpex =\n    (availabilityOptions[availLevel as SecurityLevel]?.opex || 0) +\n    (integrityOptions[intLevel as SecurityLevel]?.opex || 0) +\n    (confidentialityOptions[confLevel as SecurityLevel]?.opex || 0);\n\n  return {\n    totalCapex,\n    totalOpex,\n    capexEstimate: `${totalCapex * 5000}`,\n    opexEstimate: `${totalOpex * 2000}`,\n    isSmallSolution: totalCapex <= 60,\n    roi: `${Math.round(200 + totalCapex / 2)}%`,\n  };\n}\n\n// DashboardWidget component for widget containers\ninterface DashboardWidgetProps {\n  title: string;\n  size?: \"small\" | \"medium\" | \"large\" | \"full\";\n  children: ReactNode;\n  className?: string;\n  icon?: keyof typeof WIDGET_ICONS | string; // Updated to accept both keys and string emojis\n  testId?: string;\n  description?: string;\n  headerClassName?: string;\n  showHeader?: boolean;\n  colSpan?: number;\n  rowSpan?: number;\n  actions?: ReactNode;\n  headerContent?: ReactNode;\n  loading?: boolean;\n  error?: Error | null;\n  fullHeight?: boolean;\n  compact?: boolean;\n  emptyState?: ReactNode;\n}\n\nexport const DashboardWidget: React.FC<DashboardWidgetProps> = ({\n  children,\n  title,\n  description,\n  className = \"\",\n  headerClassName = \"\",\n  testId,\n  showHeader = true,\n  colSpan = 1,\n  rowSpan = 1,\n  actions,\n  headerContent,\n  loading = false,\n  error = null,\n  fullHeight = true,\n  compact = false,\n  emptyState,\n  icon, // Now accepts both keys and direct emoji strings\n}) => {\n  // Map widget sizes to grid column spans\n  const sizeClasses = {\n    small: \"widget-col-4\", // 1/3 width (standard)\n    medium: \"widget-col-4\", // 1/3 width (standard)\n    large: \"widget-col-6\", // 1/2 width\n    full: \"widget-col-12\", // Full width\n  };\n\n  return (\n    <div\n      className={`widget ${sizeClasses.medium} ${className} ${\n        fullHeight ? \"h-full\" : \"\"\n      }`}\n      data-testid={testId || createDynamicTestId.widgetId(title)}\n      role=\"region\"\n      aria-labelledby={`widget-title-${title\n        ?.toLowerCase()\n        .replace(/\\s+/g, \"-\")}`}\n    >\n      {showHeader && (\n        <WidgetHeader\n          title={title}\n          iconKey={icon}\n          actions={actions || headerContent}\n          className={headerClassName}\n          testId={`${testId || createDynamicTestId.widgetId(title)}-header`}\n        />\n      )}\n\n      <div className=\"widget-body\">\n        {loading ? (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n          </div>\n        ) : error ? (\n          <div className=\"text-red-500 p-4\">\n            <div className=\"font-bold\">Error</div>\n            <div>{error.toString()}</div>\n          </div>\n        ) : (\n          <div className=\"widget-content-wrapper\">\n            {children || emptyState || (\n              <div className=\"text-gray-400 p-4 text-center italic\">\n                No content available\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useMemo } from \"react\";\nimport { COST_ANALYSIS } from \"../../constants/appConstants\";\nimport { COST_TEST_IDS } from \"../../constants/testIds\";\nimport ciaContentService, {\n  getImplementationTime,\n} from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport MetricsCard from \"../common/MetricsCard\";\nimport StatusBadge from \"../common/StatusBadge\";\nimport WidgetContainer from \"../common/WidgetContainer\";\n\n/**\n * Props for the CostEstimationWidget component\n */\nexport interface CostEstimationWidgetProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n// Define a proper interface for security metrics\ninterface SecurityMetricsType {\n  totalCapex: number;\n  totalOpex: number;\n  capexEstimate: string;\n  opexEstimate: string;\n  isSmallSolution: boolean;\n  roi: string;\n  implementationTime?: string; // Make this optional\n}\n\n/**\n * CostEstimationWidget displays cost estimates for implementing security measures\n * based on the selected CIA levels.\n */\nconst CostEstimationWidget: React.FC<CostEstimationWidgetProps> = ({\n  availabilityLevel,\n  integrityLevel,\n  confidentialityLevel,\n  className = \"\",\n  testId = COST_TEST_IDS.COST_ESTIMATION_WIDGET,\n}) => {\n  // Get security metrics from ciaContentService\n  const securityMetrics = useMemo<SecurityMetricsType>(\n    () =>\n      ciaContentService.getSecurityMetrics(\n        availabilityLevel,\n        integrityLevel,\n        confidentialityLevel\n      ) as SecurityMetricsType, // Cast to our interface\n    [availabilityLevel, integrityLevel, confidentialityLevel]\n  );\n\n  const implementationTime = getImplementationTime(\n    availabilityLevel as SecurityLevel,\n    integrityLevel as SecurityLevel,\n    confidentialityLevel as SecurityLevel\n  );\n\n  // Calculate 3-year total cost (CAPEX + 3 years of OPEX)\n  const threeYearTotal = useMemo(() => {\n    const capex = parseInt(\n      securityMetrics.capexEstimate.replace(/[^0-9]/g, \"\")\n    );\n    const opex = parseInt(securityMetrics.opexEstimate.replace(/[^0-9]/g, \"\"));\n    return `$${(capex + opex * 3).toLocaleString()}`;\n  }, [securityMetrics.capexEstimate, securityMetrics.opexEstimate]);\n\n  const formatCurrency = (value: string) => {\n    // Convert \"$X\" or \"$X/year\" to \"$X,XXX\" or \"$X,XXX/year\"\n    const match = value.match(/\\$(\\d+)(.*)$/);\n    if (match && match[1]) {\n      const amount = parseInt(match[1]);\n      const suffix = match[2] || \"\";\n      return `$${amount.toLocaleString()}${suffix}`;\n    }\n    return value;\n  };\n\n  return (\n    <WidgetContainer\n      title=\"Estimated Implementation Cost\"\n      icon=\"💰\"\n      testId={testId}\n      className={className}\n    >\n      <div className=\"space-y-6\">\n        {/* Cost Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <MetricsCard\n            title=\"Capital Expenditure\"\n            value={formatCurrency(securityMetrics.capexEstimate || \"\")} // Add default empty string\n            icon=\"💼\"\n            testId={COST_TEST_IDS.CAPEX_ESTIMATE_VALUE}\n            accentColor=\"#3498db\"\n            variant=\"info\"\n          />\n          <MetricsCard\n            title=\"Operational Expenditure\"\n            value={formatCurrency(securityMetrics.opexEstimate)}\n            icon=\"⚙️\"\n            testId={COST_TEST_IDS.OPEX_ESTIMATE_VALUE}\n            accentColor=\"#2ecc71\"\n            variant=\"success\"\n          />\n          <MetricsCard\n            title=\"3-Year TCO\"\n            value={threeYearTotal}\n            icon=\"🔄\"\n            testId={COST_TEST_IDS.THREE_YEAR_TOTAL}\n            accentColor=\"#9b59b6\"\n            variant=\"purple\"\n          />\n        </div>\n\n        {/* Budget Allocation */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm\">\n          <h3 className=\"text-lg font-medium mb-3 flex items-center\">\n            <span className=\"mr-2\">💰</span>\n            Budget Allocation\n          </h3>\n\n          <div className=\"space-y-4\">\n            {/* CAPEX Budget Impact */}\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                  Capital Expenditure\n                </span>\n                <span\n                  className=\"text-sm font-medium text-blue-700 dark:text-blue-300\"\n                  data-testid={COST_TEST_IDS.CAPEX_PERCENTAGE}\n                >\n                  {securityMetrics.totalCapex}% of IT budget\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5\">\n                <div\n                  className=\"bg-blue-600 h-2.5 rounded-full\"\n                  style={{ width: `${securityMetrics.totalCapex}%` }}\n                ></div>\n              </div>\n            </div>\n\n            {/* OPEX Budget Impact */}\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                  Operational Expenditure\n                </span>\n                <span\n                  className=\"text-sm font-medium text-green-700 dark:text-green-300\"\n                  data-testid={COST_TEST_IDS.OPEX_PERCENTAGE}\n                >\n                  {securityMetrics.totalOpex}% of IT budget\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5\">\n                <div\n                  className=\"bg-green-600 h-2.5 rounded-full\"\n                  style={{ width: `${securityMetrics.totalOpex}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* ROI and Implementation */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* ROI Card */}\n          <div className=\"bg-green-50 dark:bg-green-900 dark:bg-opacity-20 p-4 rounded-lg border border-green-200 dark:border-green-800\">\n            <h3 className=\"text-lg font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">📈</span>\n              Return on Investment\n            </h3>\n            <div className=\"flex items-center mb-2\">\n              <StatusBadge\n                status=\"success\"\n                size=\"lg\"\n                testId={COST_TEST_IDS.ROI_ESTIMATE}\n              >\n                {securityMetrics.roi}\n              </StatusBadge>\n              <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">\n                Estimated ROI\n              </span>\n            </div>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n              Based on prevented breaches, operational efficiencies, and\n              compliance cost reduction.\n            </p>\n          </div>\n\n          {/* Implementation Timeline */}\n          <div className=\"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\n            <h3 className=\"text-lg font-medium mb-2 flex items-center\">\n              <span className=\"mr-2\">⏱️</span>\n              Implementation Timeline\n            </h3>\n            <div className=\"flex items-center mb-2\">\n              <StatusBadge status=\"info\" size=\"lg\">\n                {implementationTime}\n              </StatusBadge>\n            </div>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n              Estimated time to fully implement and operationalize these\n              security controls.\n            </p>\n          </div>\n        </div>\n\n        {/* Cost Analysis & Recommendation */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border shadow-sm\">\n          <h3 className=\"text-lg font-medium mb-3\">Cost Analysis</h3>\n\n          <p\n            className=\"text-sm text-gray-700 dark:text-gray-300 mb-3\"\n            data-testid={COST_TEST_IDS.COST_ANALYSIS_TEXT}\n          >\n            {securityMetrics.isSmallSolution\n              ? COST_ANALYSIS.SMALL_SOLUTION\n              : COST_ANALYSIS.LARGE_SOLUTION}\n          </p>\n\n          <div className=\"flex flex-wrap gap-2 mt-2\">\n            <StatusBadge status=\"info\">Capital Investment</StatusBadge>\n            <StatusBadge status=\"success\">Recurring Costs</StatusBadge>\n            <StatusBadge status=\"purple\">Long-term Value</StatusBadge>\n          </div>\n        </div>\n\n        {/* Cost Breakdown */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* CAPEX Components */}\n          <div className=\"bg-blue-50 dark:bg-blue-900 dark:bg-opacity-10 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\n            <h4 className=\"text-md font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">⚙️</span>\n              CAPEX Components\n            </h4>\n            <ul className=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n              <li>Security hardware and infrastructure</li>\n              <li>Software licenses and tools</li>\n              <li>Initial implementation services</li>\n              <li>Training and certification</li>\n            </ul>\n          </div>\n\n          {/* OPEX Components */}\n          <div className=\"bg-green-50 dark:bg-green-900 dark:bg-opacity-10 p-4 rounded-lg border border-green-200 dark:border-green-800\">\n            <h4 className=\"text-md font-medium mb-3 flex items-center\">\n              <span className=\"mr-2\">⚙️</span>\n              OPEX Components\n            </h4>\n            <ul className=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n              <li>Personnel costs and staffing</li>\n              <li>Maintenance and support contracts</li>\n              <li>Subscription services</li>\n              <li>Ongoing training and awareness</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default CostEstimationWidget;\n","import React, { useEffect, useState } from \"react\";\nimport { CIA_COMPONENT_ICONS, CIA_LABELS } from \"../../constants/appConstants\";\nimport {\n  CIA_TEST_IDS,\n  COMMON_COMPONENT_TEST_IDS,\n} from \"../../constants/testIds\";\nimport { useCIAOptions } from \"../../hooks/useCIAOptions\";\nimport ciaContentService, {\n  CIAComponentType, // Import the CIAComponentType\n} from \"../../services/ciaContentService\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport {\n  getSecurityLevelClass,\n  normalizeSecurityLevel,\n} from \"../../utils/securityLevelUtils\";\nimport SecurityLevelSummaryItem from \"../common/SecurityLevelSummaryItem\";\n\nexport interface SecurityLevelSelectorProps {\n  availabilityLevel?: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n  onAvailabilityChange?: (level: string) => void;\n  onIntegrityChange?: (level: string) => void;\n  onConfidentialityChange?: (level: string) => void;\n  availabilityOptions?: Record<string, any>;\n  integrityOptions?: Record<string, any>;\n  confidentialityOptions?: Record<string, any>;\n  showSelectionSummary?: boolean;\n  disabled?: boolean;\n  testId?: string;\n  showDescriptions?: boolean;\n}\n\n/**\n * SecurityLevelSelector component for selecting CIA security levels\n * Enhanced with rich descriptions and visual indicators\n */\nconst SecurityLevelSelector: React.FC<SecurityLevelSelectorProps> = ({\n  availabilityLevel = \"None\",\n  integrityLevel = \"None\",\n  confidentialityLevel = \"None\",\n  onAvailabilityChange,\n  onIntegrityChange,\n  onConfidentialityChange,\n  availabilityOptions: propAvailabilityOptions,\n  integrityOptions: propIntegrityOptions,\n  confidentialityOptions: propConfidentialityOptions,\n  showSelectionSummary = true,\n  disabled = false,\n  testId = \"security-level-selector\",\n  showDescriptions = true,\n}) => {\n  const [availability, setAvailability] =\n    useState<SecurityLevel>(availabilityLevel);\n  const [integrity, setIntegrity] = useState<SecurityLevel>(integrityLevel);\n  const [confidentiality, setConfidentiality] =\n    useState<SecurityLevel>(confidentialityLevel);\n  const [activeTooltip, setActiveTooltip] = useState<string | null>(null);\n  const [activeDescription, setActiveDescription] = useState<string | null>(\n    null\n  );\n\n  const {\n    availabilityOptions: hookAvailabilityOptions,\n    integrityOptions: hookIntegrityOptions,\n    confidentialityOptions: hookConfidentialityOptions,\n  } = useCIAOptions();\n\n  // Use prop options if provided, otherwise use options from the hook\n  const availabilityOptions =\n    propAvailabilityOptions || hookAvailabilityOptions;\n  const integrityOptions = propIntegrityOptions || hookIntegrityOptions;\n  const confidentialityOptions =\n    propConfidentialityOptions || hookConfidentialityOptions;\n\n  useEffect(() => {\n    setAvailability(availabilityLevel);\n  }, [availabilityLevel]);\n\n  useEffect(() => {\n    setIntegrity(integrityLevel);\n  }, [integrityLevel]);\n\n  useEffect(() => {\n    setConfidentiality(confidentialityLevel);\n  }, [confidentialityLevel]);\n\n  // Handle availability change\n  const handleAvailabilityChange = (\n    e: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    const level = e.target.value as SecurityLevel;\n    setAvailability(level);\n    setActiveDescription(\"availability\");\n    if (onAvailabilityChange) {\n      onAvailabilityChange(level);\n    }\n  };\n\n  // Handle integrity change\n  const handleIntegrityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const level = e.target.value as SecurityLevel;\n    setIntegrity(level);\n    setActiveDescription(\"integrity\");\n    if (onIntegrityChange) {\n      onIntegrityChange(level);\n    }\n  };\n\n  // Handle confidentiality change\n  const handleConfidentialityChange = (\n    e: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    const level = e.target.value as SecurityLevel;\n    setConfidentiality(level);\n    setActiveDescription(\"confidentiality\");\n    if (onConfidentialityChange) {\n      onConfidentialityChange(level);\n    }\n  };\n\n  // Function to show tooltip\n  const showTooltip = (component: string) => {\n    setActiveTooltip(component);\n  };\n\n  // Function to hide tooltip\n  const hideTooltip = () => {\n    setActiveTooltip(null);\n  };\n\n  // Add a utility function to safely cast strings to CIAComponentType\n  const safeCastToComponentType = (component: string): CIAComponentType => {\n    // Check if it's a valid CIAComponentType\n    const validComponents: CIAComponentType[] = [\n      \"confidentiality\",\n      \"integrity\",\n      \"availability\",\n    ];\n    return validComponents.includes(component as CIAComponentType)\n      ? (component as CIAComponentType)\n      : \"confidentiality\"; // Default fallback\n  };\n\n  // Get component details from ciaContentService\n  const getComponentDetails = (component: string, level: SecurityLevel) => {\n    const safeComponent = safeCastToComponentType(component);\n\n    // Use the safeComponent directly since it's properly typed now\n    return ciaContentService.getComponentDetails(safeComponent, level);\n  };\n\n  // Add a utility function to safely cast strings to SecurityLevel\n  const safeCastToSecurityLevel = (level: string): SecurityLevel => {\n    return normalizeSecurityLevel(level);\n  };\n\n  // Render options with enhanced descriptions\n  const renderOptions = (\n    optionsObject: Record<string, any>,\n    componentType: string\n  ) => {\n    return Object.keys(optionsObject || {}).map((level) => {\n      const securityLevel = safeCastToSecurityLevel(level);\n      const details = getComponentDetails(\n        componentType, // No need for type assertion now\n        securityLevel\n      );\n      const description = details?.description || \"\";\n      const shortDesc =\n        description.length > 50\n          ? description.substring(0, 50) + \"...\"\n          : description;\n\n      return (\n        <option\n          key={level}\n          value={level}\n          className={getSecurityLevelClass(level)}\n        >\n          {level} {shortDesc ? `- ${shortDesc}` : \"\"}\n        </option>\n      );\n    });\n  };\n\n  return (\n    <div\n      data-testid={testId}\n      className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\"\n    >\n      {/* Current Security Profile - Compact summary at top */}\n      {showSelectionSummary && (\n        <div className=\"mb-4 pb-3 border-b border-gray-200 dark:border-gray-700\">\n          <h4 className=\"font-medium mb-2 text-gray-800 dark:text-gray-200 text-sm flex items-center terminal-text\">\n            <span className=\"mr-2 pulse-dot\">◉</span>\n            Current Security Profile\n          </h4>\n          <div className=\"flex flex-wrap gap-2 justify-between\">\n            <SecurityLevelSummaryItem\n              label={CIA_LABELS.CONFIDENTIALITY}\n              value={confidentiality}\n              icon={CIA_COMPONENT_ICONS.CONFIDENTIALITY}\n              testId={COMMON_COMPONENT_TEST_IDS.CURRENT_CONFIDENTIALITY}\n              color=\"purple\"\n              compact={true}\n            />\n            <SecurityLevelSummaryItem\n              label={CIA_LABELS.INTEGRITY}\n              value={integrity}\n              icon={CIA_COMPONENT_ICONS.INTEGRITY}\n              testId={COMMON_COMPONENT_TEST_IDS.CURRENT_INTEGRITY}\n              color=\"green\"\n              compact={true}\n            />\n            <SecurityLevelSummaryItem\n              label={CIA_LABELS.AVAILABILITY}\n              value={availability}\n              icon={CIA_COMPONENT_ICONS.AVAILABILITY}\n              testId={COMMON_COMPONENT_TEST_IDS.CURRENT_AVAILABILITY}\n              color=\"blue\"\n              compact={true}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Security level legend - consistent visual scale */}\n      <div className=\"mb-4 pb-3 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex justify-between items-center text-xs\">\n          {[\"None\", \"Low\", \"Moderate\", \"High\", \"Very High\"].map((level) => (\n            <div\n              key={level}\n              className={`flex items-center ${\n                level === availability ||\n                level === integrity ||\n                level === confidentiality\n                  ? \"text-blue-600 dark:text-blue-400 font-medium\"\n                  : \"text-gray-500 dark:text-gray-400\"\n              }`}\n            >\n              <span\n                className={`w-2 h-2 mr-1 rounded-full inline-block security-level-indicator level-${level.toLowerCase()}`}\n              ></span>\n              {level}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Confidentiality Section - consistent styling */}\n      <div\n        className=\"mb-5 pb-4 border-b border-gray-100 dark:border-gray-700\"\n        data-testid={CIA_TEST_IDS.CONFIDENTIALITY_SECTION}\n      >\n        <div className=\"flex items-center justify-between mb-2\">\n          <label\n            htmlFor=\"confidentialitySelect\"\n            className=\"flex items-center terminal-text text-purple-600 dark:text-purple-400 font-medium\"\n          >\n            <span className=\"mr-2 icon-confidentiality\">\n              {CIA_COMPONENT_ICONS.CONFIDENTIALITY}\n            </span>\n            {CIA_LABELS.CONFIDENTIALITY}\n            <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-2\">\n              Controls who can access your data and systems\n            </span>\n          </label>\n          <button\n            type=\"button\"\n            className=\"info-button w-6 h-6 rounded-full flex items-center justify-center bg-purple-100 dark:bg-purple-900 dark:bg-opacity-30 text-purple-600 dark:text-purple-400 hover:bg-purple-200 dark:hover:bg-purple-800 transition-colors\"\n            onMouseEnter={() => showTooltip(\"confidentiality\")}\n            onMouseLeave={hideTooltip}\n            data-testid={CIA_TEST_IDS.CONFIDENTIALITY_TECHNICAL_INFO_BUTTON}\n            aria-label=\"Show technical information about confidentiality\"\n          >\n            <span className=\"text-xs\">ℹ️</span>\n          </button>\n        </div>\n\n        <div className=\"relative\">\n          <select\n            id=\"confidentialitySelect\"\n            className=\"block w-full px-3 py-2 pr-10 text-sm border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 rounded-md dark:bg-gray-700 dark:text-white transition-colors\"\n            value={confidentiality}\n            onChange={handleConfidentialityChange}\n            disabled={disabled}\n            data-testid={\n              CIA_TEST_IDS.CONFIDENTIALITY_SELECT || \"confidentiality-selector\"\n            }\n            aria-haspopup=\"listbox\"\n            aria-expanded=\"false\"\n          >\n            {renderOptions(confidentialityOptions, \"confidentiality\")}\n          </select>\n          <div\n            className={`absolute right-3 top-2.5 w-3 h-3 rounded-full ${getSecurityLevelClass(\n              confidentiality\n            )}`}\n            data-testid={CIA_TEST_IDS.CONFIDENTIALITY_COLOR_INDICATOR}\n          ></div>\n        </div>\n\n        {confidentialityOptions?.[confidentiality]?.description &&\n          showDescriptions && (\n            <div\n              className=\"mt-3 p-2.5 bg-purple-50 dark:bg-purple-900 dark:bg-opacity-10 rounded-md text-xs text-gray-700 dark:text-gray-300 border-l-4 border-purple-500\"\n              data-testid={CIA_TEST_IDS.CONFIDENTIALITY_DESCRIPTION}\n            >\n              {confidentialityOptions[confidentiality].description}\n            </div>\n          )}\n\n        {confidentialityOptions?.[confidentiality]?.protectionMethod && (\n          <div className=\"mt-2 flex items-center text-xs text-purple-600 dark:text-purple-400\">\n            <span className=\"mr-1\">🛡️</span>\n            <span>\n              {confidentialityOptions[confidentiality].protectionMethod}\n            </span>\n          </div>\n        )}\n      </div>\n\n      {/* Integrity Section - consistent styling */}\n      <div\n        className=\"mb-5 pb-4 border-b border-gray-100 dark:border-gray-700\"\n        data-testid={CIA_TEST_IDS.INTEGRITY_SECTION}\n      >\n        <div className=\"flex items-center justify-between mb-2\">\n          <label\n            htmlFor=\"integritySelect\"\n            className=\"flex items-center terminal-text text-green-600 dark:text-green-400 font-medium\"\n          >\n            <span className=\"mr-2 icon-integrity\">\n              {CIA_COMPONENT_ICONS.INTEGRITY}\n            </span>\n            {CIA_LABELS.INTEGRITY}\n            <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-2\">\n              Ensures data remains accurate and unaltered\n            </span>\n          </label>\n          <button\n            type=\"button\"\n            className=\"info-button w-6 h-6 rounded-full flex items-center justify-center bg-green-100 dark:bg-green-900 dark:bg-opacity-30 text-green-600 dark:text-green-400 hover:bg-green-200 dark:hover:bg-green-800 transition-colors\"\n            onMouseEnter={() => showTooltip(\"integrity\")}\n            onMouseLeave={hideTooltip}\n            data-testid={CIA_TEST_IDS.INTEGRITY_TECHNICAL_INFO_BUTTON}\n            aria-label=\"Show technical information about integrity\"\n          >\n            <span className=\"text-xs\">ℹ️</span>\n          </button>\n        </div>\n\n        <div className=\"relative\">\n          <select\n            id=\"integritySelect\"\n            className=\"block w-full px-3 py-2 pr-10 text-sm border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 rounded-md dark:bg-gray-700 dark:text-white transition-colors\"\n            value={integrity}\n            onChange={handleIntegrityChange}\n            disabled={disabled}\n            data-testid={CIA_TEST_IDS.INTEGRITY_SELECT || \"integrity-selector\"}\n            aria-haspopup=\"listbox\"\n            aria-expanded=\"false\"\n          >\n            {renderOptions(integrityOptions, \"integrity\")}\n          </select>\n          <div\n            className={`absolute right-3 top-2.5 w-3 h-3 rounded-full ${getSecurityLevelClass(\n              integrity\n            )}`}\n            data-testid={CIA_TEST_IDS.INTEGRITY_COLOR_INDICATOR}\n          ></div>\n        </div>\n\n        {integrityOptions?.[integrity]?.description && showDescriptions && (\n          <div\n            className=\"mt-3 p-2.5 bg-green-50 dark:bg-green-900 dark:bg-opacity-10 rounded-md text-xs text-gray-700 dark:text-gray-300 border-l-4 border-green-500\"\n            data-testid={CIA_TEST_IDS.INTEGRITY_DESCRIPTION}\n          >\n            {integrityOptions[integrity].description}\n          </div>\n        )}\n\n        {integrityOptions?.[integrity]?.validationMethod && (\n          <div className=\"mt-2 flex items-center text-xs text-green-600 dark:text-green-400\">\n            <span className=\"mr-1\">✓</span>\n            <span>{integrityOptions[integrity].validationMethod}</span>\n          </div>\n        )}\n      </div>\n\n      {/* Availability Section - consistent styling */}\n      <div className=\"mb-2\" data-testid={CIA_TEST_IDS.AVAILABILITY_SECTION}>\n        <div className=\"flex items-center justify-between mb-2\">\n          <label\n            htmlFor=\"availabilitySelect\"\n            className=\"flex items-center terminal-text text-blue-600 dark:text-blue-400 font-medium\"\n          >\n            <span className=\"mr-2 icon-availability\">\n              {CIA_COMPONENT_ICONS.AVAILABILITY}\n            </span>\n            {CIA_LABELS.AVAILABILITY}\n            <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-2\">\n              Determines how reliably your systems can be accessed\n            </span>\n          </label>\n          <button\n            type=\"button\"\n            className=\"info-button w-6 h-6 rounded-full flex items-center justify-center bg-blue-100 dark:bg-blue-900 dark:bg-opacity-30 text-blue-600 dark:text-blue-400 hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors\"\n            onMouseEnter={() => showTooltip(\"availability\")}\n            onMouseLeave={hideTooltip}\n            data-testid={CIA_TEST_IDS.AVAILABILITY_TECHNICAL_INFO_BUTTON}\n            aria-label=\"Show technical information about availability\"\n          >\n            <span className=\"text-xs\">ℹ️</span>\n          </button>\n        </div>\n\n        <div className=\"relative\">\n          <select\n            id=\"availabilitySelect\"\n            className=\"block w-full px-3 py-2 pr-10 text-sm border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 rounded-md dark:bg-gray-700 dark:text-white transition-colors\"\n            value={availability}\n            onChange={handleAvailabilityChange}\n            disabled={disabled}\n            data-testid={\n              CIA_TEST_IDS.AVAILABILITY_SELECT || \"availability-selector\"\n            }\n            aria-haspopup=\"listbox\"\n            aria-expanded=\"false\"\n          >\n            {renderOptions(availabilityOptions, \"availability\")}\n          </select>\n          <div\n            className={`absolute right-3 top-2.5 w-3 h-3 rounded-full ${getSecurityLevelClass(\n              availability\n            )}`}\n            data-testid={CIA_TEST_IDS.AVAILABILITY_COLOR_INDICATOR}\n          ></div>\n        </div>\n\n        {availabilityOptions?.[availability]?.description &&\n          showDescriptions && (\n            <div\n              className=\"mt-3 p-2.5 bg-blue-50 dark:bg-blue-900 dark:bg-opacity-10 rounded-md text-xs text-gray-700 dark:text-gray-300 border-l-4 border-blue-500\"\n              data-testid={CIA_TEST_IDS.AVAILABILITY_DESCRIPTION}\n            >\n              {availabilityOptions[availability].description}\n            </div>\n          )}\n\n        {availabilityOptions?.[availability]?.uptime && (\n          <div className=\"mt-2 flex items-center text-xs text-blue-600 dark:text-blue-400\">\n            <span className=\"mr-1\">⏱️</span>\n            <span>{availabilityOptions[availability].uptime}</span>\n            {availabilityOptions?.[availability]?.rto && (\n              <span className=\"ml-3\">\n                <span className=\"mr-1\">🔄</span>RTO:{\" \"}\n                {availabilityOptions[availability].rto}\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Active Tooltip - Technical Details with Ingress styling */}\n      {activeTooltip && (\n        <div className=\"mt-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-md border border-gray-200 dark:border-gray-700 shadow-md terminal-text-container\">\n          <h4 className=\"font-medium mb-2 flex items-center text-gray-800 dark:text-gray-200 text-sm\">\n            <span className=\"mr-2 pulse-dot\">◉</span>\n            Technical Details\n          </h4>\n          <div className=\"text-xs leading-relaxed bg-black bg-opacity-20 dark:bg-black dark:bg-opacity-40 p-2 rounded border-l-2 border-cyan-500\">\n            {activeTooltip === \"confidentiality\" && (\n              <div className=\"color-confidentiality terminal-text\">\n                <p>\n                  Confidentiality measures protect sensitive data from\n                  unauthorized access.\n                </p>\n                <p className=\"mt-1\">\n                  Higher levels implement stronger access controls, encryption,\n                  and data protection mechanisms.\n                </p>\n              </div>\n            )}\n            {activeTooltip === \"integrity\" && (\n              <div className=\"color-integrity terminal-text\">\n                <p>\n                  Integrity controls ensure data remains accurate and free from\n                  unauthorized modifications.\n                </p>\n                <p className=\"mt-1\">\n                  Higher levels implement cryptographic checksums, blockchain,\n                  and advanced validation mechanisms.\n                </p>\n              </div>\n            )}\n            {activeTooltip === \"availability\" && (\n              <div className=\"color-availability terminal-text\">\n                <p>\n                  Availability measures ensure systems remain operational and\n                  accessible.\n                </p>\n                <p className=\"mt-1\">\n                  Higher levels implement redundancy, failover systems, and\n                  disaster recovery protocols.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SecurityLevelSelector;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport {\n  CIA_COMPONENT_ICONS,\n  CIA_LABELS,\n  UI_TEXT,\n} from \"../../constants/appConstants\";\nimport {\n  COMMON_COMPONENT_TEST_IDS,\n  SECURITY_LEVEL_TEST_IDS,\n  WIDGET_TEST_IDS,\n} from \"../../constants/testIds\";\nimport { SecurityLevel } from \"../../types/cia\";\nimport SecurityLevelSummaryItem from \"../common/SecurityLevelSummaryItem\";\nimport WidgetContainer from \"../common/WidgetContainer\";\nimport SecurityLevelSelector from \"../securitylevel/SecurityLevelSelector\";\n\n/**\n * Props for the SecurityLevelWidget component\n */\nexport interface SecurityLevelWidgetProps {\n  availabilityLevel?: string;\n  integrityLevel?: string;\n  confidentialityLevel?: string;\n  onAvailabilityChange?: (level: string) => void;\n  onIntegrityChange?: (level: string) => void;\n  onConfidentialityChange?: (level: string) => void;\n  setAvailability?:\n    | ((level: string) => void)\n    | Dispatch<SetStateAction<string>>;\n  setIntegrity?: ((level: string) => void) | Dispatch<SetStateAction<string>>;\n  setConfidentiality?:\n    | ((level: string) => void)\n    | Dispatch<SetStateAction<string>>;\n  className?: string;\n  testId?: string;\n  title?: string;\n  loading?: boolean;\n  error?: Error | null;\n}\n\n/**\n * SecurityLevelWidget component for selecting CIA security levels\n * Enhanced with rich descriptions and visual indicators\n *\n * @param props Component properties\n * @returns SecurityLevelWidget React component\n */\nconst SecurityLevelWidget: React.FC<SecurityLevelWidgetProps> = ({\n  availabilityLevel = \"None\",\n  integrityLevel = \"None\",\n  confidentialityLevel = \"None\",\n  onAvailabilityChange,\n  onIntegrityChange,\n  onConfidentialityChange,\n  setAvailability,\n  setIntegrity,\n  setConfidentiality,\n  className = \"\",\n  testId = WIDGET_TEST_IDS.SECURITY_LEVEL_WIDGET,\n  title = UI_TEXT.WIDGET_TITLES.SECURITY_LEVEL,\n  loading = false,\n  error = null,\n}) => {\n  // Create handlers that work with both callback styles\n  const handleAvailabilityChange = (level: string) => {\n    if (onAvailabilityChange) onAvailabilityChange(level);\n    if (setAvailability) setAvailability(level);\n  };\n\n  const handleIntegrityChange = (level: string) => {\n    if (onIntegrityChange) onIntegrityChange(level);\n    if (setIntegrity) setIntegrity(level);\n  };\n\n  const handleConfidentialityChange = (level: string) => {\n    if (onConfidentialityChange) onConfidentialityChange(level);\n    if (setConfidentiality) setConfidentiality(level);\n  };\n\n  // Show a loading state\n  if (loading) {\n    return (\n      <WidgetContainer\n        title={title}\n        className={className}\n        testId={testId}\n        loading={true}\n      >\n        {/* Empty children to satisfy required prop */}\n        <div className=\"loading-placeholder\"></div>\n      </WidgetContainer>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <WidgetContainer title={title} className={className} testId={testId}>\n        <div className=\"p-4 text-red-600 dark:text-red-400\">\n          <h3 className=\"font-medium mb-2\">Error Loading Security Levels</h3>\n          <p className=\"text-sm\">{error.message}</p>\n        </div>\n      </WidgetContainer>\n    );\n  }\n\n  return (\n    <WidgetContainer title={title} className={className} testId={testId}>\n      <div className=\"p-4\">\n        {/* Current Security Profile - Compact summary at top */}\n        <div className=\"mb-4 pb-3 border-b border-gray-200 dark:border-gray-700\">\n          <h4 className=\"font-medium mb-2 text-gray-800 dark:text-gray-200 text-sm flex items-center\">\n            <span className=\"mr-2\">📊</span>\n            Current Security Profile\n          </h4>\n          <div className=\"flex flex-wrap gap-2 justify-between\">\n            <SecurityLevelSummaryItem\n              label={CIA_LABELS.CONFIDENTIALITY}\n              value={confidentialityLevel as SecurityLevel}\n              icon={CIA_COMPONENT_ICONS.CONFIDENTIALITY}\n              testId={COMMON_COMPONENT_TEST_IDS.CURRENT_CONFIDENTIALITY}\n              color=\"purple\"\n              compact={true}\n            />\n            <SecurityLevelSummaryItem\n              label={CIA_LABELS.INTEGRITY}\n              value={integrityLevel as SecurityLevel}\n              icon={CIA_COMPONENT_ICONS.INTEGRITY}\n              testId={COMMON_COMPONENT_TEST_IDS.CURRENT_INTEGRITY}\n              color=\"green\"\n              compact={true}\n            />\n            <SecurityLevelSummaryItem\n              label={CIA_LABELS.AVAILABILITY}\n              value={availabilityLevel as SecurityLevel}\n              icon={CIA_COMPONENT_ICONS.AVAILABILITY}\n              testId={COMMON_COMPONENT_TEST_IDS.CURRENT_AVAILABILITY}\n              color=\"blue\"\n              compact={true}\n            />\n          </div>\n        </div>\n\n        {/* SecurityLevelSelector */}\n        <SecurityLevelSelector\n          availabilityLevel={availabilityLevel as SecurityLevel}\n          integrityLevel={integrityLevel as SecurityLevel}\n          confidentialityLevel={confidentialityLevel as SecurityLevel}\n          onAvailabilityChange={handleAvailabilityChange}\n          onIntegrityChange={handleIntegrityChange}\n          onConfidentialityChange={handleConfidentialityChange}\n          showSelectionSummary={false}\n          testId={SECURITY_LEVEL_TEST_IDS.SECURITY_LEVEL_SELECTOR}\n        />\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default SecurityLevelWidget;\n","import { Dispatch, SetStateAction } from \"react\";\nimport { CIADetails, SecurityLevel } from \"./cia\";\n\n/**\n * Base properties for all widgets\n */\nexport interface WidgetBaseProps {\n  /** Test ID for component selection in tests */\n  testId?: string;\n  // Make these properties optional\n  availabilityLevel?: string;\n  integrityLevel?: string;\n  confidentialityLevel?: string;\n  className?: string;\n  securityLevel?: string;\n}\n\n/**\n * Generic details interface that all specific detail interfaces should extend\n * This ensures compatibility across different widget implementations\n */\nexport interface BaseWidgetDetails {\n  description?: string;\n  businessImpact?: string;\n  impact?: string;\n  technical?: string;\n  recommendations?: string[];\n  [key: string]: unknown; // Allow additional properties with stricter type\n}\n\n/**\n * Props for the CostEstimationWidget component\n */\nexport interface CostEstimationWidgetProps extends WidgetBaseProps {\n  /** Total capital expenditure as percentage of IT budget */\n  totalCapex: number;\n  /** Total operational expenditure as percentage of IT budget */\n  totalOpex: number;\n  /** Formatted capital expenditure estimate */\n  capexEstimate: string;\n  /** Formatted operational expenditure estimate */\n  opexEstimate: string;\n  /** Whether this is a small solution (affects cost calculations) */\n  isSmallSolution: boolean;\n  /** Return on investment estimate */\n  roi?: string;\n  /** Implementation time estimate */\n  implementationTime?: string;\n  /** Availability options */\n  availabilityOptions?: Record<string, CIADetails>;\n  /** Integrity options */\n  integrityOptions?: Record<string, CIADetails>;\n  /** Confidentiality options */\n  confidentialityOptions?: Record<string, CIADetails>;\n}\n\n/**\n * Props for the ValueCreationWidget component\n */\nexport interface ValueCreationWidgetProps extends WidgetBaseProps {\n  securityLevel: SecurityLevel;\n}\n\n/**\n * Props for the SecuritySummaryWidget component\n */\nexport interface SecuritySummaryWidgetProps extends WidgetBaseProps {\n  securityLevel: SecurityLevel;\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n}\n\n/**\n * Props for ComplianceStatusWidget component\n */\nexport interface ComplianceStatusWidgetProps extends WidgetBaseProps {\n  /** Overall security level */\n  securityLevel?: SecurityLevel;\n  availabilityLevel?: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n}\n\n/**\n * Types for Integrity Impact Widget\n * Compatible with CIADetails for easier integration\n */\nexport interface IntegrityDetail extends BaseWidgetDetails {\n  description: string;\n  businessImpact: string;\n  validationMethod?: string;\n  recommendations: string[];\n  technicalControls?: string[];\n  complianceImplications?: string;\n}\n\n/**\n * Props for the IntegrityImpactWidget component\n */\nexport interface IntegrityImpactWidgetProps extends WidgetBaseProps {\n  integrityLevel: SecurityLevel;\n  // Change the optional fields to align with WidgetBaseProps constraint\n  availabilityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n  options?: Record<string, any>;\n}\n\n/**\n * Types for Confidentiality Impact Widget\n * Compatible with CIADetails for easier integration\n */\nexport interface ConfidentialityDetail extends BaseWidgetDetails {\n  impact: string;\n  businessImpact: string;\n  recommendations: string[];\n  technicalMeasures?: string[];\n  complianceImplications?: string;\n  riskLevel?: string;\n}\n\n/**\n * Props for the ConfidentialityImpactWidget component\n */\nexport interface ConfidentialityImpactWidgetProps extends WidgetBaseProps {\n  confidentialityLevel: SecurityLevel;\n  // Change the optional fields to align with WidgetBaseProps constraint\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n  options?: Record<string, any>;\n}\n\n/**\n * Types for Availability Impact Widget\n * Compatible with CIADetails for easier integration\n */\nexport interface AvailabilityDetail extends BaseWidgetDetails {\n  description: string;\n  businessImpact: string;\n  uptime: string;\n  recommendations: string[];\n  mttr?: string;\n  rto?: string;\n  rpo?: string;\n}\n\n/**\n * Props for the AvailabilityImpactWidget component\n */\nexport interface AvailabilityImpactWidgetProps extends WidgetBaseProps {\n  /** Options for each level - optional when using ciaContentService */\n  options?: Record<string, AvailabilityDetail | CIADetails>;\n  availabilityLevel: SecurityLevel;\n  integrityLevel?: SecurityLevel;\n  confidentialityLevel?: SecurityLevel;\n}\n\n/**\n * Props for the SecurityResourcesWidget component\n */\nexport interface SecurityResourcesWidgetProps extends WidgetBaseProps {\n  /** Overall security level */\n  securityLevel: SecurityLevel;\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n}\n\n/**\n * Props for the TechnicalDetailsWidget component\n */\nexport interface TechnicalDetailsWidgetProps extends WidgetBaseProps {\n  /** Availability options for specific technical details */\n  availabilityOptions?: Record<string, CIADetails>;\n  /** Integrity options for specific technical details */\n  integrityOptions?: Record<string, CIADetails>;\n  /** Confidentiality options for specific technical details */\n  confidentialityOptions?: Record<string, CIADetails>;\n  /** Optional CSS class name */\n  className?: string;\n  availabilityLevel?: SecurityLevel | string;\n  integrityLevel?: SecurityLevel | string;\n  confidentialityLevel?: SecurityLevel | string;\n}\n\n/**\n * Props for the BusinessImpactAnalysisWidget component\n */\nexport interface BusinessImpactAnalysisWidgetProps extends WidgetBaseProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  securityLevel?: SecurityLevel; // Add securityLevel property to match component\n  className?: string;\n  testId?: string;\n  activeComponent?: \"availability\" | \"integrity\" | \"confidentiality\";\n}\n\n/**\n * Props for the SecurityLevelWidget component\n */\nexport interface SecurityLevelWidgetProps {\n  availabilityLevel: string;\n  integrityLevel: string;\n  confidentialityLevel: string;\n  onAvailabilityChange?: (level: string) => void;\n  onIntegrityChange?: (level: string) => void;\n  onConfidentialityChange?: (level: string) => void;\n  setAvailability?:\n    | ((level: string) => void)\n    | Dispatch<SetStateAction<string>>;\n  setIntegrity?: ((level: string) => void) | Dispatch<SetStateAction<string>>;\n  setConfidentiality?:\n    | ((level: string) => void)\n    | Dispatch<SetStateAction<string>>;\n  className?: string;\n  testId?: string;\n  title?: string;\n  loading?: boolean;\n  error?: Error | null;\n}\n\n// Add missing types\nexport interface SecurityVisualizationWidgetProps extends WidgetBaseProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\nexport interface CIAImpactSummaryWidgetProps extends WidgetBaseProps {\n  availabilityLevel: SecurityLevel;\n  integrityLevel: SecurityLevel;\n  confidentialityLevel: SecurityLevel;\n  className?: string;\n  testId?: string;\n}\n\n/**\n * Type adapter functions to convert between different detail types\n */\nexport const typeAdapters = {\n  /**\n   * Converts CIADetails to IntegrityDetail\n   */\n  toIntegrityDetail(details: CIADetails): IntegrityDetail {\n    return {\n      description: details.description || \"\",\n      businessImpact: details.businessImpact || \"\",\n      validationMethod: details.validationMethod,\n      recommendations: details.recommendations || [],\n      // Force casting to specific type instead of using 'as'\n      technicalControls: Array.isArray(details.technicalControls)\n        ? details.technicalControls\n        : undefined,\n      complianceImplications:\n        typeof details.complianceImplications === \"string\"\n          ? details.complianceImplications\n          : undefined,\n    };\n  },\n\n  /**\n   * Converts CIADetails to ConfidentialityDetail\n   */\n  toConfidentialityDetail(details: CIADetails): ConfidentialityDetail {\n    return {\n      impact: details.impact || details.description || \"\",\n      businessImpact: details.businessImpact || \"\",\n      recommendations: details.recommendations || [],\n      // Force casting to specific type instead of using 'as'\n      technicalMeasures: Array.isArray(details.technicalMeasures)\n        ? details.technicalMeasures\n        : undefined,\n      complianceImplications:\n        typeof details.complianceImplications === \"string\"\n          ? details.complianceImplications\n          : undefined,\n      riskLevel:\n        typeof details.riskLevel === \"string\" ? details.riskLevel : undefined,\n    };\n  },\n\n  /**\n   * Converts CIADetails to AvailabilityDetail\n   */\n  toAvailabilityDetail(details: CIADetails): AvailabilityDetail {\n    return {\n      description: details.description || \"\",\n      businessImpact: details.businessImpact || \"\",\n      uptime: details.uptime || \"Unknown\",\n      recommendations: details.recommendations || [],\n      // Force casting to specific type instead of using 'as'\n      mttr: typeof details.mttr === \"string\" ? details.mttr : undefined,\n      rto: typeof details.rto === \"string\" ? details.rto : undefined,\n      rpo: typeof details.rpo === \"string\" ? details.rpo : undefined,\n    };\n  },\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  availabilityOptions,\n  confidentialityOptions,\n  integrityOptions,\n} from \"../hooks/useCIAOptions\";\n\nimport Dashboard, { DashboardWidget } from \"../components/dashboard/Dashboard\";\nimport ComplianceStatusWidget from \"../components/widgets/ComplianceStatusWidget\";\nimport CostEstimationWidget from \"../components/widgets/CostEstimationWidget\";\nimport SecurityLevelWidget from \"../components/widgets/SecurityLevelWidget\";\nimport SecuritySummaryWidget from \"../components/widgets/SecuritySummaryWidget\";\nimport ValueCreationWidget from \"../components/widgets/ValueCreationWidget\";\nimport { SECURITY_LEVELS, UI_TEXT } from \"../constants/appConstants\";\nimport { WIDGET_TITLES } from \"../constants/coreConstants\";\nimport { APP_TEST_IDS } from \"../constants/testIds\";\n// Import the new widgets\nimport AvailabilityImpactWidget from \"../components/widgets/AvailabilityImpactWidget\";\nimport BusinessImpactAnalysisWidget from \"../components/widgets/BusinessImpactAnalysisWidget\";\nimport ConfidentialityImpactWidget from \"../components/widgets/ConfidentialityImpactWidget\";\nimport IntegrityImpactWidget from \"../components/widgets/IntegrityImpactWidget\";\nimport SecurityResourcesWidget from \"../components/widgets/SecurityResourcesWidget\";\nimport SecurityVisualizationWidget from \"../components/widgets/SecurityVisualizationWidget\";\nimport TechnicalDetailsWidget from \"../components/widgets/TechnicalDetailsWidget\";\nimport { SecurityLevel } from \"../types/cia\";\nimport { typeAdapters } from \"../types/widgets\";\n\n/**\n * Main component for the CIA Classification App\n */\nconst CIAClassificationApp: React.FC = () => {\n  // Get version from package.json - using hardcoded value from package.json\n  // to avoid issues with process.env in the browser context\n  const appVersion = \"0.8.0\";\n\n  // State for security levels\n  const [availability, setAvailability] = useState<string>(\n    SECURITY_LEVELS.NONE\n  );\n  const [integrity, setIntegrity] = useState<string>(SECURITY_LEVELS.NONE);\n  const [confidentiality, setConfidentiality] = useState<string>(\n    SECURITY_LEVELS.NONE\n  );\n\n  // Dark mode state\n  const [darkMode, setDarkMode] = useState<boolean>(\n    window.matchMedia &&\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  );\n\n  useEffect(() => {\n    const testEventHandler = (e: Event) => {\n      if (\n        e instanceof CustomEvent &&\n        e.type === \"test:set-values\" &&\n        e.detail\n      ) {\n        const { availability: a, integrity: i, confidentiality: c } = e.detail;\n        if (a) setAvailability(a);\n        if (i) setIntegrity(i);\n        if (c) setConfidentiality(c);\n      }\n    };\n\n    document.addEventListener(\n      \"test:set-values\",\n      testEventHandler as EventListener\n    );\n\n    return () => {\n      document.removeEventListener(\n        \"test:set-values\",\n        testEventHandler as EventListener\n      );\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      typeof window !== \"undefined\" &&\n      window.matchMedia &&\n      typeof window.matchMedia === \"function\"\n    ) {\n      try {\n        const prefersDark = window.matchMedia(\n          \"(prefers-color-scheme: dark)\"\n        ).matches;\n        setDarkMode(prefersDark);\n\n        if (prefersDark) {\n          document.documentElement.classList.add(\"dark\");\n          document.getElementById(\"root\")?.classList.add(\"dark\");\n        }\n      } catch (error) {\n        if (process.env.NODE_ENV !== \"test\") {\n          console.error(\"Error detecting color scheme preference:\", error);\n        }\n      }\n    }\n  }, []);\n\n  // Calculate total costs\n  const totalCapex =\n    (availabilityOptions[availability as SecurityLevel]?.capex || 0) +\n    (integrityOptions[integrity as SecurityLevel]?.capex || 0) +\n    (confidentialityOptions[confidentiality as SecurityLevel]?.capex || 0);\n\n  const totalOpex =\n    (availabilityOptions[availability as SecurityLevel]?.opex || 0) +\n    (integrityOptions[integrity as SecurityLevel]?.opex || 0) +\n    (confidentialityOptions[confidentiality as SecurityLevel]?.opex || 0);\n\n  // Calculate overall security level\n  const overallSecurityLevel = useMemo(() => {\n    const levels = [\n      SECURITY_LEVELS.NONE,\n      SECURITY_LEVELS.LOW,\n      SECURITY_LEVELS.MODERATE,\n      SECURITY_LEVELS.HIGH,\n      SECURITY_LEVELS.VERY_HIGH,\n    ];\n    const availabilityIndex = levels.indexOf(availability as SecurityLevel);\n    const integrityIndex = levels.indexOf(integrity as SecurityLevel);\n    const confidentialityIndex = levels.indexOf(\n      confidentiality as SecurityLevel\n    );\n\n    const avgIndex = Math.round(\n      (availabilityIndex + integrityIndex + confidentialityIndex) / 3\n    );\n    return levels[avgIndex] || SECURITY_LEVELS.NONE;\n  }, [availability, integrity, confidentiality]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode((prev) => {\n      const newMode = !prev;\n      // Apply dark mode class to HTML element (more standard approach)\n      if (newMode) {\n        document.documentElement.classList.add(\"dark\");\n        document.getElementById(\"root\")?.classList.add(\"dark\");\n      } else {\n        document.documentElement.classList.remove(\"dark\");\n        document.getElementById(\"root\")?.classList.remove(\"dark\");\n      }\n      return newMode;\n    });\n  };\n\n  // Determine if we're dealing with a small solution for UI adaptation\n  const isSmallSolution = totalCapex <= 60;\n\n  // Prepare dynamic cost estimates based on solution size\n  const capexEstimate = isSmallSolution ? \"$5,000\" : \"$50,000\";\n  const opexEstimate = isSmallSolution ? \"$500\" : \"$50,000\";\n\n  // Prepare adapter functions for options\n  const adaptedIntegrityOptions = Object.entries(integrityOptions).reduce(\n    (acc, [key, value]) => {\n      acc[key] = typeAdapters.toIntegrityDetail(value);\n      return acc;\n    },\n    {} as Record<string, any>\n  );\n\n  const adaptedConfidentialityOptions = Object.entries(\n    confidentialityOptions\n  ).reduce((acc, [key, value]) => {\n    acc[key] = typeAdapters.toConfidentialityDetail(value);\n    return acc;\n  }, {} as Record<string, any>);\n\n  const adaptedAvailabilityOptions = Object.entries(availabilityOptions).reduce(\n    (acc, [key, value]) => {\n      acc[key] = typeAdapters.toAvailabilityDetail(value);\n      return acc;\n    },\n    {} as Record<string, any>\n  );\n\n  return (\n    <div\n      className={`app-container ${darkMode ? \"dark bg-pattern\" : \"\"}`}\n      data-testid={APP_TEST_IDS.APP_CONTAINER}\n    >\n      <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 p-4 transition-colors duration-300\">\n        <div className=\"w-full mx-auto\">\n          {/* App title and theme toggle */}\n          <div className=\"app-title shadow-lg rounded-xl transition-colors duration-300 dark:security-card p-4 flex items-center justify-between\">\n            <div>\n              <h1\n                data-testid={APP_TEST_IDS.APP_TITLE}\n                className=\"text-2xl font-bold text-gray-800 dark:text-gray-100 dark:widget-title transition-colors duration-300 flex items-center\"\n              >\n                <img\n                  src=\"https://hack23.github.io/cia-compliance-manager/icon-192.png\"\n                  alt=\"CIA Compliance Manager Logo\"\n                  style={{ height: \"48px\" }}\n                  className=\"w-auto mr-1\"\n                />\n                {UI_TEXT.APP_TITLE}\n              </h1>\n              <div\n                className=\"terminal-text text-xs flex items-center mt-1\"\n                style={{ color: \"#22c55e\" }}\n              >\n                <span\n                  className=\"mr-1\"\n                  data-testid=\"app-indicator\"\n                  style={{ color: \"#22c55e\" }}\n                >\n                  ■\n                </span>\n                <span\n                  className=\"mr-2\"\n                  data-testid=\"app-version\"\n                  style={{ color: \"#22c55e\" }}\n                >\n                  v{appVersion}\n                </span>\n                <a\n                  href=\"https://github.com/Hack23/cia-compliance-manager\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"hover:underline mr-2\"\n                  data-testid=\"source-link\"\n                  style={{ color: \"#22c55e\" }}\n                >\n                  Source\n                </a>\n                <span style={{ color: \"#22c55e\" }}>|</span>\n                <a\n                  href=\"https://hack23.github.io/cia-compliance-manager/documentation.html\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"hover:underline mx-2\"\n                  data-testid=\"docs-link\"\n                  style={{ color: \"#22c55e\" }}\n                >\n                  Doc\n                </a>\n                <span style={{ color: \"#22c55e\" }}>|</span>\n                <a\n                  href=\"https://hack23.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"hover:underline\"\n                  data-testid=\"author-link\"\n                  style={{ color: \"#22c55e\" }}\n                >\n                  Hack23\n                </a>\n              </div>\n            </div>\n            <button\n              data-testid={APP_TEST_IDS.THEME_TOGGLE}\n              onClick={toggleDarkMode}\n              className={`px-4 py-2 rounded-md flex items-center transition-all duration-300 ${\n                darkMode\n                  ? \"bg-black border border-green-500 hover:border-green-400 hover:bg-gray-900 cyberbutton\"\n                  : \"bg-blue-500 hover:bg-blue-600 text-white\"\n              }`}\n            >\n              {darkMode ? (\n                <>\n                  <span className=\"mr-2 text-green-400\">☀️</span>\n                  <span className=\"text-green-400 font-mono tracking-wide text-sm uppercase\">\n                    Light Mode\n                  </span>\n                </>\n              ) : (\n                <>\n                  <span className=\"mr-2\">🌙</span> Dark Mode\n                </>\n              )}\n            </button>\n          </div>\n\n          {/* Main dashboard */}\n          <div className=\"bg-white dark:bg-gray-800 shadow-lg rounded-xl p-6 mb-6 transition-colors duration-300\">\n            <Dashboard>\n              {/* Security Level Selection */}\n              <DashboardWidget\n                title={WIDGET_TITLES.SECURITY_LEVEL}\n                icon=\"SECURITY_LEVEL\"\n                testId=\"widget-security-level-selection\"\n              >\n                <SecurityLevelWidget\n                  availabilityLevel={availability}\n                  integrityLevel={integrity}\n                  confidentialityLevel={confidentiality}\n                  setAvailability={setAvailability}\n                  setIntegrity={setIntegrity}\n                  setConfidentiality={setConfidentiality}\n                />\n              </DashboardWidget>\n\n              {/* Security Summary */}\n              <DashboardWidget\n                title={WIDGET_TITLES.SECURITY_SUMMARY}\n                icon=\"SECURITY_SUMMARY\"\n                testId=\"widget-security-summary\"\n              >\n                <SecuritySummaryWidget\n                  securityLevel={overallSecurityLevel as SecurityLevel}\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Business Impact Analysis - New Widget */}\n              <DashboardWidget\n                title={WIDGET_TITLES.BUSINESS_IMPACT}\n                icon=\"BUSINESS_IMPACT\"\n                testId=\"widget-business-impact-container\"\n              >\n                <BusinessImpactAnalysisWidget\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                  securityLevel={overallSecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Technical Details - New Widget */}\n              <DashboardWidget\n                title={WIDGET_TITLES.TECHNICAL_IMPLEMENTATION}\n                icon=\"TECHNICAL_IMPLEMENTATION\"\n                testId=\"widget-technical-details-container\"\n              >\n                <TechnicalDetailsWidget\n                  availabilityLevel={availability}\n                  integrityLevel={integrity}\n                  confidentialityLevel={confidentiality}\n                />\n              </DashboardWidget>\n\n              {/* Cost Estimation */}\n              <DashboardWidget\n                title={WIDGET_TITLES.COST_ESTIMATION}\n                icon=\"COST_ESTIMATION\"\n                testId=\"widget-cost-estimation\"\n              >\n                <CostEstimationWidget\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Value Creation */}\n              <DashboardWidget\n                title={WIDGET_TITLES.VALUE_CREATION}\n                icon=\"VALUE_CREATION\"\n                testId=\"widget-value-creation\"\n              >\n                <ValueCreationWidget\n                  securityLevel={overallSecurityLevel as SecurityLevel}\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Compliance Status */}\n              <DashboardWidget\n                title={WIDGET_TITLES.COMPLIANCE_STATUS}\n                icon=\"COMPLIANCE_STATUS\"\n                testId=\"widget-compliance-status\"\n              >\n                <ComplianceStatusWidget\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Security Visualization */}\n              <DashboardWidget\n                title={WIDGET_TITLES.SECURITY_VISUALIZATION}\n                icon=\"SECURITY_VISUALIZATION\"\n                testId=\"widget-radar-chart\"\n              >\n                <SecurityVisualizationWidget\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Confidentiality Impact - New Widget */}\n              <DashboardWidget\n                title={WIDGET_TITLES.CONFIDENTIALITY_IMPACT}\n                icon=\"CONFIDENTIALITY_IMPACT\"\n                testId=\"widget-confidentiality-impact-container\"\n              >\n                <ConfidentialityImpactWidget\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  availabilityLevel={availability as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Integrity Impact - New Widget */}\n              <DashboardWidget\n                title={WIDGET_TITLES.INTEGRITY_IMPACT}\n                icon=\"INTEGRITY_IMPACT\"\n                testId=\"widget-integrity-impact-container\"\n              >\n                <IntegrityImpactWidget\n                  integrityLevel={integrity as SecurityLevel}\n                  availabilityLevel={availability as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n\n              {/* Availability Impact - New Widget */}\n              <DashboardWidget\n                title={WIDGET_TITLES.AVAILABILITY_IMPACT}\n                icon=\"AVAILABILITY_IMPACT\"\n                testId=\"widget-availability-impact-container\"\n              >\n                <AvailabilityImpactWidget\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                  options={adaptedAvailabilityOptions}\n                />\n              </DashboardWidget>\n\n              {/* Security Resources - New Widget */}\n              <DashboardWidget\n                title={WIDGET_TITLES.SECURITY_RESOURCES}\n                icon=\"SECURITY_RESOURCES\"\n                testId=\"widget-security-resources-container\"\n              >\n                <SecurityResourcesWidget\n                  securityLevel={overallSecurityLevel as SecurityLevel}\n                  availabilityLevel={availability as SecurityLevel}\n                  integrityLevel={integrity as SecurityLevel}\n                  confidentialityLevel={confidentiality as SecurityLevel}\n                />\n              </DashboardWidget>\n            </Dashboard>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CIAClassificationApp;\n","import \"./App.css\"; // Keep the import to avoid build errors\nimport CIAClassificationApp from \"./application/CIAClassificationApp\";\nimport { APP_TEST_IDS } from \"./constants/testIds\";\n\n/**\n * Main App component\n * Acts as a simple wrapper around CIAClassificationApp to maintain backward compatibility\n */\nfunction App() {\n  return (\n    <div className=\"app-root\" data-testid={APP_TEST_IDS.APP_ROOT}>\n      <div data-testid={APP_TEST_IDS.CIA_CLASSIFICATION_APP}>\n        <CIAClassificationApp />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["SECURITY_LEVEL_COLORS","BACKGROUND","NONE","LOW","MODERATE","HIGH","VERY_HIGH","DARK_MODE","CIA_COMPONENT_COLORS","PRIMARY","getSecurityLevelColorPair","level","isDarkMode","document","documentElement","classList","contains","normalizedLevel","replace","toUpperCase","bg","text","_availabilityOptions","None","description","technical","businessImpact","capex","opex","recommendations","uptime","businessImpactDetails","financialImpact","riskLevel","annualRevenueLoss","operationalImpact","meanTimeToRecover","regulatory","complianceViolations","securityIcon","Low","rto","rpo","mttr","Moderate","High","strategic","_integrityOptions","validationMethod","_confidentialityOptions","protectionMethod","reputationalImpact","_ROI_ESTIMATES","value","returnRate","potentialSavings","breakEvenPeriod","implementationCost","availabilityOptions","integrityOptions","confidentialityOptions","ROI_ESTIMATES","RISK_LEVELS","SECURITY_LEVELS","CIA_LABELS","CIA_COMPONENT_ICONS","SECURITY_RECOMMENDATIONS","BASIC","COST_ANALYSIS","UI_TEXT","SECURITY_LEVEL","RegExp","Object","values","SOC2","ISO27001","PCI_DSS","HIPAA","NIST","join","WIDGET_ICONS","SECURITY_SUMMARY","SECURITY_VISUALIZATION","COMPLIANCE_STATUS","VALUE_CREATION","COST_ESTIMATION","BUSINESS_IMPACT","TECHNICAL_IMPLEMENTATION","AVAILABILITY_IMPACT","INTEGRITY_IMPACT","CONFIDENTIALITY_IMPACT","SECURITY_RESOURCES","CIA_TEST_IDS","WIDGET_TEST_IDS","BUSINESS_IMPACT_TEST_IDS","FRAMEWORK_TEST_IDS","CHART_TEST_IDS","COST_TEST_IDS","SUMMARY_TEST_IDS","APP_TEST_IDS","COMMON_COMPONENT_TEST_IDS","AVAILABILITY_IMPACT_TEST_IDS","CONFIDENTIALITY_IMPACT_TEST_IDS","INTEGRITY_IMPACT_TEST_IDS","TECHNICAL_DETAILS_TEST_IDS","SECURITY_RESOURCES_TEST_IDS","SECURITY_LEVEL_TEST_IDS","VALUE_CREATION_TEST_IDS","createDynamicTestId","id","WIDGET_TITLES","normalizeSecurityLevel","includes","toLowerCase","validLevel","getSecurityLevelValue","getSecurityLevelClass","getSecurityLevelBadgeVariant","defaultDataProvider","roiEstimates","getDefaultSecurityIcon","getDefaultValuePoints","defaultPoints","defaultService","dataProvider","getCIAOptions","component","getComponentDetails","getDefaultDevelopmentEffort","getDefaultMaintenanceEffort","getDefaultExpertiseLevel","calculateRoi","availabilityLevel","integrityLevel","confidentialityLevel","levels","safeGetIndex","index","indexOf","availIdx","integrityIdx","confidentialityIdx","Math","round","getComplianceStatus","levelValues","availValue","integValue","confidValue","compliantFrameworks","partiallyCompliantFrameworks","nonCompliantFrameworks","push","requirements","generateRequirements","remediationSteps","steps","generateRemediationSteps","getComponentMetrics","details","regulatoryImpactDesc","regulatoryImpact","keyImpact","determineKeyImpact","metric","determineMetric","determineBusinessImpact","a","i","c","determineTechnicalImpact","determineRegulatoryImpact","calculateSecurityScore","levelToScore","calculateCostEffectivenessScore","getBusinessImpact","summary","financial","operational","impactDetails","reputational","competitiveAdvantage","complianceImpact","getDetailedDescription","getBusinessPerspective","businessPerspective","getRecommendations","Array","isArray","getROIEstimates","key","keys","getSecurityMetrics","availDetail","integrityDetail","confidentialityDetail","totalCapex","totalOpex","capexEstimate","opexEstimate","isSmallSolution","roi","getImpactMetrics","availability","integrity","confidentiality","technicalImpact","securityScore","complianceScore","costEffectivenessScore","getSecurityResources","securityLevel","title","url","category","tags","relevanceScore","type","getTechnicalImplementation","technicalImplementation","implementationSteps","effort","development","maintenance","expertise","technologies","getSecurityLevelDescription","getInformationSensitivity","getProtectionLevel","calculateBusinessImpactLevel","availLevel","integrLevel","confLevel","availIndex","integrIndex","confIndex","getRiskBadgeVariant","Critical","Medium","Minimal","getCategoryIcon","icons","FINANCIAL","OPERATIONAL","REPUTATIONAL","REGULATORY","STRATEGIC","NEUTRAL","getValuePoints","availDetails","valuePoints","length","getROIEstimate","getImplementationConsiderations","getComponentImplementationDetails","defaultEffort","defaultSteps","getBusinessImpactDescription","getTechnicalDescription","getSecurityIcon","getCompliantFrameworks","getFrameworkDescription","framework","GDPR","CCPA","getImplementationTime","totalScore","createCIAContentService","StatusBadge","status","children","className","size","testId","jsxRuntimeExports","jsx","baseClasses","getBaseClasses","variantMap","success","warning","error","info","purple","neutral","getVariantClasses","CIAImpactCard","icon","badgeVariant","cardClass","jsxs","KeyValuePair","label","valueClassName","labelClassName","WidgetContainer","style","loading","containerClasses","containerStyle","gridColumn","width","gridRow","height","message","AvailabilityImpactWidget","_integrityLevel","_confidentialityLevel","options","_options","showAllRecommendations","setShowAllRecommendations","useState","availabilityDetails","useMemo","ciaContentService","technicalDetails","impactDescription","role","slice","map","step","idx","onClick","recommendation","Error","BusinessImpactAnalysisWidget","activeComponent","activeTab","setActiveTab","availabilityImpact","integrityImpact","confidentialityImpact","availabilityMetrics","integrityMetrics","confidentialityMetrics","impact","metrics","color","getActiveImpact","borderColor","borderLeftColor","ComplianceStatusWidget","safeAvailability","safeIntegrity","safeConfidentiality","complianceData","data","totalFrameworks","score","calculateComplianceScore","ConfidentialityImpactWidget","confidentialityDetails","sensitivity","MetricsCard","subtitle","accentColor","trend","variant","displayValue","setDisplayValue","valueString","String","numericValue","parseInt","useEffect","increment","current","timer","setInterval","clearInterval","formattedValue","toLocaleString","split","toString","direction","getValueColor","WidgetHeader","iconKey","actions","iconToDisplay","SecurityLevelSummaryItem","compact","getIconClass","getLevelClass","borderLeft","IntegrityImpactWidget","integrityDetails","SecurityResourcesWidget","activeCategory","setActiveCategory","searchQuery","setSearchQuery","networkActivity","setNetworkActivity","trim","setTimeout","clearTimeout","resources","categories","from","Set","resource","filteredResources","filtered","filter","query","some","tag","sort","b","xmlns","viewBox","fill","fillRule","d","clipRule","placeholder","onChange","e","target","Fragment","Framework","Standard","Tool","Article","Video","Course","Book","Resource","Training","tagIndex","href","rel","stroke","strokeLinecap","strokeLinejoin","strokeWidth","SecuritySummaryWidget","showTechnicalDetails","setShowTechnicalDetails","showBusinessImpact","setShowBusinessImpact","showMetrics","setShowMetrics","securityDescription","roiData","roiValue","availabilityTechDescription","integrityTechDescription","confidentialityTechDescription","availabilityBusinessImpact","integrityBusinessImpact","confidentialityBusinessImpact","transform","rec","RadarChart","chartRef","useRef","chartInstanceRef","renderError","setRenderError","setIsDarkMode","securityLevels","mapLevelToValue","observer","MutationObserver","mutations","forEach","mutation","attributeName","newDarkMode","observe","attributes","disconnect","destroy","ctx","getContext","availabilityValue","integrityValue","confidentialityValue","backgroundColor","gridColor","textColor","Chart","labels","datasets","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","responsive","maintainAspectRatio","scales","r","angleLines","grid","pointLabels","font","min","max","ticks","backdropColor","z","stepSize","callback","beginAtZero","plugins","legend","display","family","boxWidth","boxHeight","tooltip","callbacks","context","raw","resizeHandler","resize","window","addEventListener","removeEventListener","containerClassName","ref","SecurityVisualizationWidget","riskMetrics","avgSecurityScore","valueAtRisk","probability","riskScore","calculateRiskMetrics","showTips","setShowTips","typedText","setTypedText","fullText","typingInterval","prev","charAt","getRiskColor","left","boxShadow","TechnicalDetailsWidget","actualAvailabilityLevel","actualIntegrityLevel","actualConfidentialityLevel","handleTabChange","tab","badgeColor","getActiveDetails","tech","req","ValueCreationWidget","point","convertSizeToWidgetSize","widgetRegistry","widgets","Map","register","definition","finalDefinition","order","this","set","get","getAll","renderWidget","props","widget","finalProps","defaultProps","handleWidgetError","renderWidgets","widgetProps","combinedProps","overallSecurityLevel","availabilityIndex","integrityIndex","confidentialityIndex","calculateOverallSecurityLevel","substring","position","Dashboard","useRegistry","columnsSmall","columnsMedium","columnsLarge","showBorders","impactWidgetProps","securityProps","calculateOverallLevel","calculateCostProps","React","Children","child","isValidElement","intLevel","DashboardWidget","headerClassName","showHeader","colSpan","rowSpan","headerContent","fullHeight","emptyState","CostEstimationWidget","securityMetrics","implementationTime","threeYearTotal","formatCurrency","match","amount","suffix","SecurityLevelSelector","onAvailabilityChange","onIntegrityChange","onConfidentialityChange","propAvailabilityOptions","propIntegrityOptions","propConfidentialityOptions","showSelectionSummary","disabled","showDescriptions","setAvailability","setIntegrity","setConfidentiality","activeTooltip","setActiveTooltip","activeDescription","setActiveDescription","hookAvailabilityOptions","hookIntegrityOptions","hookConfidentialityOptions","availabilityOpts","integrityOpts","confidentialityOpts","useCIAOptions","showTooltip","hideTooltip","renderOptions","optionsObject","componentType","safeCastToSecurityLevel","safeComponent","safeCastToComponentType","shortDesc","htmlFor","onMouseEnter","onMouseLeave","SecurityLevelWidget","typeAdapters","toIntegrityDetail","technicalControls","complianceImplications","toConfidentialityDetail","technicalMeasures","toAvailabilityDetail","CIAClassificationApp","darkMode","setDarkMode","matchMedia","matches","testEventHandler","CustomEvent","detail","prefersDark","add","getElementById","entries","reduce","acc","adaptedAvailabilityOptions","src","alt","newMode","remove","App","ReactDOM","createRoot","render","StrictMode"],"mappings":"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"}