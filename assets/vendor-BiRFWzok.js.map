{"version":3,"file":"vendor-BiRFWzok.js","sources":["../../node_modules/scheduler/index.js","../../node_modules/scheduler/cjs/scheduler.production.js","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/chart.js/auto/auto.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0), requestHostCallback();\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return exports.unstable_now() - startTime < frameInterval ? !1 : !0;\n}\nfunction performWorkUntilDeadline() {\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostCallback() {\n  isMessageLoopRunning ||\n    ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n}\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_continueExecution = function () {\n  isHostCallbackScheduled ||\n    isPerformingWork ||\n    ((isHostCallbackScheduled = !0), requestHostCallback());\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_getFirstCallbackNode = function () {\n  return peek(taskQueue);\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_pauseExecution = function () {};\nexports.unstable_requestPaint = function () {};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0), requestHostCallback()));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["schedulerModule","exports","push","heap","node","index","length","a","parentIndex","parent","compare","peek","pop","first","last","halfLength","leftIndex","left","rightIndex","right","b","diff","sortIndex","id","unstable_now","performance","now","localPerformance","localDate","Date","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","firstTimer","requestHostTimeout","schedulePerformWorkUntilDeadline","isMessageLoopRunning","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","priorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","task","unstable_continueExecution","unstable_forceFrameRate","fps","Math","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","unstable_shouldYield","unstable_wrapCallback","parentPriorityLevel","apply","this","arguments","round","v","lim","l","h","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","registerables","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}