{
  "cSpell.words": [
    "capex",
    "opex",
    "CAPEX",
    "OPEX",
    "Elems",
    "partyrock",
    "testid",
    "jsdom",
    "vitest",
    "tailwindcss",
    "esbuild",
    "autoprefixer",
    "postcss",
    "dbaeumer",
    "esbenp",
    "antfu",
    "Zixuan",
    "bradlc",
    "dsznajder",
    "hbenl",
    "ryanluker",
    "kohler",
    "formulahendry",
    "errorlens",
    "usernamehw",
    "eamodio",
    "gitlens",
    "oderwat",
    "deque",
    "stackbreak",
    "mhutchie",
    "devcontainers",
    "libgbm",
    "libnotify",
    "libnss",
    "libxss",
    "libasound",
    "libxtst",
    "xauth",
    "dbus",
    "pkill",
    "xvfb",
    "Xvfb",
    "DBUS",
    // Added domain-specific terms
    "NIST",
    "GDPR",
    "HIPAA",
    "SOC2",
    "CSF",
    "GRC",
    "SIEM",
    "SOAR",
    "CMDB",
    "ITSM",
    "OSCAL",
    "TAXII",
    "STIX",
    "triad",
    "RBAC",
    // Additional security and compliance terms
    "MTTR",
    "MTBF",
    "MTTD",
    "MTTF",
    "MTTS",
    "RPO",
    "RTO",
    "BCM",
    "BCP",
    "DRP",
    "MFA",
    "FIPS",
    "ZTA",
    "ZERO",
    // UI/UX terms
    "WCAG",
    "a11y",
    "microcopy",
    "heatmap",
    "wireframe",
    "handoff",
    "microinteraction",
    "prototyping",
    "affordance",
    "usability",
    "skeuomorphic",
    "neumorphic",
    // Business development terms
    "CISO",
    "CRO",
    "ROI",
    "TCO",
    "TAM",
    "SAM",
    "SOM",
    "KPI",
    "OKR",
    "GTM",
    "CAC",
    "LTV",
    "ARR",
    "MRR",
    "B2B",
    "B2G",
    "RACI"
  ],
  "cSpell.ignorePaths": [
    "package-lock.json",
    "node_modules",
    "vscode-extension",
    ".git/objects",
    ".vscode",
    ".vscode-insiders"
  ],

  // Editor settings
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.linkedEditing": true,
  "editor.stickyScroll.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,

  // TypeScript settings - enhanced for quality
  "typescript.preferences.importModuleSpecifier": "shortest",
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.suggestionActions.enabled": true,
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.preferences.quoteStyle": "single",
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "typescript.preferences.useAliasesForRenames": false,
  "typescript.suggest.completeJSDocs": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.preferences.renameMatchingJsxTags": true,
  "javascript.preferences.renameMatchingJsxTags": true,

  // Tailwind settings
  "tailwindCSS.experimental.classRegex": [
    ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
  ],
  "tailwindCSS.emmetCompletions": true,
  "css.validate": false,

  // Testing settings - enhanced
  "vitest.enable": true,
  "vitest.commandLine": "npx vitest",
  "vitest.include": ["**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}"],
  "testing.automaticallyOpenPeekView": "never",
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,
  "coverage-gutters.highlightdark": "rgba(45, 121, 10, 0.2)",
  "coverage-gutters.noHighlightDark": "rgba(121, 31, 10, 0.2)",
  "coverage-gutters.partialHighlightDark": "rgba(245, 196, 0, 0.2)",
  "vitest.showFailMessages": true,

  // File associations
  "files.associations": {
    "*.css": "tailwindcss",
    "*.module.css": "tailwindcss",
    "*.test.ts": "typescript",
    "*.test.tsx": "typescriptreact",
    "*.cy.ts": "typescript"
  },

  // Error visualization
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],
  "errorLens.exclude": ["never used"],
  "problems.showCurrentInStatus": true,

  // Eslint settings - enhanced
  "eslint.validate": [
    "typescript",
    "typescriptreact",
    "javascript",
    "javascriptreact"
  ],
  "eslint.enable": true,
  "eslint.format.enable": true,
  "eslint.run": "onType",
  "eslint.workingDirectories": [{ "mode": "auto" }, "./src", "./cypress"],
  "eslint.codeActionsOnSave.rules": [
    "@typescript-eslint/no-unused-vars",
    "@typescript-eslint/no-explicit-any",
    "react-hooks/rules-of-hooks",
    "react-hooks/exhaustive-deps"
  ],

  // Copilot settings
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "typescript": true,
    "typescriptreact": true,
    "javascript": true,
    "javascriptreact": true
  },
  "github.copilot.advanced": {
    "language.enableAutoCompletions": {
      "typescript": true,
      "typescriptreact": true
    },
    "indentationMode": "keep",
    "inlineSuggestCount": 3,
    "listCount": 5,
    "temperature": 0.3
  },

  // Custom instructions for GitHub Copilot - updated with v1.0 release priority
  "github.copilot.editor.customization": {
    "repositoryInstructions": {
      "instructions": "You're working on the CIA Compliance Manager application (version 0.8.4), which helps organizations assess security controls across the Confidentiality, Integrity, and Availability (CIA) triad. The TOP PRIORITY is to reach version 1.0 by completing and fixing existing functionality only, not adding new features. Focus on stability, correctness, and completing what's already started.\n\n1. VERSION 1.0 PRIORITY FOCUS:\n- ONLY fix and complete existing widgets - no new features\n- Fix bugs and inconsistencies in current implementation\n- Ensure data consistency between components and services\n- Complete any partially implemented functionality\n- Optimize performance of existing code\n- Increase test coverage for current features\n- Follow existing patterns exactly - don't introduce new patterns\n\n2. BUSINESS CONTEXT:\n- This application helps security officers evaluate and implement security controls\n- Security is assessed across Confidentiality, Integrity, and Availability\n- Each security component has levels: None, Low, Moderate, High, Very High\n- Availability levels measure uptime from <90% to 99.99% with corresponding RTO/RPO metrics\n- Integrity levels range from no validation to blockchain/distributed validation\n- Confidentiality levels range from no controls to military-grade encryption with zero trust\n- Business impact is evaluated across: Financial, Operational, Regulatory, Reputational, Strategic\n- Compliance is mapped to frameworks like NIST, ISO, GDPR, HIPAA, SOC2\n- Implementation costs are tracked as CAPEX (upfront) and OPEX (ongoing)\n- Target users include CISOs, security officers, compliance managers, and IT implementers\n- Value proposition includes cost optimization, risk reduction, and compliance simplification\n\n3. TYPESCRIPT STANDARDS:\n- Use TypeScript 5.8+ features including const type parameters and decorators\n- Always use explicit types (avoid 'any', prefer unknown if necessary)\n- Use interface for public API and type for internal structures\n- Use mapped types, conditional types, and utility types (Pick, Omit) where appropriate\n- Follow strict null checking principles with proper null guards\n- Use type narrowing with explicit type guards (isSecurityLevel, isWidgetConfig, etc.)\n- Use generics to improve code reuse and type safety\n- Use readonly modifiers for immutable data\n- Leverage discriminated unions for state management with exhaustive checking\n- Prefer const assertions for literal values (as const)\n\n4. UI/UX DESIGN PRINCIPLES:\n- Complete existing design patterns - don't introduce new ones\n- Follow WCAG 2.1 AA accessibility standards for all interactive elements\n- Use consistent color coding for security levels (red=critical, amber=warning, green=compliant)\n- Implement progressive disclosure for complex security information\n- Design with responsive layouts for desktop, tablet, and mobile viewports\n- Use clear microcopy that avoids technical jargon where possible\n- Create intuitive data visualizations for security metrics and compliance status\n- Add appropriate micro-interactions to improve user engagement\n- Include contextual help and tooltips for security terminology\n- Design for dark mode with appropriate contrast ratios\n\n5. BUSINESS VALUE FOCUS:\n- Ensure existing business value calculations are accurate and complete\n- Document ROI calculations and business justifications in comments\n- Verify that components correctly highlight cost savings and risk reduction\n- Complete any partially implemented executive reporting features\n- Ensure compliance mappings are complete and accurate\n- Verify calculation consistency across the application\n\n6. REACT COMPONENT DESIGN:\n- Complete and fix existing components - don't create new ones\n- Ensure all props have proper TypeScript interfaces\n- Add missing data-testid attributes matching the pattern in cypress/test-data/data-testid-analysis.md\n- Fix any inconsistent state management approaches\n- Complete error handling for all components\n- Optimize performance with useMemo/useCallback with proper dependency arrays\n- Fix any accessibility issues in existing components\n\nPlease help me complete version 1.0 by fixing and completing existing functionality only - no new features."
    }
  },

  // Additional supportive settings
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.test.ts, ${capture}.spec.ts, ${capture}.cy.ts",
    "*.tsx": "${capture}.test.tsx, ${capture}.spec.tsx, ${capture}.cy.tsx",
    "*.js": "${capture}.test.js, ${capture}.spec.js",
    "*.jsx": "${capture}.test.jsx, ${capture}.spec.jsx",
    "types.ts": "${capture}.d.ts, ${capture}.schema.ts"
  },
  "terminal.integrated.defaultProfile.linux": "bash",
  "diffEditor.ignoreTrimWhitespace": false
}
